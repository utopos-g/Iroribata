{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/kizuna_bullet/tables.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class KizunaBullet < Base\n      class RollTwiceRandomizerTable\n        def initialize(locale:, a_table:, b_table:)\n          @locale = locale\n          @a_table = a_table\n          @b_table = b_table\n        end\n\n        def roll(randomizer)\n          results = []\n\n          result_a = @a_table.roll(randomizer).to_s\n          results.push(result_a)\n\n          result_b = @b_table.roll(randomizer).to_s\n          results.push(result_b)\n\n          return results.join(\"\\n\")\n        end\n      end\n\n      class Roll4TimesRandomizerTable\n        def initialize(locale:, a_table:, b_table:, c_table:, d_table:)\n          @locale = locale\n          @a_table = a_table\n          @b_table = b_table\n          @c_table = c_table\n          @d_table = d_table\n        end\n\n        def roll(randomizer)\n          results = []\n\n          result_a = @a_table.roll(randomizer).to_s\n          results.push(result_a)\n\n          result_b = @b_table.roll(randomizer).to_s\n          results.push(result_b)\n\n          result_c = @c_table.roll(randomizer).to_s\n          results.push(result_c)\n\n          result_d = @d_table.roll(randomizer).to_s\n          results.push(result_d)\n\n          return results.join(\"\\n\")\n        end\n      end\n\n      class << self\n        private\n\n        def translate_tables(locale)\n          ordinary_days_place_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OP\", locale)\n          ordinary_days_content_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OC\", locale)\n          ordinary_days_work_place_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OWP\", locale)\n          ordinary_days_work_content_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OWC\", locale)\n          ordinary_days_holiday_place_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OHP\", locale)\n          ordinary_days_holiday_content_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OHC\", locale)\n          ordinary_days_trip_place_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OTP\", locale)\n          ordinary_days_trip_content_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.OTC\", locale)\n          encounter_place_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.EP\", locale)\n          encounter_order_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.EO\", locale)\n          encounter_first_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.EF\", locale)\n          encounter_acquaintance_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.EA\", locale)\n          encounter_end_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.EE\", locale)\n          communication_place_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.CP\", locale)\n          communication_content_table = DiceTable::Table.from_i18n(\"KizunaBullet.table.CC\", locale)\n          investigation_basic_table = DiceTable::D66Table.from_i18n(\"KizunaBullet.table.IB\", locale)\n          investigation_dynamic_table = DiceTable::D66Table.from_i18n(\"KizunaBullet.table.ID\", locale)\n          return {\n            \"OP\" => ordinary_days_place_table,\n            \"OC\" => ordinary_days_content_table,\n            \"OPC\" => RollTwiceRandomizerTable.new(\n              locale: locale,\n              a_table: ordinary_days_place_table,\n              b_table: ordinary_days_content_table\n            ).freeze,\n            \"OWP\" => ordinary_days_work_place_table,\n            \"OWC\" => ordinary_days_work_content_table,\n            \"OWPC\" => RollTwiceRandomizerTable.new(\n              locale: locale,\n              a_table: ordinary_days_work_place_table,\n              b_table: ordinary_days_work_content_table\n            ).freeze,\n            \"OHP\" => ordinary_days_holiday_place_table,\n            \"OHC\" => ordinary_days_holiday_content_table,\n            \"OHPC\" => RollTwiceRandomizerTable.new(\n              locale: locale,\n              a_table: ordinary_days_holiday_place_table,\n              b_table: ordinary_days_holiday_content_table\n            ).freeze,\n            \"OTP\" => ordinary_days_trip_place_table,\n            \"OTC\" => ordinary_days_trip_content_table,\n            \"OTPC\" => RollTwiceRandomizerTable.new(\n              locale: locale,\n              a_table: ordinary_days_trip_place_table,\n              b_table: ordinary_days_trip_content_table\n            ).freeze,\n            \"TT\" => DiceTable::D66Table.from_i18n(\"KizunaBullet.table.TT\", locale),\n            \"TTI\" => DiceTable::D66Table.from_i18n(\"KizunaBullet.table.TTI\", locale),\n            \"TTC\" => DiceTable::D66Table.from_i18n(\"KizunaBullet.table.TTC\", locale),\n            \"TTH\" => DiceTable::D66Table.from_i18n(\"KizunaBullet.table.TTH\", locale),\n            \"EP\" => encounter_place_table,\n            \"EO\" => encounter_order_table,\n            \"EF\" => encounter_first_table,\n            \"EA\" => encounter_acquaintance_table,\n            \"EE\" => encounter_end_table,\n            \"EFA\" => Roll4TimesRandomizerTable.new(\n              locale: locale,\n              a_table: encounter_place_table,\n              b_table: encounter_order_table,\n              c_table: encounter_first_table,\n              d_table: encounter_end_table\n            ).freeze,\n            \"EAA\" => Roll4TimesRandomizerTable.new(\n              locale: locale,\n              a_table: encounter_place_table,\n              b_table: encounter_order_table,\n              c_table: encounter_acquaintance_table,\n              d_table: encounter_end_table\n            ).freeze,\n            \"CP\" => communication_place_table,\n            \"CC\" => communication_content_table,\n            \"CPC\" => RollTwiceRandomizerTable.new(\n              locale: locale,\n              a_table: communication_place_table,\n              b_table: communication_content_table\n            ).freeze,\n            \"IB\" => investigation_basic_table,\n            \"ID\" => investigation_dynamic_table,\n            \"IBD\" => RollTwiceRandomizerTable.new(\n              locale: locale,\n              a_table: investigation_basic_table,\n              b_table: investigation_dynamic_table\n            ).freeze,\n            \"HA\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HA\", locale),\n            \"NI1\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NI1\", locale),\n            \"NI2\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NI2\", locale),\n            \"NI3\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NI3\", locale),\n            \"NI4\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NI4\", locale),\n            \"NI5\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NI5\", locale),\n            \"NI6\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NI6\", locale),\n            \"NT1\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NT1\", locale),\n            \"NT2\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NT2\", locale),\n            \"NT3\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NT3\", locale),\n            \"NT4\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NT4\", locale),\n            \"NT5\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NT5\", locale),\n            \"NT6\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.NT6\", locale),\n            \"HH1\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HH1\", locale),\n            \"HH2\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HH2\", locale),\n            \"HH3\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HH3\", locale),\n            \"HH4\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HH4\", locale),\n            \"HH5\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HH5\", locale),\n            \"HH6\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HH6\", locale),\n            \"HC1\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HC1\", locale),\n            \"HC2\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HC2\", locale),\n            \"HC3\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HC3\", locale),\n            \"HC4\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HC4\", locale),\n            \"HC5\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HC5\", locale),\n            \"HC6\" => DiceTable::Table.from_i18n(\"KizunaBullet.table.HC6\", locale),\n          }.freeze\n        end\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:GameSystem>", "<class:KizunaBullet>", "<class:RollTwiceRandomizerTable>", "initialize", "$kwargs", "@locale", "locale", "@a_table", "a_table", "@b_table", "b_table", "roll", "randomizer", "results", "result_a", "to_s", "push", "result_b", "join", "<class:Roll4TimesRandomizerTable>", "@c_table", "c_table", "@d_table", "d_table", "result_c", "result_d", "self", "private", "translate_tables", "ordinary_days_place_table", "DiceTable::Table", "DiceTable", "from_i18n", "ordinary_days_content_table", "ordinary_days_work_place_table", "ordinary_days_work_content_table", "ordinary_days_holiday_place_table", "ordinary_days_holiday_content_table", "ordinary_days_trip_place_table", "ordinary_days_trip_content_table", "encounter_place_table", "encounter_order_table", "encounter_first_table", "encounter_acquaintance_table", "encounter_end_table", "communication_place_table", "communication_content_table", "investigation_basic_table", "DiceTable::D66Table", "investigation_dynamic_table", "RollTwiceRandomizerTable", "new", "freeze", "Roll4TimesRandomizerTable", "Base"], :mappings=>"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"}}, {:offset=>{:line=>125, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/KizunaBullet.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nrequire \"bcdice/game_system/kizuna_bullet/tables\"\n\nmodule BCDice\n  module GameSystem\n    class KizunaBullet < Base\n      # ゲームシステムの識別子\n      ID = 'KizunaBullet'\n\n      # ゲームシステム名\n      NAME = 'キズナバレット'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'きすなはれつと'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・ダイスロール\n        nDM…n個の6面ダイスを転がして、一番高い出目を採用します。\n        ・［調査判定］\n        nIN…n個の6面ダイスを転がして、一番高い出目が5以上なら成功します。（［パートナーのヘルプ］使用可）\n        ・［鎮静判定］\n        SEn…2個の6面ダイスを転がして、出目の合計値がn（［ヒビワレ］状態の［キズナ］の個数）より高いと成功します。（［強制鎮静］使用可）\n        ・［解決］ ［アクション］のダメージと［アクシデント］のダメージ軽減\n        nSO…2+n個の6面ダイスを転がして、出目をすべて合計します。（nは減らした【励起値】。省略可能）\n        ・各種表\n        日常表・場所 OP\n        日常表・内容 OC\n        日常表・場所と内容 OPC\n        日常表（仕事）・場所 OWP\n        日常表（仕事）・内容 OWC\n        日常表（仕事）・場所と内容 OWPC\n        日常表（休暇）・場所 OHP\n        日常表（休暇）・内容 OHC\n        日常表（休暇）・場所と内容 OHPC\n        日常表（出張）・場所 OTP\n        日常表（出張）・内容 OTC\n        日常表（出張）・場所と内容 OTPC\n        ターンテーマ表 TT\n        ターンテーマ表・親密 TTI\n        ターンテーマ表・クール TTC\n        ターンテーマ表・主従 TTH\n        遭遇表・場所 EP\n        遭遇表・登場順 EO\n        遭遇表・状況（初対面） EF\n        遭遇表・状況（知り合い） EA\n        遭遇表・決着 EE\n        遭遇表・場所と登場順と状況（初対面）と決着 EFA\n        遭遇表・場所と登場順と状況（知り合い）と決着 EAA\n        交流表・場所 CP\n        交流表・内容 CC\n        交流表・場所と内容 CPC\n        調査表・ベーシック IB\n        調査表・ダイナミック ID\n        調査表・ベーシックとダイナミック IBD\n        ハザード表 HA\n        通常ダイジェスト　キミたちに新しい命令が下った（調査が依頼された）。\n        1:その事件の内容は…… NI1\n        2:捜査に向かった場所は…… NI2\n        3:犯人のキセキ使いは…… NI3\n        4:起きた出来事は…… NI4\n        5:バレットの間では…… NI5\n        6:戦いの結末は…… NI6\n        通常ダイジェスト　キミたちは旅行（出張）である場所を訪れた。\n        1:その場所とは…… NT1\n        2:そこで始まったのは…… NT2\n        3:極限状態のなかで…… NT3\n        4:犯人のキセキ使いは…… NT4\n        5:バレットの間では…… NT5\n        6:戦いの結末は…… NT6\n        ホリデーダイジェスト　キミたちは休日に出かけることにした。\n        1:その場所とは…… HH1\n        2:待ち合わせをしたら…… HH2\n        3:そしてなんと…… HH3\n        4:ふたりが決めたのは…… HH4\n        5:結果的に…… HH5\n        6:バレットは最後に…… HH6\n        ホリデーダイジェスト　キミたちは奇妙な事件に出くわした。\n        1:その場所とは…… HC1\n        2:起きた事件は…… HC2\n        3:犯人のキセキ使いは…… HC3\n        4:犯人を追い詰めるべく…… HC4\n        5:戦いの結果は…… HC5\n        6:バレットは最後に…… HC6\n      MESSAGETEXT\n\n      TABLES = translate_tables(@locale)\n\n      def initialize(command)\n        super(command)\n\n        @sides_implicit_d = 6\n        @round_type = RoundType::CEIL\n        @d66_sort_type = D66SortType::NO_SORT\n      end\n\n      def eval_game_system_specific_command(command)\n        roll_max(command) || roll_investigate(command) || roll_sedative(command) || roll_solve(command) || roll_tables(command, self.class::TABLES)\n      end\n\n      private\n\n      # 最大値\n      def roll_max(command)\n        parser = Command::Parser.new(\"DM\", round_type: @round_type)\n                                .has_prefix_number\n        parsed = parser.parse(command)\n        unless parsed\n          return nil\n        end\n\n        # 最大値計算\n        dice_list = @randomizer.roll_barabara(parsed.prefix_number, 6)\n        max = dice_list.max\n\n        return Result.new.tap do |r|\n          # テキストを整形\n          r.text = \"\#{command} ＞ [\#{dice_list.join(',')}] ＞ \#{max}\"\n        end\n      end\n\n      # 調査判定\n      def roll_investigate(command)\n        parser = Command::Parser.new(\"IN\", round_type: @round_type)\n                                .has_prefix_number\n        parsed = parser.parse(command)\n        unless parsed\n          return nil\n        end\n\n        texts = []\n        is_success = false\n        is_fumble = false\n\n        # 最大値計算\n        dice_list = @randomizer.roll_barabara(parsed.prefix_number, 6)\n        max = dice_list.max\n\n        if max >= 5\n          # 5以上の出目があった場合\n          # 成功フラグを立てる\n          is_success = true\n          # 成功メッセージを追加\n          texts.push(translate(\"KizunaBullet.INVESTIGATE.success\"))\n        elsif max >= 3\n          # 3以上の出目があった場合\n          # 失敗メッセージを追加\n          texts.push(translate(\"KizunaBullet.INVESTIGATE.failure\"))\n          # ［パートナーのヘルプ］メッセージを追加\n          texts.push(translate(\"KizunaBullet.INVESTIGATE.partnerHelp\"))\n        else\n          # 上記以外\n          # ファンブルフラグを立てる\n          is_fumble = true\n          # 失敗メッセージを追加\n          texts.push(translate(\"KizunaBullet.INVESTIGATE.failure\"))\n          # ファンブルメッセージを追加\n          texts.push(translate(\"KizunaBullet.INVESTIGATE.fumble\"))\n        end\n\n        return Result.new.tap do |r|\n          # テキストを整形\n          r.text = \"\#{command} ＞ [\#{dice_list.join(',')}] ＞ \#{texts.join('')}\"\n          # 各種成否を格納\n          r.condition = is_success\n          r.fumble = is_fumble\n        end\n      end\n\n      # 鎮静判定\n      def roll_sedative(command)\n        parser = Command::Parser.new(\"SE\", round_type: @round_type)\n                                .has_suffix_number\n        parsed = parser.parse(command)\n        unless parsed\n          return nil\n        end\n\n        text = ''\n        is_success = false\n\n        # 合計値計算\n        sum = @randomizer.roll_sum(2, 6)\n\n        if parsed.suffix_number > 12\n          # 目標値が12より大きい場合\n          # ［晶滅］メッセージを追加\n          text = translate(\"KizunaBullet.SEDATIVE.burst\")\n        elsif parsed.suffix_number < 6\n          # 目標値が6より小さい場合\n          # ［生存］メッセージを追加\n          text = translate(\"KizunaBullet.SEDATIVE.alive\")\n        elsif sum > parsed.suffix_number\n          # 合計値が目標値より大きい場合\n          # 成功フラグを立てる\n          is_success = true\n          # 成功メッセージを追加\n          text = translate(\"KizunaBullet.SEDATIVE.success\")\n        else\n          # 上記以外\n          # ［強制鎮静］に必要な［キズナ］のチェック数の計算\n          # 目標値と出目の差分を計算\n          dif = parsed.suffix_number - sum\n          # チェック一つごとに結果に+2\n          check = (dif / 2) + 1\n          # 失敗メッセージを追加\n          text = translate(\"KizunaBullet.SEDATIVE.failure\", check: check.to_s)\n        end\n\n        return Result.new.tap do |r|\n          # テキストを整形\n          r.text = \"\#{command} ＞ \#{sum} ＞ \#{text}\"\n          # 各種成否を格納\n          r.condition = is_success\n        end\n      end\n\n      # 解決 ［アクション］のダメージと［アクシデント］のダメージ軽減\n      def roll_solve(command)\n        parser = Command::Parser.new(\"SO\", round_type: @round_type)\n                                .enable_prefix_number\n        parsed = parser.parse(command)\n        unless parsed\n          return nil\n        end\n\n        # 合計値計算\n        sum = @randomizer.roll_sum(parsed.prefix_number.to_i + 2, 6)\n\n        return Result.new.tap do |r|\n          # テキストを整形\n          r.text = \"\#{command} ＞ \#{sum}\"\n        end\n      end\n\n      register_prefix('\\d+DM', '\\d+IN', 'SE\\d+', '\\d*SO', TABLES.keys)\n    end\n  end\nend\n"], :names=>["<main>", "self", "require", "<module:BCDice>", "<module:GameSystem>", "<class:KizunaBullet>", "translate_tables", "@locale", "initialize", "command", "@sides_implicit_d", "6", "@round_type", "RoundType::CEIL", "RoundType", "@d66_sort_type", "D66SortType::NO_SORT", "D66SortType", "eval_game_system_specific_command", "$ret_or_1", "$ret_or_2", "$ret_or_3", "$ret_or_4", "roll_max", "roll_investigate", "roll_sedative", "roll_solve", "roll_tables", "class::TABLES", "class", "private", "parser", "Command::Parser", "Command", "new", "has_prefix_number", "parsed", "parse", "dice_list", "@randomizer", "roll_barabara", "prefix_number", "max", "tap", "Result", "block in roll_max", "r", "block (2 levels) in roll_max", "text=", "join", "texts", "is_success", "is_fumble", ">=", "5", "push", "translate", "3", "block in roll_investigate", "block (2 levels) in roll_investigate", "condition=", "fumble=", "has_suffix_number", "text", "sum", "roll_sum", "2", ">", "suffix_number", "12", "<", "dif", "-", "check", "+", "/", "1", "to_s", "block in roll_sedative", "block (2 levels) in roll_sedative", "enable_prefix_number", "to_i", "block in roll_solve", "block (2 levels) in roll_solve", "register_prefix", "TABLES", "keys", "Base"], :mappings=>"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"}}]}
{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/GoldenSkyStories.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class GoldenSkyStories < Base\n      # ゲームシステムの識別子\n      ID = 'GoldenSkyStories'\n\n      # ゲームシステム名\n      NAME = 'ゆうやけこやけ'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'ゆうやけこやけ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ※「ゆうやけこやけ」はダイスロールを使用しないシステムです。\n        ※このダイスボットは部屋のシステム名表示用となります。\n\n        ・下駄占い (GETA)\n          あーしたてんきになーれ\n      MESSAGETEXT\n\n      register_prefix('geta')\n\n      def initialize(command)\n        super(command)\n        @enabled_upcase_input = false\n      end\n\n      def eval_game_system_specific_command(command)\n        debug('eval_game_system_specific_command command', command)\n\n        result = ''\n\n        case command\n        when /geta/i\n          result = getaRoll()\n        end\n\n        return nil if result.empty?\n\n        return \"\#{command} ＞ \#{result}\"\n      end\n\n      def getaRoll()\n        result = \"\"\n        dice = @randomizer.roll_once(7)\n\n        # result << \" あーしたてんきになーれっ ＞ [\#{diceList.join(',')}] ＞ \"\n        result += \"下駄占い ＞ \"\n\n        getaString = ''\n        case dice\n        when 1\n          getaString = '裏：あめ'\n        when 2\n          getaString = '表：はれ'\n        when 3\n          getaString = '裏：あめ'\n        when 4\n          getaString = '表：はれ'\n        when 5\n          getaString = '裏：あめ'\n        when 6\n          getaString = '表：はれ'\n        when 7\n          getaString = '横：くもり'\n        end\n\n        result += getaString\n\n        return result\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:GoldenSkyStories>", "self", "register_prefix", "initialize", "command", "@enabled_upcase_input", "eval_game_system_specific_command", "debug", "result", "$ret_or_1", "getaRoll", "empty?", "dice", "@randomizer", "roll_once", "7", "+", "getaString", "1", "2", "3", "4", "5", "6", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAEE,8BAAKA,kBAAL;QAGA,gCAAOA,SAAP;QAGA,oCAAWA,SAAX;QAGA,wCACNA,kCADqB,GAErBA,+BAFqB,GAGrBA,IAHqB,GAIrBA,gBAJqB,GAKrBA,iBALM;QAQAC,IAAAC,iBAAAA,CAAgBF,MAAhBE;;AAEAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAF,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMG,OAAN,CAAA,EAAA,IAAA;UACAD,OAAAE,CAAAA,4BAAwB,KAAxBA;QAFFF,CAAAA;;AAKAG,QAAAA,iDAAAA,6CAAsCF,OAAtCE;AAAAA,UAAAA;;;UACEL,IAAAM,OAAAA,CAAMD,2CAAN,EAAmDF,OAAnDG;UAEAC,SAASF;UAGT,IAAA,QAAK,OAAL,EADAG,CAAAA,YAAKL,OAALK,CACA,CAAA;YACED,SAASP,IAAAS,UAAAA,CAAAA;UADX;YADA;UACA;UAIA,IAAA,QAAcF,MAAMG,WAAAA,CAAAA,CAApB,CAAA;YAAA,OAAO;UAAP;UAEA,OAAO,EAAA,GAAA,CAAGP,OAAH,CAAA,GAAWE,KAAX,GAAA,CAAgBE,MAAhB;QAZTF,CAAAA;QAeAN,OAAAU,wBAAAA,oBAAAA;AAAAA,UAAAA;;;UACEF,SAASE;UACTE,OAAOC,eAAWC,WAAAA,CAAWC,CAAXD;UAGlBN,SAAOQ,SAAPR,MAAOQ,EAAGN,SAAHM;UAEPC,aAAaP;;UAEb,QADKE,IACL;YAAA,KAAKM,CAAL;cACED,aAAaP;cADf;YAEA,KAAKS,CAAL;cACEF,aAAaP;cADf;YAEA,KAAKU,CAAL;cACEH,aAAaP;cADf;YAEA,KAAKW,CAAL;cACEJ,aAAaP;cADf;YAEA,KAAKY,CAAL;cACEL,aAAaP;cADf;YAEA,KAAKa,CAAL;cACEN,aAAaP;cADf;YAEA,KAAKK,CAAL;cACEE,aAAaP;cADf;YAAA;cAbA;UACA;UAgBAF,SAAOQ,SAAPR,MAAOQ,EAAGC,UAAHD;UAEP,OAAOR;QA3BTE,CAAAA;MAzCFV,GAAAA,WAAAA,EAAyBwB,UAAzBxB;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
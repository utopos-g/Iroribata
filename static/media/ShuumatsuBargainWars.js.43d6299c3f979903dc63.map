{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/ShuumatsuBargainWars.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class ShuumatsuBargainWars < Base\n      # ゲームシステムの識別子\n      ID = \"ShuumatsuBargainWars\"\n\n      # ゲームシステム名\n      NAME = \"終末買い物戦争\"\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = \"しゆうまつはあけんうおおす\"\n\n      HELP_MESSAGE = <<~TEXT\n        ・行為判定 （nBGk+y>=t）n:ダイス数、k:心根、y:修正値（省略可)、t:目標値\n          例）3BG1>=3 2BG3+1>=4 4BG5-1>=3\n        ・アイテム表\n          ・RT 回復系アイテム表\n          ・CT 便利系アイテム表\n          ・WT 武器系アイテム表\n          ・WG ワゴン(全アイテムランダム)\n        ・ET イベント表\n        ・TT トラブル表\n      TEXT\n\n      def initialize(command)\n        super(command)\n        @sort_barabara_dice = true\n        @d66_sort_type = D66SortType::ASC\n      end\n\n      RecoveryItemTable = DiceTable::D66Table.new(\n        '回復系アイテム表',\n        D66SortType::ASC,\n        {\n          11 => '飴玉',\n          12 => 'エナジードリンク',\n          13 => 'せんべい',\n          14 => '餅',\n          15 => 'ロウソク',\n          16 => '酒',\n          22 => '寿司',\n          23 => 'ばんそうこう',\n          24 => 'お布団',\n          25 => 'カレー',\n          26 => '消毒液',\n          33 => '缶詰',\n          34 => 'みたらし団子',\n          35 => '骨付き肉',\n          36 => 'ステーキ',\n          44 => 'うちわ',\n          45 => 'ぬいぐるみ',\n          46 => 'のり',\n          55 => '美容液',\n          56 => '黄色いハンカチ',\n          66 => '洗剤',\n        }\n      )\n\n      ConvenienceItemTable = DiceTable::D66Table.new(\n        '便利系アイテム表',\n        D66SortType::ASC,\n        {\n          11 => 'ちくわ',\n          12 => '焼き芋',\n          13 => 'トイレットペーパー',\n          14 => '熊手',\n          15 => '胡椒',\n          16 => '鏡',\n          22 => '割りばし',\n          23 => '輪ゴム',\n          24 => '塩の結晶',\n          25 => 'プチプチマット',\n          26 => '長靴',\n          33 => 'バケツ',\n          34 => 'アルミホイル',\n          35 => '下敷き',\n          36 => '長芋',\n          44 => '鉛筆',\n          45 => 'まな板',\n          46 => 'フライパン',\n          55 => 'ほうき',\n          56 => 'クラッカー',\n          66 => '消臭スプレー',\n        }\n      )\n\n      WeaponItemTable = DiceTable::D66Table.new(\n        '武器系アイテム表',\n        D66SortType::ASC,\n        {\n          11 => 'アズキアイス',\n          12 => 'スプーン',\n          13 => 'フォーク',\n          14 => 'カミソリ',\n          15 => '電池',\n          16 => 'デッキブラシ',\n          22 => '傘',\n          23 => '物干し竿',\n          24 => '鉄パイプ',\n          25 => 'くぎ打ち機',\n          26 => 'モンキーレンチ',\n          33 => 'ハエタタキ',\n          34 => '鎌',\n          35 => '蛍光灯',\n          36 => '包丁',\n          44 => 'ハサミ',\n          45 => 'ショベル',\n          46 => '釣り竿',\n          55 => '芝刈り機',\n          56 => 'ステッキ',\n          66 => '小麦粉',\n        }\n      )\n\n      TABLES = {\n        \"ET\" => DiceTable::Table.new(\n          \"イベント表\",\n          \"2D6\",\n          [\n            \"ドッキン！一目惚れ！好きなキャラクターを1人選ぶ。このセッション中その相手との関係の深度を互いに3以上にすることができた場合、シナリオの結末に関係なく貴方は完全無欠のハッピーエンドを迎え経験点を100点得る。達成できなかった場合、エンディングフェイズで目が覚める。\",\n            \"おや？こんな所にアイテムが転がっている。ランダムに選んだアイテムを獲得する。そのアイテムの種別が支援・計画ならば[技術]/5の判定に成功すれば手番を消費せずそのアイテムを使用しても良い。\",\n            \"チームメンバーと二人っきりになる。ちょっといい雰囲気かも。好きなキャラクターを目標に選び、『関係』のチェックを外す事ができる。\",\n            \"あぶな～い！チームメンバーに危機が襲い掛かる。PCの中からランダムに1人を選び[武力]/5の判定を行う。成功すると互いに『関係』を結ぶことができる。失敗すると2人とも体力に1d6点のダメージ。\",\n            \"ちょっとお食事でも如何？自身の体力3点と活力1点を回復させる。\",\n            \"穏やかな時が流れる。このメンバーならこれからも上手くやっていけそうだ。ランダムにPCを選び『関係』を獲得する。\",\n            \"チームメンバーの意外な一面を覗く、まさかアイツあんな趣味があったなんて！PCの中からランダムで1人を選び[精神]/6で判定を行う。成功すると互いに『関係』を獲得する。失敗すると互いに活力が1点減少する。\",\n            \"仲間と意見が対立する。アイツにだけは負けられない！関係を持つPCの中からランダムで1人を選び、対象との関係の深度を1下げてもよい（0未満にならない）。下げた場合、以降のセッション中任意の能力値が1上昇したものとして判定を行う事ができる。この効果で実際に能力値は上がらない。\",\n            \"何かお手伝いをしよう。好きなキャラクターを1人選ぶ。この休憩中次に相手が判定を行う場合、その判定に修正値+1を加える。その後、目標は自分に対し『関係』を獲得する。\",\n            \"酒を発見、宴だぁああ！！！PCは全員回復アイテムの「酒」の効果を使用できる。その後、自分の持つ全ての『関係』をランダムな相手に同じ《深度》で取り直す。\",\n            \"不味い！敵襲だ！バナナワニにキリミウオが戦闘を仕掛けに来る。戦闘に勝利した場合、好きなアイテムを1つ得る。この処理が面倒ならば戦闘を行う代わりにPC達全員の体力の値を半分にし戦闘に勝利したものとして扱っても良い。\"\n          ]\n        ),\n        \"TT\" => DiceTable::Table.new(\n          \"トラブル表\",\n          \"1D6\",\n          [\n            \"緊張感からか焦りが生じる。以降スポットフェイズに行くまでの間あらゆる判定の成功度が1減少する。\",\n            \"カートの操作が効かなくなった！このラウンドは操作表を全員ダイスを振りランダムで決定する事。\",\n            \"派手な振動が起き頭をぶつける。全員1d6点のダメージを受ける。\",\n            \"集中力が切れて来た……全員の活力を1 点減少させる\",\n            \"激しく揺さぶられ荷物が落下する。カート内にあるアイテムを1 つ選ぶ。そのアイテムを失う。\",\n            \"不気味な超市場の雰囲気がパッセンジャー達の不安を煽る。特に何も起こらない。\",\n          ]\n        ),\n        \"RT\" => RecoveryItemTable,\n        \"CT\" => ConvenienceItemTable,\n        \"WT\" => WeaponItemTable,\n        \"WG\" => DiceTable::ChainTable.new(\n          \"ワゴン\",\n          \"1D6\",\n          [\n            RecoveryItemTable,\n            RecoveryItemTable,\n            ConvenienceItemTable,\n            ConvenienceItemTable,\n            WeaponItemTable,\n            WeaponItemTable,\n          ]\n        ),\n      }.freeze\n\n      register_prefix('\\d+BG', TABLES.keys)\n\n      def eval_game_system_specific_command(command)\n        return roll_bg(command) || roll_tables(command, TABLES)\n      end\n\n      private\n\n      def roll_bg(command)\n        parser = Command::Parser.new(\"BG\", round_type: @round_type)\n                                .has_prefix_number\n                                .has_suffix_number\n                                .restrict_cmp_op_to(:>=)\n        parsed = parser.parse(command)\n        return nil unless parsed\n\n        times = parsed.prefix_number\n        kokorone = parsed.suffix_number\n        correction = parsed.modify_number\n        target = parsed.target_number\n        dice_list = @randomizer.roll_barabara(times, 6).sort\n        success = dice_list.count { |number| number >= target - correction }\n        get_vitality = dice_list.count(kokorone)\n\n        result =\n          if dice_list.count(6) >= 2\n            Result.critical(\"スペシャル！ 成功度\#{success + 1}、活力\#{get_vitality}獲得\")\n          elsif dice_list.all?(1)\n            Result.fumble(\"ファンブル 活力をすべて失う\")\n          else\n            Result.new(\"成功度\#{success}、活力\#{get_vitality}獲得\")\n          end\n\n        result.text = \"(\#{parsed}) ＞ [\#{dice_list.join(',')}] ＞ \#{result.text}\"\n\n        return result\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:ShuumatsuBargainWars>", "initialize", "command", "self", "@sort_barabara_dice", "@d66_sort_type", "D66SortType::ASC", "D66SortType", "DiceTable::D66Table", "DiceTable", "new", "11", "12", "13", "14", "15", "16", "22", "23", "24", "25", "26", "33", "34", "35", "36", "44", "45", "46", "55", "56", "66", "DiceTable::Table", "RecoveryItemTable", "ConvenienceItemTable", "WeaponItemTable", "DiceTable::ChainTable", "freeze", "register_prefix", "TABLES", "keys", "eval_game_system_specific_command", "$ret_or_1", "roll_bg", "roll_tables", "private", "parser", "Command::Parser", "Command", "@round_type", "has_prefix_number", "has_suffix_number", "restrict_cmp_op_to", "parsed", "parse", "times", "prefix_number", "kokorone", "suffix_number", "correction", "modify_number", "target", "target_number", "dice_list", "@randomizer", "roll_barabara", "6", "sort", "success", "count", "block in roll_bg", "number", "block (2 levels) in roll_bg", ">=", "-", "get_vitality", "result", "2", "Result", "critical", "+", "1", "all?", "fumble", "text=", "join", "text", "Base"], :mappings=>"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"}}]}
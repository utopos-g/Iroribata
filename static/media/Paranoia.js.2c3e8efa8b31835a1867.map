{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Paranoia.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class Paranoia < Base\n      # ゲームシステムの識別子\n      ID = 'Paranoia'\n\n      # ゲームシステム名\n      NAME = 'パラノイア'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'はらのいあ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ※「パラノイア」は完璧なゲームであるため特殊なダイスコマンドを必要としません。\n        ※このダイスボットは部屋のシステム名表示用となります。\n      MESSAGETEXT\n\n      register_prefix('geta')\n\n      def initialize(command)\n        super(command)\n        @enabled_upcase_input = false\n      end\n\n      def eval_game_system_specific_command(command)\n        debug('eval_game_system_specific_command command', command)\n\n        result = ''\n\n        case command\n        when /geta/i\n          result = getaRoll()\n        end\n\n        return nil if result.empty?\n\n        return \"\#{command} ＞ \#{result}\"\n      end\n\n      def getaRoll()\n        result = \"\"\n\n        dice = @randomizer.roll_once(2)\n\n        result += \"幸福ですか？ ＞ \"\n\n        getaString = ''\n        case dice\n        when 1\n          getaString = '幸福です'\n        when 2\n          getaString = '幸福ではありません'\n        end\n\n        result += getaString\n\n        return result\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:Paranoia>", "self", "register_prefix", "initialize", "command", "@enabled_upcase_input", "eval_game_system_specific_command", "debug", "result", "$ret_or_1", "getaRoll", "empty?", "dice", "@randomizer", "roll_once", "2", "+", "getaString", "1", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAEE,8BAAKA,UAAL;QAGA,gCAAOA,OAAP;QAGA,oCAAWA,OAAX;QAGA,wCACNA,2CADqB,GAErBA,+BAFM;QAKAC,IAAAC,iBAAAA,CAAgBF,MAAhBE;;AAEAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAF,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMG,OAAN,CAAA,EAAA,IAAA;UACAD,OAAAE,CAAAA,4BAAwB,KAAxBA;QAFFF,CAAAA;;AAKAG,QAAAA,iDAAAA,6CAAsCF,OAAtCE;AAAAA,UAAAA;;;UACEL,IAAAM,OAAAA,CAAMD,2CAAN,EAAmDF,OAAnDG;UAEAC,SAASF;UAGT,IAAA,QAAK,OAAL,EADAG,CAAAA,YAAKL,OAALK,CACA,CAAA;YACED,SAASP,IAAAS,UAAAA,CAAAA;UADX;YADA;UACA;UAIA,IAAA,QAAcF,MAAMG,WAAAA,CAAAA,CAApB,CAAA;YAAA,OAAO;UAAP;UAEA,OAAO,EAAA,GAAA,CAAGP,OAAH,CAAA,GAAWE,KAAX,GAAA,CAAgBE,MAAhB;QAZTF,CAAAA;QAeAN,OAAAU,wBAAAA,oBAAAA;AAAAA,UAAAA;;;UACEF,SAASE;UAETE,OAAOC,eAAWC,WAAAA,CAAWC,CAAXD;UAElBN,SAAOQ,SAAPR,MAAOQ,EAAGN,WAAHM;UAEPC,aAAaP;;UAEb,QADKE,IACL;YAAA,KAAKM,CAAL;cACED,aAAaP;cADf;YAEA,KAAKK,CAAL;cACEE,aAAaP;cADf;YAAA;cAHA;UACA;UAMAF,SAAOQ,SAAPR,MAAOQ,EAAGC,UAAHD;UAEP,OAAOR;QAjBTE,CAAAA;MAtCFV,GAAAA,WAAAA,EAAiBmB,UAAjBnB;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
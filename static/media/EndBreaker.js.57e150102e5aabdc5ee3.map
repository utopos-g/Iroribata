{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/EndBreaker.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class EndBreaker < Base\n      # ゲームシステムの識別子\n      ID = 'EndBreaker'\n\n      # ゲームシステム名\n      NAME = 'エンドブレイカー！'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'えんとふれいかあ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・判定 (nEB)\n          n個のD6を振る判定。ダブルトリガー発動で自動振り足し。\n        ・各種表\n          ・生死不明表 (LDUT)\n      MESSAGETEXT\n\n      register_prefix('\\d+EB', 'LDUT')\n\n      def initialize(command)\n        super(command)\n\n        @d66_sort_type = D66SortType::NO_SORT\n      end\n\n      def eval_game_system_specific_command(command)\n        if command =~ /(\\d+)EB/i\n          diceCount = Regexp.last_match(1).to_i\n          return checkRoll(diceCount)\n        end\n\n        tableName = \"\"\n        text = \"\"\n        number = 0\n\n        case command\n        when \"LDUT\"\n          tableName = \"生死不明表\"\n          text, number = getLifeAndDeathUnknownResult()\n        else\n          return nil\n        end\n\n        result = \"\#{tableName}(\#{number}):\#{text}\"\n\n        return result\n      end\n\n      def checkRoll(diceCount)\n        debug(\"EndBreaker diceCount\", diceCount)\n\n        rollCount = diceCount # ダブルトリガー\n\n        result = \"\"\n        diceFullList = []\n\n        while rollCount != 0\n          diceList = @randomizer.roll_barabara(rollCount, 6).sort\n          diceFullList.concat(diceList)\n\n          # 1の出目ごとにダブルトリガーで2個ダイス追加\n          rollCount = diceList.select { |i| i == 1 }.size * 2\n\n          result += \"[\#{diceList.join}]\"\n          result += \" ダブルトリガー! \" if rollCount > 0\n        end\n\n        # ダイスの出目の個数を集計\n        result += \" ＞\"\n        (2..6).each do |num|\n          count = diceFullList.select { |i| i == num }.size\n          result += \" [\#{num}:\#{count}個]\" unless count == 0\n        end\n\n        return result\n      end\n\n      def getLifeAndDeathUnknownResult()\n        table = [\n          ' 1日：生還！',\n          ' 1日：生還！',\n          ' 1日：生還！',\n          ' 1日：生還！',\n          ' 1日：生還！',\n          ' 1日：生還！',\n\n          ' 1日：生還！',\n          ' 5日：敵に捕らわれ、ひどい暴行と拷問を受けた。',\n          ' 2日：謎の人物に命を救われた。',\n          '10日：奴隷として売り飛ばされた。',\n          ' 8日：おぞましい儀式の生贄として連れ去られた。',\n          ' 9日：幽閉・投獄された。',\n\n          ' 1日：生還！',\n          ' 7日：モンスター蠢く地下迷宮に滑落した。',\n          '12日強力なマスカレイドにとらわれ、実験台にされた。',\n          ' 8日：放浪中に遭遇した事件を、颯爽と解決していた。',\n          ' 5日：飢餓状態に追い込まれた。',\n          '15日：記憶を失い放浪した。',\n\n          ' 1日：生還！',\n          '10日：異性に命を救われて、手厚い看病を受けた。',\n          ' 3日：負傷からくる熱病で、生死の境を彷徨った。',\n          '11日：闘奴にされたが、戦いと友情の末に自由を獲得した。',\n          ' 6日：負傷したまま川に落ち、遥か下流まで流された。',\n          ' 9日：敵に連れ去られ、執拗な拷問を受け続けた。',\n\n          ' 1日：生還！',\n          ' 4日：繰り返す「死の悪夢」に苛まれた。',\n          ' 3日：巨獣の巣に連れ去られた。',\n          '10日：謎の集団に救われて、手厚い看病を受けた。',\n          ' 3日：チッタニアンの集落に迷い込み、もてなしを受けた。',\n          ' 7日：ピュアリィの群れにとらわれ、弄ばれた。',\n\n          ' 1日：生還！',\n          ' 6日：楽園のような場所を発見し、しばらく逗留した。',\n          ' 9日：盗賊団に救われ、恩返しとして少し用心棒をした。',\n          '10日：熱病の見せる官能的な幻影にとらわれ、彷徨った。',\n          ' 5日：謎の賞金首に狙われ、傷めつけられていた。',\n          ' - ：「五分五分」の一般判定。失敗すると死亡。',\n        ]\n        return get_table_by_d66(table)\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:EndBreaker>", "self", "register_prefix", "initialize", "command", "@d66_sort_type", "D66SortType::NO_SORT", "D66SortType", "eval_game_system_specific_command", "=~", "diceCount", "Regexp", "last_match", "1", "to_i", "checkRoll", "tableName", "text", "number", "0", "getLifeAndDeathUnknownResult", "result", "debug", "rollCount", "diceFullList", "diceList", "@randomizer", "roll_barabara", "6", "sort", "concat", "*", "select", "block in checkRoll", "i", "block (2 levels) in checkRoll", "==", "size", "2", "+", "join", ">", "each", "num", "count", "block (3 levels) in checkRoll", "table", "get_table_by_d66", "Base"], :mappings=>"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"}}]}
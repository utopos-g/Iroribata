{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/DiceOfTheDead.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class DiceOfTheDead < Base\n      # ゲームシステムの識別子\n      ID = 'DiceOfTheDead'\n\n      # ゲームシステム名\n      NAME = 'ダイス・オブ・ザ・デッド'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'たいすおふさてつと'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・ゾンビ化表　ZMB+x\n        （x=オープン中の感染度マスの数。+xは省略可能、省略時は0）\n        ・感染度表　BIOx\n        （xは被弾回数。xは省略可能、省略時は1）\n        （上記二つは最初からシークレットダイスで行われます）\n      INFO_MESSAGE_TEXT\n\n      register_prefix('ZMB', 'BIO')\n\n      def initialize(command)\n        super(command)\n\n        @sort_add_dice = true\n        @d66_sort_type = D66SortType::ASC\n      end\n\n      def eval_game_system_specific_command(command)\n        case command\n        when /^BIO(\\d+)?$/\n          roll_times = (Regexp.last_match(1) || 1).to_i\n\n          Result.new.tap do |r|\n            r.secret = true\n            r.text = checkInfection(roll_times)\n          end\n        when /^ZMB(\\+(\\d+))?$/\n          value = Regexp.last_match(2).to_i\n\n          Result.new.tap do |r|\n            r.secret = true\n            r.text = rollZombie(value)\n          end\n        end\n      end\n\n      def checkInfection(roll_times)\n        result = \"感染度表\"\n\n        roll_times.times do\n          d1 = @randomizer.roll_once(6)\n          d2 = @randomizer.roll_once(6)\n\n          result += \"　＞　出目：\#{d1}、\#{d2}　\"\n\n          index1 = (d1 / 2.0).ceil - 1\n          index2 = (d2 / 2.0).ceil - 1\n\n          table =\n            [[\"「右下（【足】＋１）」\", \"「右中（【足】＋１）」\", \"「右上（【足】＋１）」\"],\n             [\"「中下（【腕】＋１）」\", \"「真中（【腕】＋１）」\", \"「中上（【腕】＋１）」\"],\n             [\"「左下（【頭】＋１）」\", \"「左中（【頭】＋１）」\", \"「左上（【頭】＋１）」\"],]\n\n          result += table[index1][index2]\n        end\n\n        return result\n      end\n\n      ####################\n      # 各種表\n\n      def rollZombie(value)\n        d1 = @randomizer.roll_once(6)\n        d2 = @randomizer.roll_once(6)\n\n        diceTotal = d1 + d2 + value\n\n        table = [\n          [5, \"５以下：影響なし\"],\n          [6, \"６：任意の部位を１点回復\"],\n          [7, \"７：〈アイテム〉武器を１つその場に落とす\"],\n          [8, \"８：〈アイテム〉便利道具１つをその場に落とす\"],\n          [9, \"９：〈アイテム〉消耗品１つをその場に落とす\"],\n          [10, \"１０：腕の傷が広がる。「部位：【腕】」１点ダメージ\"],\n          [11, \"１１：足の傷が広がる。「部位：【足】」１点ダメージ\"],\n          [12, \"１２：頭の傷が広がる。「部位：【頭】」１点ダメージ\"],\n          [13, \"１３：【ゾンビ化表】が新たに適用されるまで「【感染度】＋１マス」の効果を受ける\"],\n          [14, \"１４：即座に自分以外の味方１人のスロット内の〈アイテム〉１つをランダムに捨てさせる\"],\n          [15, \"１５：味方１人に素手で攻撃を行う\"],\n          [16, \"１６：即座に感染度が１上昇する\"],\n          [17, \"１７：次のターンのみ、すべての【能力値】を２倍にする\"],\n          [18, \"１８以上：自分以外の味方１人にできる限り全力で攻撃を行う。〈アイテム〉も可能な限り使用する\"]\n        ]\n\n        minDice = table.first.first\n        maxDice = table.last.first\n        index = diceTotal\n        index = [minDice, index].max\n        index = [index, maxDice].min\n\n        _number, text = table.assoc(index)\n        result = \"ゾンビ化表　＞　出目：\#{d1}＋\#{d2}　感染度：\#{value}　合計値：\#{diceTotal}　＞　\#{text}\"\n\n        return result\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:DiceOfTheDead>", "self", "register_prefix", "initialize", "command", "@sort_add_dice", "@d66_sort_type", "D66SortType::ASC", "D66SortType", "eval_game_system_specific_command", "$ret_or_1", "roll_times", "$ret_or_2", "Regexp", "last_match", "1", "to_i", "tap", "Result", "new", "block in eval_game_system_specific_command", "r", "block (2 levels) in eval_game_system_specific_command", "secret=", "text=", "checkInfection", "value", "2", "rollZombie", "result", "times", "block in checkInfection", "block (2 levels) in checkInfection", "d1", "@randomizer", "roll_once", "6", "d2", "+", "index1", "-", "/", "ceil", "index2", "table", "[]", "diceTotal", "5", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "minDice", "first", "maxDice", "last", "index", "max", "min", "assoc", "_number", "text", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAEE,8BAAKA,eAAL;QAGA,gCAAOA,cAAP;QAGA,oCAAWA,WAAX;QAGA,wCACNA,gBADqB,GAErBA,mCAFqB,GAGrBA,cAHqB,GAIrBA,yBAJqB,GAKrBA,8BALM;QAQAC,IAAAC,iBAAAA,CAAgBF,KAAhB,EAAuBA,KAAvBE;;AAEAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAF,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMG,OAAN,CAAA,EAAA,IAAA;UAEAC,qBAAiB;UACjBF,OAAAG,CAAAA,qBAAiBC,IAAAC,iBAAAD,QAAjBD;QAJFH,CAAAA;;AAOAM,QAAAA,iDAAAA,6CAAsCL,OAAtCK;AAAAA,UAAAA;;UAEE,IAAA,QAAK,aAAL,EADAC,CAAAA,YAAKN,OAALM,CACA,CAAA;;YACEC,aAAc,CAAA,QAAAC,CAAAA,YAAAC,YAAMC,YAAAA,CAAYC,CAAZD,CAANF,CAAA,CAAA,GAAA,CAAA,SAAA,IAAA,CAAwBG,CAAxB,CAAA,CAA0BC,MAAAA,CAAAA;YAExCP,OAAUQ,MAAVC,YAAMC,KAAAA,CAAAA,CAAIF,OAAAA,EAAAA,EAAAA,EAAVG,aAAmBC,CAAnBD,EAAAE;;;cAAmB;cACjBD,CAACE,YAAAA,CAAU,IAAVA;cACDD,OAACE,MAAAA,CAAQvB,IAAAwB,gBAAAA,CAAed,UAAfc,CAARD,CAAAA,EAAAA,MAADH,CAACG,SAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBAFHJ,CAAAA,GAAAA,SAAAA,CAAUH;UAHZ,OAOA,IAAA,QAAK,iBAAL,EAzCR,SAyCQ,CAAA;;YACES,QAAQb,YAAMC,YAAAA,CAAYa,CAAZb,CAAcE,MAAAA,CAAAA;YAE5BP,OAAUQ,MAAVC,YAAMC,KAAAA,CAAAA,CAAIF,OAAAA,EAAAA,EAAAA,EAAVG,aAAmBC,CAAnBD,EAAAE;;;cAAmB;cACjBD,CAACE,YAAAA,CAAU,IAAVA;cACDD,OAACE,MAAAA,CAAQvB,IAAA2B,YAAAA,CAAWF,KAAXE,CAARJ,CAAAA,EAAAA,MAADH,CAACG,SAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBAFHJ,CAAAA,GAAAA,SAAAA,CAAUH;UAHZ;YARAR,OAAA;UAQA;QATFA,CAAAA;;AAmBAgB,QAAAA,8BAAAA,0BAAmBd,UAAnBc;AAAAA,UAAAA;;;UACEI,SAASJ;UAECK,MAAVnB,UAAUmB,SAAAA,EAAAA,EAAAA,EAAVC,aAAAA,EAAAC;AAAAA;;;YACEC,KAAKC,eAAWC,WAAAA,CAAWC,CAAXD;YAChBE,KAAKH,eAAWC,WAAAA,CAAWC,CAAXD;YAEhBN,SAAOS,SAAPT,MAAOS,EAAIN,QAAD,GAAA,CAASC,EAAT,CAAA,GAAYD,GAAZ,GAAA,CAAeK,EAAf,CAAA,GAAkBL,GAArBM;YAEPC,SAAyBC,UAAZC,WAAHR,EAAGQ,EAAE,GAAFA,CAAMC,MAAAA,CAAAA,CAAMF,EAAEzB,CAAFyB;YACzBG,SAAyBH,UAAZC,WAAHJ,EAAGI,EAAE,GAAFA,CAAMC,MAAAA,CAAAA,CAAMF,EAAEzB,CAAFyB;YAEzBI,QACE,CAAC,CAACZ,aAAD,EAAgBA,aAAhB,EAA+BA,aAA/B,CAAD,EACC,CAACA,aAAD,EAAgBA,aAAhB,EAA+BA,aAA/B,CADD,EAEC,CAACA,aAAD,EAAgBA,aAAhB,EAA+BA,aAA/B,CAFD;YAIFA,OAAAH,CAAAA,SAAOS,SAAPT,MAAOS,EAAGM,KAAKC,OAAAA,CAACN,MAADM,CAAQA,OAAAA,CAACF,MAADE,CAAhBP,CAAPT,EAdFE,CAAAA,GAAAA,SAAAA,CAAUD;UAiBV,OAAOD;QApBTJ,CAAAA;QA0BAzB,OAAA4B,0BAAAA,sBAAeF,KAAfE;AAAAA,UAAAA;;;UACEK,KAAKC,eAAWC,WAAAA,CAAWC,CAAXD;UAChBE,KAAKH,eAAWC,WAAAA,CAAWC,CAAXD;UAEhBW,YAAoBR,SAALA,SAAHL,EAAGK,EAAED,EAAFC,CAAKA,EAAEZ,KAAFY;UAEpBM,QAAQ,CACN,CAACG,CAAD,EAAInB,UAAJ,CADM,EAEN,CAACQ,CAAD,EAAIR,cAAJ,CAFM,EAGN,CAACoB,CAAD,EAAIpB,sBAAJ,CAHM,EAIN,CAACqB,CAAD,EAAIrB,wBAAJ,CAJM,EAKN,CAACsB,CAAD,EAAItB,uBAAJ,CALM,EAMN,CAACuB,EAAD,EAAKvB,2BAAL,CANM,EAON,CAACwB,EAAD,EAAKxB,2BAAL,CAPM,EAQN,CAACyB,EAAD,EAAKzB,2BAAL,CARM,EASN,CAAC0B,EAAD,EAAK1B,yCAAL,CATM,EAUN,CAAC2B,EAAD,EAAK3B,2CAAL,CAVM,EAWN,CAAC4B,EAAD,EAAK5B,kBAAL,CAXM,EAYN,CAAC6B,EAAD,EAAK7B,iBAAL,CAZM,EAaN,CAAC8B,EAAD,EAAK9B,4BAAL,CAbM,EAcN,CAAC+B,EAAD,EAAK/B,+CAAL,CAdM;UAiBRgC,UAAUhB,KAAKiB,OAAAA,CAAAA,CAAMA,OAAAA,CAAAA;UACrBC,UAAUlB,KAAKmB,MAAAA,CAAAA,CAAKF,OAAAA,CAAAA;UACpBG,QAAQlB;UACRkB,QAAQ,CAACJ,OAAD,EAAUI,KAAV,CAAgBC,KAAAA,CAAAA;UACxBD,QAAQ,CAACA,KAAD,EAAQF,OAAR,CAAgBI,KAAAA,CAAAA;UAExB,KAAgBtB,KAAKuB,OAAAA,CAAOH,KAAPG,CAArB,kBAAA,EAAAC,CAAAA,UAAA,6BAAAA,CAAA,EAASC,CAAAA,OAAT,6BAASA,CAAT;UACAxC,SAAUD,aAAD,GAAA,CAAcK,EAAd,CAAA,GAAiBL,GAAjB,GAAA,CAAoBS,EAApB,CAAA,GAAuBT,OAAvB,GAAA,CAA8BF,KAA9B,CAAA,GAAoCE,OAApC,GAAA,CAA2CkB,SAA3C,CAAA,GAAqDlB,KAArD,GAAA,CAA0DyC,IAA1D;UAET,OAAOxC;QAhCTD,CAAAA;MAzEF5B,GAAAA,WAAAA,EAAsBsE,UAAtBtE;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
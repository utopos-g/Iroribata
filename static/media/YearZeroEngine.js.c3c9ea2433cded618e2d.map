{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/YearZeroEngine.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class YearZeroEngine < Base\n      # ゲームシステムの識別子\n      ID = 'YearZeroEngine'\n\n      # ゲームシステム名\n      NAME = 'YearZeroEngine'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'いやあせろえんしん'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・判定コマンド(nYZEx+x+x)\n          (難易度)YZE(能力ダイス数)+(技能ダイス数)+(アイテムダイス数)  # (6のみを数える)\n\n        ・判定コマンド(nMYZx+x+x)\n          (難易度)MYZ(能力ダイス数)+(技能ダイス数)+(アイテムダイス数)  # (1と6を数え、プッシュ可能数を表示)\n          (難易度)MYZ(能力ダイス数)-(技能ダイス数)+(アイテムダイス数)  # (1と6を数え、プッシュ可能数を表示、技能のマイナス指定)\n\n          ※ 難易度と技能、アイテムダイス数は省略可能\n      INFO_MESSAGE_TEXT\n\n      DIFFICULTY_INDEX   =  1 # 難易度のインデックス\n      COMMAND_TYPE_INDEX =  2 # コマンドタイプのインデックス\n      ABILITY_INDEX      =  3 # 能力値ダイスのインデックス\n      SKILL_SIGNED_INDEX =  5 # 技能値ダイス符号のインデックス\n      SKILL_INDEX        =  6 # 技能値ダイスのインデックス\n      GEAR_INDEX         =  8 # アイテムダイスのインデックス\n\n      register_prefix('(\\d+)?(YZE|MYZ)')\n\n      def dice_info_init()\n        @total_success_dice = 0\n        @total_botch_dice = 0\n        @base_botch_dice = 0\n        @skill_botch_dice = 0\n        @gear_botch_dice = 0\n        @push_dice = 0\n        @difficulty = 0\n      end\n\n      def eval_game_system_specific_command(command)\n        m = /\\A(\\d+)?(YZE|MYZ)(\\d+)((\\+|-)(\\d+))?(\\+(\\d+))?/.match(command)\n        unless m\n          return ''\n        end\n\n        dice_info_init\n\n        @difficulty = m[DIFFICULTY_INDEX].to_i\n\n        command_type = m[COMMAND_TYPE_INDEX]\n\n        @total_success_dice = 0\n\n        dice_pool = m[ABILITY_INDEX].to_i\n        ability_dice_text, success_dice, botch_dice = make_dice_roll(dice_pool)\n\n        @total_success_dice += success_dice\n        @total_botch_dice += botch_dice\n        @base_botch_dice += botch_dice # 能力ダメージ\n        @push_dice += (dice_pool - (success_dice + botch_dice))\n\n        dice_count_text = \"(\#{dice_pool}D6)\"\n        dice_text = ability_dice_text\n\n        if m[SKILL_INDEX]\n          dice_pool = m[SKILL_INDEX].to_i\n          skill_dice_text, success_dice, botch_dice = make_dice_roll(dice_pool)\n\n          skill_unsigned = m[SKILL_SIGNED_INDEX]\n          if command_type == 'YZE' && skill_unsigned == '-'\n            # YZEはシンプルに動作するコマンドなのでマイナス技能の処理は対応しない。\n            return \"YZEコマンドでは技能ダイスをマイナス指定できません。\"\n          elsif command_type == 'MYZ' && skill_unsigned == '-'\n            @total_success_dice -= success_dice # マイナス技能の成功は通常の成功と相殺される\n          else\n            @total_success_dice += success_dice\n          end\n\n          @total_botch_dice += botch_dice\n          @skill_botch_dice += botch_dice # 技能ダイスの1はpushで振り直し可能（例えマイナス技能でも）\n          @push_dice += (dice_pool - success_dice) # 技能ダイスのみ1を含むので、ここでは1を計算に入れない\n\n          dice_count_text += \"\#{skill_unsigned}(\#{dice_pool}D6)\"\n          dice_text += \"\#{skill_unsigned}\#{skill_dice_text}\"\n        end\n\n        if m[GEAR_INDEX]\n          dice_pool = m[GEAR_INDEX].to_i\n          gear_dice_text, success_dice, botch_dice = make_dice_roll(dice_pool)\n\n          @total_success_dice += success_dice\n          @total_botch_dice += botch_dice\n          @gear_botch_dice += botch_dice # ギアダメージ\n          @push_dice += (dice_pool - (success_dice + botch_dice))\n\n          dice_count_text += \"+(\#{dice_pool}D6)\"\n          dice_text += \"+\#{gear_dice_text}\"\n        end\n\n        return make_result_text(command_type, dice_count_text, dice_text)\n      end\n\n      def make_result_text(command_type, dice_count_text, dice_text)\n        if command_type == 'YZE'\n          return make_result_with_yze(dice_count_text, dice_text)\n        elsif command_type == 'MYZ'\n          return make_result_with_myz(dice_count_text, dice_text)\n        end\n\n        return 'Error' # 到達しないはず\n      end\n\n      def make_result_with_yze(dice_count_text, dice_text)\n        result_text = \"\#{dice_count_text} ＞ \#{dice_text} 成功数:\#{@total_success_dice}\"\n        if @difficulty > 0\n          if @total_success_dice >= @difficulty\n            return Result.success(\"\#{result_text} 難易度=\#{@difficulty}:判定成功！\")\n          else\n            return Result.failure(\"\#{result_text} 難易度=\#{@difficulty}:判定失敗！\")\n          end\n        end\n        return result_text\n      end\n\n      def make_result_with_myz(dice_count_text, dice_text)\n        result_text = \"\#{dice_count_text} ＞ \#{dice_text} 成功数:\#{@total_success_dice}\"\n        atter_text = \"\\n出目1：[能力：\#{@base_botch_dice},技能：\#{@skill_botch_dice},アイテム：\#{@gear_botch_dice}) プッシュ可能=\#{@push_dice}ダイス\"\n\n        if @difficulty > 0\n          if @total_success_dice >= @difficulty\n            return Result.success(\"\#{result_text} 難易度=\#{@difficulty}:判定成功！\#{atter_text}\")\n          else\n            return Result.failure(\"\#{result_text} 難易度=\#{@difficulty}:判定失敗！\#{atter_text}\")\n          end\n        end\n\n        return \"\#{result_text}\#{atter_text}\"\n      end\n\n      def make_dice_roll(dice_pool)\n        dice_list = @randomizer.roll_barabara(dice_pool, 6)\n        success_dice = dice_list.count(6)\n        botch_dice = dice_list.count(1)\n\n        return \"[\#{dice_list.join(',')}]\", success_dice, botch_dice\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:YearZeroEngine>", "1", "2", "3", "5", "6", "8", "self", "register_prefix", "dice_info_init", "@total_success_dice", "0", "@total_botch_dice", "@base_botch_dice", "@skill_botch_dice", "@gear_botch_dice", "@push_dice", "@difficulty", "eval_game_system_specific_command", "command", "m", "match", "[]", "DIFFICULTY_INDEX", "to_i", "command_type", "COMMAND_TYPE_INDEX", "dice_pool", "ABILITY_INDEX", "make_dice_roll", "ability_dice_text", "success_dice", "botch_dice", "+", "-", "dice_count_text", "dice_text", "SKILL_INDEX", "skill_dice_text", "skill_unsigned", "SKILL_SIGNED_INDEX", "GEAR_INDEX", "gear_dice_text", "make_result_text", "make_result_with_yze", "make_result_with_myz", "result_text", ">", ">=", "Result", "success", "failure", "atter_text", "dice_list", "@randomizer", "roll_barabara", "count", "join", "Base"], :mappings=>"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"}}]}
{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Postman.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class Postman < Base\n      # ゲームシステムの識別子\n      ID = 'Postman'\n\n      # ゲームシステム名\n      NAME = '壊れた世界のポストマン'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'こわれたせかいのほすとまん'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ◆判定：[n]PO[+-a][> or >= or @X]　　[]内省略可。\n\n        達成値と判定の成否、クリティカル、ファンブルを結果表示します。\n        「n」でダイス数を指定。省略時は2D。\n        「+-a」で達成値への修正を指定。「+2+1-4」のような複数回指定可。\n        「>X」「>=X」「@X」で難易度を指定可。\n        「>X」は達成値>難易度、「>=X」「@X」は達成値>=難易度で判定します。\n\n        【書式例】\n        3PO+2-1 → 3Dで達成値修正+1の判定。達成値のみ表示。\n        PO@5+2 → 2Dで目標値7の判定。判定の成否と達成値を表示。\n        4PO-2+1>7+2 → 4Dで達成値修正-1、目標値9（同値は失敗）の判定。\n\n\n        ◆天候チェック：WEA[n]　　[]内省略可。\n\n        天候チェック表を参照します。\n        「n」を指定すると、指定した結果を表示します。（【幸運点】使用時用）\n\n\n        ◆自由行動シチュエーション表：FRE\n      MESSAGETEXT\n\n      register_prefix(\n        'WEA',\n        '(\\d+)?PO',\n        'FRE'\n      )\n\n      def initialize(command)\n        super(command)\n        @sort_add_dice = true # ダイスのソート有\n      end\n\n      def eval_game_system_specific_command(command)\n        text =\n          case command.upcase\n\n          when /(\\d+)?PO(\\d+)?(([+-]\\d+)*)?((>|>=|@)(\\d+)(([+-]\\d+)*)?)?/i\n            diceCount = (Regexp.last_match(1) || 2).to_i\n            diceCount = 2 if diceCount < 2\n\n            modify = (Regexp.last_match(2) || 0).to_i\n            modifyAddString = Regexp.last_match(3) || ''\n\n            type = Regexp.last_match(6) || ''\n            target = (Regexp.last_match(7) || 0).to_i\n            targetAddString = Regexp.last_match(8) || ''\n\n            modify_list = modifyAddString.scan(/[+-]\\d+/)\n            modify_list.each { |i| modify += i.to_i }\n\n            if target != 0\n              target_list = targetAddString.scan(/[+-]\\d+/)\n              target_list.each { |j| target += j.to_i }\n            end\n\n            checkRoll(diceCount, modify, type, target)\n\n          when /WEA(\\d+)?/i\n            roc = (Regexp.last_match(1) || 0).to_i\n            get_weather_table(roc)\n\n          when 'FRE'\n            get_free_situation_table\n\n          end\n\n        return text\n      end\n\n      def checkRoll(diceCount, modify, type, target)\n        diceArray = @randomizer.roll_barabara(diceCount, 6).sort\n        dice = diceArray.sum()\n        diceText = diceArray.join(\",\")\n\n        dice2 = diceArray[-2] + diceArray[-1]\n        diceText2 = \"\#{diceArray[-2]},\#{diceArray[-1]}\"\n        criticalCount = diceArray.count(6)\n\n        if modify != 0\n          modifyText = ''\n          modifyText = \"+\" if modify > 0\n          modifyText += modify.to_s\n        end\n\n        result = dice2 + modify\n\n        if type != ''\n          resultText = \" 【失敗】\"\n          operatorText = \">\"\n          if type == '>'\n            resultText = \" 【成功】\" if result > target\n          else\n            operatorText += \"=\"\n            resultText = \" 【成功】\" if result >= target\n          end\n        end\n\n        if criticalCount >= 2\n          resultText = \" 【成功】（クリティカル）\"\n        elsif dice == diceCount\n          resultText = \" 【失敗】（ファンブル）\"\n        end\n\n        text = \"\#{diceCount}D6(\#{diceText})\#{modifyText} ＞ \#{dice2}(\#{diceText2})\#{modifyText} = 達成値：\#{result}\"\n        text += \"\#{operatorText}\#{target} \" if target > 0\n        text += resultText.to_s\n\n        return text\n      end\n\n      def get_weather_table(roc)\n        name = \"天候チェック\"\n        table = [\n          [2, '大雨と強風。探索判定の難易度に+4。'],\n          [3, '風が強い1日になりそう。探索判定の難易度に+2。'],\n          [4, '晴れ。特になし。'],\n          [5, '夜の間の雨でぬかるむ。探索判定の難易度に+2。'],\n          [6, 'それなりの雨足。探索判定の難易度に+2。'],\n          [7, '晴れ。特になし。'],\n          [8, '天気は大荒れ。探索判定の難易度に+4。'],\n          [9, '小雨が降る。探索判定の難易度に+1。'],\n          [10, 'それなりの雨足。探索判定の難易度に+2。'],\n          [11, '晴れ。特になし。'],\n          [12, '風が強い1日になりそう。探索判定の難易度に+2。']\n        ]\n\n        if roc == 0\n          dice_list = @randomizer.roll_barabara(2, 6)\n          dice = dice_list.sum()\n          diceText = dice_list.join(\",\")\n        else\n          roc = 2 if roc < 2\n          roc = 12 if roc > 12\n          dice = roc\n          diceText = \"Choice:\#{roc}\"\n        end\n\n        tableText = get_table_by_number(dice, table)\n        text = \"\#{name}(\#{diceText}) ＞ \#{dice}：\#{tableText}\"\n        return text\n      end\n\n      def get_free_situation_table()\n        name = \"自由行動シチュエーション表\"\n        table = [\n          [2, '何をするでもなく、霞がかったような夜空を見上げる。ふと隣に目を向ければ、彼/彼女が居た。彼/彼女は、こうなる前の夜空を知っているのだろうか。'],\n          [3, '夢を見た。大戦の最中、街が、人が、世界が焼けていく悪夢を。追い立てられるようにして目を覚ますと、彼/彼女が君を見ていた。　……もしかして、自分はよほどうなされていたのだろうか。'],\n          [4, '周囲で見つけたガラクタを使って、ちょっとしたビックリ玩具を作ってみた。「彼/ 彼女」にコイツをけしかけたら、どんな反応をするだろうか？'],\n          [5, '使えそうなものがないか探していると、カタンと物音がして何かが落ちた。拾い上げてみたそれは、かつてここで生活していた誰かの名残（写真、家具、玩具等）だった。'],\n          [6, 'テントの中で夜を過ごしていると、ふと彼/彼女と話したくてたまらない気持ちになった。言ってしまえば、夜の静けさに寂しさを覚えてしまったのだ。'],\n          [7, 'ここまでの配達の記録をつけていたら、背後から視線を感じる……！　もしや、彼/彼女に覗かれている……！？'],\n          [8, '周囲を探索していると、君一人では手の届かないところに金属製の箱か何かがあることに気づいた。彼/彼女に手伝ってもらえば、取れるだろうか……？'],\n          [9, '朝まではまだしばらくあるというのに、目が覚めてしまった。二度寝しようにも寝付けずに居ると、隣でもぞもぞと動く気配がする。彼/彼女も、どうやら同じらしい。'],\n          [10, '他愛のない話をするうちに、君は彼/彼女に問いかけていた。「何故、ポストマンになろうと思ったのか」　……そういえば、君自身はどうだったろうか。'],\n          [11, '保存食にありつこうとしたその時、君は気づいた。一匹のネズミが、彼/彼女の荷物の中に潜り込もうとしている。彼/彼女は気づいていないが、このままでは食料が危ない！'],\n          [12, 'テントを設営し、落ち着いた頃にふと気づく。　……身体が熱い。少し、だるさもあるような気もする。大したことはないと思うが、彼/彼女に相談しておいた方がいいだろうか。']\n        ]\n        dice_list = @randomizer.roll_barabara(2, 6)\n        dice = dice_list.sum()\n        diceText = dice_list.join(\",\")\n        tableText = get_table_by_number(dice, table)\n        text = \"\#{name}(\#{diceText}) ＞ \#{dice}：\#{tableText}\"\n        return text\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:Postman>", "self", "register_prefix", "initialize", "command", "@sort_add_dice", "eval_game_system_specific_command", "text", "$ret_or_1", "upcase", "diceCount", "$ret_or_2", "Regexp", "last_match", "1", "2", "to_i", "<", "modify", "0", "modifyAddString", "3", "type", "6", "target", "7", "targetAddString", "8", "modify_list", "scan", "each", "block in eval_game_system_specific_command", "i", "block (2 levels) in eval_game_system_specific_command", "+", "target_list", "j", "checkRoll", "roc", "get_weather_table", "get_free_situation_table", "diceArray", "@randomizer", "roll_barabara", "sort", "dice", "sum", "diceText", "join", "dice2", "[]", "-2", "-1", "diceText2", "criticalCount", "count", "modifyText", ">", "to_s", "result", "resultText", "operatorText", ">=", "name", "table", "4", "5", "9", "10", "11", "12", "dice_list", "tableText", "get_table_by_number", "Base"], :mappings=>"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"}}]}
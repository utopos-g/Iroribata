{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/GundamSentinel.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class GundamSentinel < Base\n      # ゲームシステムの識別子\n      ID = 'GundamSentinel'\n\n      # ゲームシステム名\n      NAME = 'ガンダム・センチネルRPG'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'かんたむせんちねる'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・基本戦闘(BB, BBM)\n        　BB[+修正][>回避値]で基本戦闘を判定します。回避値を指定すると、命中・回避も表示します。\n        　BBM[+修正][>回避値]でモブ用の基本戦闘を判定します。クリティカルを判定します。回避値を指定すると、命中・回避も表示します。\n\n        　例）BB BBM BB+5>14 BBM+5>15\n\n        ・一般技能(GS)\n        　GS[+修正][>目標値]で一般技能を判定します。目標値を指定しない場合は、目標値10で判定します。\n\n        　例）GS GS+5 GS+5>10\n\n\n        ・各種表\n        　敵MSクリティカルヒットチャート　(ECHC)\n        　PC用脱出判定チャート　　　　　　(PEJC[+m] m:修正)\n        　艦船追加ダメージ決定チャート　　(ASDC)\n        　対空砲結果チャート　　　　　　　(AARC[+m]=t m:修正, t:対空防御力)\n        　リハビリ判定チャート　　　　　　(RTJC[+m] m:修正)\n        　二次被害判定チャート　　　　　　(SDDC)\n      INFO_MESSAGE_TEXT\n\n      def initialize(command)\n        super(command)\n\n        @round_type = RoundType::CEIL\n        @d66_sort_type = D66SortType::NO_SORT\n      end\n\n      def eval_game_system_specific_command(command)\n        roll_basic_battle(command) ||\n          roll_general_skill(command) ||\n          roll_anti_aircraft_gun_result_chart(command) ||\n          roll_escape_chart(command) ||\n          roll_rehabilitation_chart(command) ||\n          roll_tables(command, TABLES)\n      end\n\n      private\n\n      # 基本戦闘ロール\n      def roll_basic_battle(command)\n        m = /^BB(M)?([-+][-+\\d]+)?(>([-+\\d]+))?/.match(command)\n        return nil unless m\n\n        mob = m[1]\n        modify = ArithmeticEvaluator.eval(m[2])\n        have_modify = false\n        have_modify = true if m[2]\n        avoid = ArithmeticEvaluator.eval(m[4])\n        have_avoid = false\n        have_avoid = true if m[4]\n\n        d60 = @randomizer.roll_once(6)\n        d06 = @randomizer.roll_once(6)\n        total_d = d60 * 10 + d06\n        d60 += (d06 + modify - 1).div(6)\n        d06 = (d06 + modify - 1).modulo(6) + 1\n        total = d60 * 10 + d06\n        total = 11 if total < 11\n\n        success = false\n        failure = false\n        critical = false\n\n        modify_label = nil\n        if have_modify\n          if modify >= 0\n            modify_label = \"\#{total_d}+\#{modify}\"\n          else\n            modify_label = \"\#{total_d}\#{modify}\"\n          end\n        end\n\n        critical_label = nil\n        if mob && (total >= 66)\n          critical_label = \"クリティカル\"\n          critical = true\n        end\n\n        result = nil\n        if have_avoid\n          if total > avoid\n            result = \"命中(+\" + count_success(total, avoid).to_s + \")\"\n            success = true\n          else\n            result = \"回避\"\n            failure = true\n          end\n        end\n\n        sequence = [\n          \"(\#{command})\",\n          modify_label,\n          total,\n          result,\n          critical_label,\n        ].compact\n\n        Result.new(sequence.join(\" ＞ \")).tap do |r|\n          r.success = success\n          r.failure = failure\n          r.critical = critical\n        end\n      end\n\n      def count_success(dice, avoid)\n        d60 = dice.div(10)\n        d06 = dice.modulo(10)\n        a60 = avoid.div(10)\n        a06 = avoid.modulo(10)\n\n        return ((d60 * 6 + d06) - (a60 * 6 + a06))\n      end\n\n      # 一般技能ロール\n      def roll_general_skill(command)\n        m = /^GS([-+][-+\\d]+)?(>([-+\\d]+))?/.match(command)\n        return nil unless m\n\n        modify = ArithmeticEvaluator.eval(m[1])\n        have_modify = false\n        have_modify = true if m[1]\n        target = ArithmeticEvaluator.eval(m[3])\n        target = 10 unless m[3]\n\n        success = false\n        failure = false\n\n        dice = @randomizer.roll_sum(2, 6)\n\n        modify_label = nil\n        if have_modify\n          if modify >= 0\n            modify_label = \"\#{dice}+\#{modify}\"\n          else\n            modify_label = \"\#{dice}\#{modify}\"\n          end\n        end\n        total = dice + modify\n        if total > target\n          result = \"成功\"\n          success = true\n        else\n          result = \"失敗\"\n          failure = true\n        end\n\n        sequence = [\n          \"(\#{command})\",\n          modify_label,\n          total,\n          result,\n        ].compact\n\n        Result.new(sequence.join(\" ＞ \")).tap do |r|\n          r.success = success\n          r.failure = failure\n        end\n      end\n\n      # 各種表\n\n      # 対空砲結果チャート\n      GUN_RESULT_CHART = [\n        [\"D\", \"H\", \"H\", \"H\", 10, 8, 6, 5, 4, 2, 1, \"-\", \"-\"],\n        [\"D\", \"H\", \"H\", \"H\", 12, 10, 9, 8, 6, 5, 3, 2, \"-\"],\n        [\"D\", \"D\", \"H\", \"H\", \"H\", 12, 10, 9, 7, 6, 4, 3, 1],\n        [\"D\", \"D\", \"H\", \"H\", \"H\", 14, 13, 12, 10, 8, 6, 5, 3],\n        [\"D\", \"D\", \"D\", \"H\", \"H\", \"H\", 14, 13, 11, 9, 7, 6, 4],\n        [\"D\", \"D\", \"D\", \"H\", \"H\", \"H\", \"H\", 16, 14, 12, 11, 8, 6],\n      ].freeze\n\n      def roll_anti_aircraft_gun_result_chart(command)\n        parser = Command::Parser.new(\"AARC\", round_type: @round_type).restrict_cmp_op_to(:==)\n        parsed = parser.parse(command)\n\n        return nil unless parsed\n\n        target = parsed.target_number.clamp(1, 6)\n        dice = @randomizer.roll_sum(2, 6)\n        total = (dice + parsed.modify_number).clamp(1, 13)\n\n        cmd =\n          if parsed.modify_number != 0\n            \"(\#{dice}\#{Format.modifier(parsed.modify_number)}=\#{total})\"\n          else\n            total.to_s\n          end\n        result = GUN_RESULT_CHART[target - 1][total - 1]\n\n        Result.new().tap do |r|\n          r.text = \"対空砲結果チャート(\#{cmd}vs\#{target}) ＞ 結果「\#{result}」\"\n          r.condition = result.is_a?(Integer)\n        end\n      end\n\n      # PC用脱出判定チャート\n      ESCAPE_CHART = [\n        '*',\n        '*',\n        '無傷で脱出',\n        '無傷で脱出',\n        '無傷で脱出',\n        '軽傷で脱出「１Ｄ６ダメージ。」',\n        '中傷で脱出「２Ｄ６ダメージ。」',\n        '重傷で脱出「３Ｄ６ダメージ。」',\n        '重体で脱出「１Ｄ３の耐久力が残る。」',\n        '戦死「二階級特進。」',\n        '戦死「二階級特進。」',\n        '戦死「二階級特進。」',\n        '戦死「二階級特進。」',\n      ].freeze\n\n      def roll_escape_chart(command)\n        parser = Command::Parser.new(\"PEJC\", round_type: @round_type).restrict_cmp_op_to(nil)\n        parsed = parser.parse(command)\n        return nil unless parsed\n\n        dice = @randomizer.roll_sum(2, 6)\n        total = (dice + parsed.modify_number).clamp(2, 12)\n\n        cmd =\n          if parsed.modify_number != 0\n            \"\#{dice}\#{Format.modifier(parsed.modify_number)}=\#{total}\"\n          else\n            total.to_s\n          end\n        result = ESCAPE_CHART[total]\n\n        Result.new(\"PC用脱出判定チャート(\#{cmd}) ＞ \#{result}\")\n      end\n\n      REHABILITATION_CHART = [\n        '*',\n        '*',\n        'なし',\n        '１ヶ月',\n        '２ヶ月',\n        '３ヶ月',\n        '４ヶ月',\n        '５ヶ月',\n        '６ヶ月',\n        '１０ヶ月',\n        '１年',\n        '１年６ヶ月',\n        '１年と、もう一度このチャートで振った結果分を足した期間',\n      ].freeze\n\n      def roll_rehabilitation_chart(command)\n        parser = Command::Parser.new(\"RTJC\", round_type: @round_type).restrict_cmp_op_to(nil)\n        parsed = parser.parse(command)\n        return nil unless parsed\n\n        dice = @randomizer.roll_sum(2, 6)\n        total = (dice + parsed.modify_number).clamp(2, 12)\n\n        cmd =\n          if parsed.modify_number != 0\n            \"\#{dice}\#{Format.modifier(parsed.modify_number)}=\#{total}\"\n          else\n            total.to_s\n          end\n        result = REHABILITATION_CHART[total]\n\n        Result.new(\"リハビリ判定チャート(\#{cmd}) ＞ \#{result}\")\n      end\n\n      TABLES = {\n        'ECHC' => DiceTable::Table.new(\n          '敵MSクリティカルヒットチャート',\n          '2D6',\n          [\n            'コックピット直撃：目標ＭＳは残骸となる。',\n            '腕破損：同時に携帯武器も失う。携帯武装の交換も行えない。直ちにモラル判定を－４で行う。',\n            '射撃武装破損：目標ＭＳはその時点で使用しているナンバーの若い武装を１つ失う。全ての武装を失った場合、モラル判定を行う。',\n            '頭部直撃：目標ＭＳはメインカメラを失い、以後射撃、格闘の命中判定に－６の修正を受ける。頭部に装備されている武装も失われる。',\n            'パイロット気絶：目標ＭＳは回復するまで行動不能。',\n            '目標ＭＳへのダメージ２倍。',\n            '目標ＭＳへのダメージ２倍。',\n            '目標ＭＳへのダメージ３倍。',\n            '脚破損：目標ＭＳは、以後の回避値に－６の修正を受ける。',\n            'コントロール不能：目標ＭＳは１Ｄ６ラウンドの間、行動不能。',\n            '熱核ジェネレーター直撃：目標ＭＳは直ちに爆発（耐久力０）する。',\n          ]\n        ),\n        'ASDC' => DiceTable::Table.new(\n          '艦船追加ダメージ決定チャート',\n          '2D6',\n          [\n            'ブリッジ損傷「複数ある艦は、総てのブリッジが損傷すると以後の対空防御は修正を＋５する。」',\n            'カタパルト損傷「複数ある艦は、総てのカタパルトが損傷すると、ＭＳの発着艦ができなくなる。」',\n            '追加ダメージ「追加２Ｄ６×２ダメージ。」',\n            '主砲大破「主砲１門を失う。」',\n            '副砲大破「副砲１門を失う。」',\n            '追加ダメージ「追加２Ｄ６ダメージ。」',\n            '追加ダメージ「追加２Ｄ６ダメージ。」',\n            '追加ダメージ「追加２Ｄ６ダメージ。」',\n            '１ターン行動不能「１ターンはその艦は何も行動ができない。」',\n            '航行不能「その艦はそのヘックスから動けなくなる。」',\n            'エンジン誘爆「１Ｄ６×１０％の耐久力を失う。」',\n          ]\n        ),\n        'SDDC' => DiceTable::D66GridTable.new(\n          '二次被害判定チャート',\n          [\n            [\n              '奇蹟的に無傷「不発！？今回のダメージは0。」',\n              'メインカメラ破損「以後、射撃、格闘の命中判定に－３の修正を受ける。」',\n              'コクピット破損「以後の追加ダメージ判定に－１の修正を受ける。」',\n              '右腕損傷「携帯していた武装も失う。また右腕での武器の使用はできなくなる。」',\n              '左腕損傷「携帯していた武装も失う。また左腕での武器の使用はできなくなる。」',\n              '気絶「気絶判定の余地無く、必ず気絶する。」',\n            ],\n            [\n              '気絶「気絶判定を－６の修正で行う。」',\n              '気絶「気絶判定を－４の修正で行う。」',\n              '気絶「気絶判定を－２の修正で行う。」',\n              '気絶「気絶判定を行う。」',\n              '予備弾倉破損「携帯している予備弾倉かＥパックを１つ失う。」',\n              'サブカメラ破損「以後、射撃、格闘の命中判定に－１の修正を受ける。」',\n            ],\n            [\n              '固定武装破損「固定されている武装を１つ失う。」',\n              '予備武装破損「携帯している以外の武装を１つ失う。」',\n              '頭部破損「メインカメラも失い、以後、射撃、格闘の命中判定に－３の修正を受ける。」',\n              '右脚破損「以後、回避値が１Ｄ３低下する。」',\n              '左脚破損「以後、回避値が１Ｄ３低下する。」',\n              '操縦機構破損「以後、すべての行動は消費行動ポイントを１ポイント余分に消費する。」',\n            ],\n            [\n              '軽傷「パイロットは１Ｄ６のダメージを受ける。また気絶判定を行う。」',\n              '中傷「パイロットは２Ｄ６のダメージを受ける。また気絶判定を－６修正で行う。」',\n              '重傷「パイロットは３Ｄ６のダメージを受ける。また気絶判定を－９修正で行う。」',\n              '操縦伝達部破損「以後すべての射撃、格闘の命中判定と回避値に－１の修正を受ける。」',\n              'センサー破損「イニシアティブ決定に－１の修正を受ける。」',\n              '脱出機構破損「脱出判定に＋３の修正を受ける。」',\n            ],\n            [\n              '熱核ジェネレーター損傷「行動の「追加移動」が行えなくなる。」',\n              '右腕の携帯武装破損「右腕に持っていた武装を１つ失う。」',\n              '左腕の携帯武装破損「左腕に持っていた武装を１つ失う。」',\n              'サブスラスター破損「回避値が１低下する。」',\n              'プロペラントタンク破損「プロペラントタンクを１つ失う。」',\n              'バックパック破損「推進剤３Ｄ６ポイント失う。」',\n            ],\n            [\n              'メインスラスター破損「回避値が１Ｄ６低下する。」',\n              '動力パイプ破損「以後、行動ポイント決定のダイスに－１の修正を受ける。」',\n              '動力伝達機構破損「以後、行動ポイント決定のサイコロに－１Ｄ３の修正を受ける。」',\n              'サブスラスター破損「旋回が１２０度までしかできなくなる。」',\n              'メインスラスター破損「旋回が６０度までしかできなくなる。」',\n              '熱核ジェネレーター直撃「そのＭＳは爆発する。ＰＣは直ちに脱出判定を行う。」',\n            ]\n          ]\n        ),\n      }.freeze\n\n      register_prefix('BBM?', 'GS', 'AARC', 'PEJC', 'RTJC', TABLES.keys)\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:GundamSentinel>", "initialize", "command", "self", "@round_type", "RoundType::CEIL", "RoundType", "@d66_sort_type", "D66SortType::NO_SORT", "D66SortType", "eval_game_system_specific_command", "$ret_or_1", "$ret_or_2", "$ret_or_3", "$ret_or_4", "$ret_or_5", "roll_basic_battle", "roll_general_skill", "roll_anti_aircraft_gun_result_chart", "roll_escape_chart", "roll_rehabilitation_chart", "roll_tables", "TABLES", "private", "m", "match", "mob", "[]", "1", "modify", "ArithmeticEvaluator", "eval", "2", "have_modify", "avoid", "4", "have_avoid", "d60", "@randomizer", "roll_once", "6", "d06", "total_d", "+", "*", "10", "-", "div", "modulo", "total", "<", "11", "success", "failure", "critical", "modify_label", ">=", "0", "critical_label", "66", "result", ">", "count_success", "to_s", "sequence", "compact", "tap", "Result", "new", "join", "block in roll_basic_battle", "r", "block (2 levels) in roll_basic_battle", "success=", "failure=", "critical=", "dice", "a60", "a06", "target", "3", "roll_sum", "block in roll_general_skill", "block (2 levels) in roll_general_skill", "8", "5", "12", "9", "7", "14", "13", "16", "freeze", "parser", "Command::Parser", "Command", "restrict_cmp_op_to", "parsed", "parse", "target_number", "clamp", "modify_number", "cmd", "Format", "modifier", "GUN_RESULT_CHART", "block in roll_anti_aircraft_gun_result_chart", "block (2 levels) in roll_anti_aircraft_gun_result_chart", "text=", "condition=", "is_a?", "Integer", "ESCAPE_CHART", "REHABILITATION_CHART", "DiceTable::Table", "DiceTable", "DiceTable::D66GridTable", "register_prefix", "keys", "Base"], :mappings=>"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"}}]}
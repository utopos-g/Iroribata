{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Warhammer.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class Warhammer < Base\n      # ゲームシステムの識別子\n      ID = 'Warhammer'\n\n      # ゲームシステム名\n      NAME = 'ウォーハンマー'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'うおおはんまあ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・クリティカル表(whHxx/whAxx/whBxx/whLxx)\n        　\"WH部位 クリティカル値\"の形で指定します。部位は「H(頭部)」「A(腕)」「B(胴体)」「L(足)」の４カ所です。\n        　例）whH10 whA5 WHL4\n        ・命中判定(WHx@t)\n        　\"WH(命中値)@(種別)\"の形で指定します。\n        　種別は脚の数を数字、翼が付いているものは「W」、手が付いているものは「H」で書きます。\n        　「2H(二足)」「2W(有翼二足)」「4(四足)」「4H(半人四足)」「4W(有翼四足)」「W(鳥類)」となります。\n        　命中判定を行って、当たれば部位も表示します。\n        　なお、種別指定を省略すると「二足」、「@」だけにすると全種別の命中部位を表示します。(コマンドを忘れた時の対応です)\n        　例）wh60　　wh43@4W　　WH65@\n      INFO_MESSAGE_TEXT\n\n      register_prefix('WH')\n\n      def initialize(command)\n        super(command)\n\n        @round_type = RoundType::CEIL # 端数切り上げに設定\n      end\n\n      def eval_game_system_specific_command(command)\n        output_msg = nil\n\n        case command.upcase\n\n        when /^(WH\\d+(@[\\dWH]*)?)/i\n          attackCommand = Regexp.last_match(1)\n          output_msg = getAttackResult(attackCommand)\n\n        when /^(WH[HABTLW]\\d+)/i\n          criticalCommand = Regexp.last_match(1)\n          output_msg = getCriticalResult(criticalCommand)\n        end\n\n        return output_msg\n      end\n\n      def result_1d100(total, _dice_total, cmp_op, target)\n        return Result.nothing if target == '?'\n        return nil unless cmp_op == :<=\n\n        if total <= target\n          Result.success(\"成功(成功度\#{((target - total) / 10).to_i})\")\n        else\n          Result.failure(\"失敗(失敗度\#{((total - target) / 10).to_i})\")\n        end\n      end\n\n      def result_1d100_text(total, dice_total, cmp_op, target)\n        result = result_1d100(total, dice_total, cmp_op, target)&.text\n        if result.nil?\n          \"\"\n        else\n          \" ＞ \#{result}\"\n        end\n      end\n\n      ####################            WHFRP関連          ########################\n      def getCriticalResult(string)\n        # クリティカル効果データ\n        whh = [\n          '01:打撃で状況が把握出来なくなる。次ターンは1回の半アクションしか行なえない。',\n          '02:耳を強打された為、耳鳴りが酷く目眩がする。1Rに渡って一切のアクションを行なえない。',\n          '03:打撃が頭皮を酷く傷つけた。【武器技術度】に-10%。治療を受けるまで継続。',\n          '04:鎧が損傷し当該部位のAP-1。修理するには(職能:鎧鍛冶)テスト。鎧を着けていないなら1Rの間アクションを行なえない。',\n          '05:転んで倒れ、頭がくらくらする。1Rに渡ってあらゆるテストに-30で、立ち上がるには起立アクションが必要。',\n          '06:1d10R気絶。',\n          '07:1d10分気絶。以後CTはサドンデス。',\n          '08:顔がずたずたになって倒れ、以後無防備状態。治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。以後CTはサドンデスを適用。【頑強】テストに失敗すると片方の視力を失う。',\n          '09:凄まじい打撃により頭蓋骨が粉砕される。死は瞬時に訪れる。',\n          '10:死亡する。いかに盛大に出血し、どのような死に様を見せたのかを説明してもよい。',\n        ]\n        wha = [\n          '01:手に握っていたものを落とす。盾はくくりつけられている為、影響なし。',\n          '02:打撃で腕が痺れ、1Rの間使えなくなる。',\n          '03:手の機能が失われ、治療を受けるまで回復できない。手で握っていたもの(盾を除く)は落ちる。',\n          '04:鎧が損傷する。当該部位のAP-1。修理するには(職能:鎧鍛冶)テスト。鎧を着けていないなら腕が痺れ、1Rの間使えなくなる。',\n          '05:腕の機能が失われ、治療を受けるまで回復できない。手で握っていたもの(盾を除く)は落ちる。',\n          '06:腕が砕かれる。手で握っていたもの(盾を除く)は落ちる。出血がひどく、治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。以後CTはサドンデスを適用。',\n          '07:手首から先が血まみれの残骸と化す。手で握っていたもの(盾を除く)は落ちる。出血がひどく、治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。以後CTはサドンデスを適用。【頑健】テストに失敗すると手の機能を失う。',\n          '08:腕は血まみれの肉塊がぶら下がっている状態になる。手で握っていたもの(盾を除く)は落ちる。治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。以後CTはサドンデスを適用。【頑健】テストに失敗すると肘から先の機能を失う。',\n          '09:大動脈に傷が及んだ。コンマ数秒の内に損傷した肩から血を噴出して倒れる。ショックと失血により、ほぼ即死する。',\n          '10:死亡する。いかに盛大に出血し、どのような死に様を見せたのかを説明してもよい。',\n        ]\n        whb = [\n          '01:打撃で息が詰まる。1Rの間、キャラクターの全てのテストや攻撃に-20%。',\n          '02:股間への一撃。苦痛のあまり、1Rに渡って一切のアクションを行なえない。',\n          '03:打撃で肋骨がぐちゃぐちゃになる。以後治療を受けるまでの間、【武器技術度】に-10%。',\n          '04:鎧が損傷する。当該部位のAP-1。修理するには(職能:鎧鍛冶)テスト。鎧を着けていないなら股間への一撃、1Rに渡って一切のアクションを行なえない。',\n          '05:転んで倒れ、息が詰まって悶絶する。1Rに渡ってあらゆるテストに-30の修正、立ち上がるには起立アクションが必要。',\n          '06:1d10R気絶。',\n          '07:ひどい内出血が起こり、無防備状態。出血がひどく、治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。',\n          '08:脊髄が粉砕されて倒れ、以後治療を受けるまで無防備状態。以後CTはサドンデスを適用。【頑強】テストに失敗すると腰から下が不随になる。',\n          '09:凄まじい打撃により複数の臓器が破裂し、死は数秒のうちに訪れる。',\n          '10:死亡する。いかに盛大に出血し、どのような死に様を見せたのかを説明してもよい。',\n        ]\n        whl = [\n          '01:よろめく。次のターン、1回の半アクションしか行なえない。',\n          '02:脚が痺れる。1Rに渡って【移動】は半減し、脚に関連する【敏捷】テストに-20%。回避が出来なくなる。',\n          '03:脚の機能が失われ、治療を受けるまで回復しない。【移動】は半減し、脚に関連する【敏捷】テストに-20%。回避が出来なくなる。',\n          '04:鎧が損傷する。当該部位のAP-1。修理するには(職能:鎧鍛冶)テスト。鎧を着けていないなら脚が痺れる、1Rに渡って【移動】は半減し、脚に関連する【敏捷】テストに-20%、回避不可になる。',\n          '05:転んで倒れ、頭がくらくらする。1Rに渡ってあらゆるテストに-30の修正、立ち上がるには起立アクションが必要。',\n          '06:脚が砕かれ、無防備状態。出血がひどく、治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。以後CTはサドンデスを適用。',\n          '07:脚は血まみれの残骸と化し、無防備状態になる。治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。以後CTはサドンデスを適用。【頑強】テストに失敗すると足首から先を失う。',\n          '08:脚は血まみれの肉塊がぶらさがっている状態。以後無防備状態。治療を受けるまで毎Rの被害者のターン開始時に20%で死亡。以後CTはサドンデスを適用。【頑強】テストに失敗すると膝から下を失う。',\n          '09:大動脈に傷が及ぶ。コンマ数秒の内に脚の残骸から血を噴出して倒れ、ショックと出血で死は瞬時に訪れる。',\n          '10:死亡する。いかに盛大に出血し、どのような死に様を見せたのかを説明してもよい。',\n        ]\n        whw = [\n          '01:軽打。1ラウンドに渡って、あらゆるテストに-10％。',\n          '02:かすり傷。+10％の【敏捷】テストを行い、失敗なら直ちに高度を1段階失う。地上にいるクリーチャーは、次のターンには飛び立てない。',\n          '03:損傷する。【飛行移動力】が2点低下する。-10％の【敏捷】テストを行い、失敗なら直ちに高度を1段階失う。地上にいるクリーチャーは、次のターンには飛び立てない。',\n          '04:酷く損傷する。【飛行移動力】が4点低下する。-30％の【敏捷】テストを行い、失敗なら直ちに高度を1段階失う。地上にいるクリーチャーは、1d10ターンが経過するまで飛び立てない。',\n          '05:翼が使えなくなる。【飛行移動力】が0に低下する。飛行中のものは落下し、高度に応じたダメージを受ける。地上にいるクリーチャーは、怪我が癒えるまで飛び立てない。',\n          '06:翼の付け根に傷が開く。【飛行移動力】が0に低下する。飛行中のものは落下し、高度に応じたダメージを受ける。地上にいるクリーチャーは、怪我が癒えるまで飛び立てない。治療を受けるまで毎R被害者のターン開始時に20％の確率で死亡。以後CTはサドンデスを適用。',\n          '07:翼は血まみれの残骸と化し、無防備状態になる。【飛行移動力】が0に低下する。飛行中のものは落下し、高度に応じたダメージを受ける。地上にいるクリーチャーは、怪我が癒えるまで飛び立てない。治療を受けるまで毎R被害者のターン開始時に20％の確率で死亡。以後CTはサドンデスを適用。【頑強】テストに失敗すると飛行能力を失う。',\n          '08:翼が千切れてバラバラになり、無防備状態になる。【飛行移動力】が0に低下する。飛行中のものは落下し、高度に応じたダメージを受ける。地上にいるクリーチャーは、怪我が癒えるまで飛び立てない。治療を受けるまで毎R被害者のターン開始時に20％の確率で死亡。以後CTはサドンデスを適用。飛行能力を失う。',\n          '09:大動脈が切断された。コンマ数秒の内に血を噴き上げてくずおれる、ショックと出血で死は瞬時に訪れる。',\n          '10:死亡する。いかに盛大に出血し、どのような死に様を見せたのかを説明してもよい。',\n        ]\n\n        criticalTable = [\n          5, 7, 9, 10, 10, 10, 10, 10, 10, 10, # 01-10\n          5, 6, 8, 9, 10, 10, 10, 10, 10, 10, # 11-20\n          4, 6, 8, 9, 9, 10, 10, 10, 10, 10, # 21-30\n          4, 5, 7, 8, 9, 9, 10, 10, 10, 10, # 31-40\n          3, 5, 7, 8, 8, 9, 9, 10, 10, 10, # 41-50\n          3, 4, 6, 7, 8, 8, 9, 9, 10, 10, # 51-60\n          2, 4, 6, 7, 7, 8, 8, 9, 9, 10, # 61-70\n          2, 3, 5, 6, 7, 7, 8, 8, 9, 9,  # 71-80\n          1, 3, 5, 6, 6, 7, 7, 8, 8, 9,  # 81-90\n          1, 2, 4, 5, 6, 6, 7, 7, 8, 8,  # 91-00\n        ]\n\n        unless /WH([HABTLW])(\\d+)/ =~ string\n          return '1'\n        end\n\n        partsWord = Regexp.last_match(1) # 部位\n        criticalValue = Regexp.last_match(2).to_i # クリティカル値\n        criticalValue = 10 if criticalValue > 10\n        criticalValue = 1 if criticalValue < 1\n\n        whpp = ''\n        whppp = ''\n\n        case partsWord\n        when /H/i\n          whpp = '頭部'\n          whppp = whh\n        when /A/i\n          whpp = '腕部'\n          whppp = wha\n        when /[TB]/i\n          whpp = '胴体'\n          whppp = whb\n        when /L/i\n          whpp = '脚部'\n          whppp = whl\n        when /W/i\n          whpp = '翼部'\n          whppp = whw\n        end\n\n        dice_now = @randomizer.roll_once(100)\n\n        crit_no = ((dice_now - 1) / 10).to_i * 10\n        crit_num = criticalTable[crit_no + criticalValue - 1]\n\n        resultText = whppp[crit_num - 1]\n        if crit_num >= 5\n          resultText += 'サドンデス×'\n        else\n          resultText += 'サドンデス○'\n        end\n\n        output = \"\#{whpp}CT表(\#{dice_now}+\#{criticalValue}) ＞ \#{resultText}\"\n\n        return output\n      end\n\n      def wh_atpos(pos_num, pos_type) # WHFRP2命中部位表\n        debug(\"wh_atpos begin pos_type\", pos_type)\n        pos_2l = [\n          '二足',\n          15, '頭部',\n          35, '右腕',\n          55, '左腕',\n          80, '胴体',\n          90, '右脚',\n          100, '左脚',\n        ]\n        pos_2lw = [\n          '有翼二足',\n          15, '頭部',\n          25, '右腕',\n          35, '左腕',\n          45, '右翼',\n          55, '左翼',\n          80, '胴体',\n          90, '右脚',\n          100, '左脚',\n        ]\n        pos_4l = [\n          '四足',\n          15, '頭部',\n          60, '胴体',\n          70, '右前脚',\n          80, '左前脚',\n          90, '右後脚',\n          100, '左後脚',\n        ]\n        pos_4la = [\n          '半人四足',\n          10, '頭部',\n          20, '右腕',\n          30, '左腕',\n          60, '胴体',\n          70, '右前脚',\n          80, '左前脚',\n          90, '右後脚',\n          100, '左後脚',\n        ]\n        pos_4lw = [\n          '有翼四足',\n          10, '頭部',\n          20, '右翼',\n          30, '左翼',\n          60, '胴体',\n          70, '右前脚',\n          80, '左前脚',\n          90, '右後脚',\n          100, '左後脚',\n        ]\n        pos_b = [\n          '鳥',\n          15, '頭部',\n          35, '右翼',\n          55, '左翼',\n          80, '胴体',\n          90, '右脚',\n          100, '左脚',\n        ]\n\n        wh_pos = [pos_2l, pos_2lw, pos_4l, pos_4la, pos_4lw, pos_b]\n\n        pos_t = 0\n        debug(\"pos_type\", pos_type)\n        if pos_type != \"\"\n          case pos_type\n          when /@(2W|W2)/i\n            pos_t = 1\n          when /@(4W|W4)/i\n            pos_t = 4\n          when /@(4H|H4)/i\n            pos_t = 3\n          when /@4/i\n            pos_t = 2\n          when /@W/i\n            pos_t = 5\n          else\n            unless  /@(2H|H2|2)/i =~ pos_type\n              pos_t = -1\n            end\n          end\n        end\n\n        output = \"\"\n\n        debug(\"pos_t\", pos_t)\n        if pos_t < 0\n          wh_pos.each do |pos_i|\n            output += get_wh_atpos_message(pos_i, pos_num)\n          end\n        else\n          pos_i = wh_pos[pos_t]\n          output += get_wh_atpos_message(pos_i, pos_num)\n        end\n\n        return output\n      end\n\n      def get_wh_atpos_message(pos_i, pos_num)\n        output = \"\"\n\n        output += ' ' + pos_i[0] + \":\"\n\n        1.step(pos_i.length + 1, 2) do |i|\n          if pos_num <= pos_i[i]\n            output += pos_i[i + 1]\n            break\n          end\n        end\n\n        return output\n      end\n\n      def getAttackResult(string)\n        debug(\"getAttackResult begin string\", string)\n\n        pos_type = \"\"\n\n        if /(.+)(@.*)/ =~ string\n          string = Regexp.last_match(1)\n          pos_type = Regexp.last_match(2)\n          debug(\"pos_type\", pos_type)\n        end\n\n        unless /WH(\\d+)/i =~ string\n          return '1'\n        end\n\n        diff = Regexp.last_match(1).to_i\n\n        total_n = @randomizer.roll_once(100)\n\n        output = \"(\#{string}) ＞ \#{total_n}\"\n        output += result_1d100_text(total_n, total_n, :<=, diff)\n\n        pos_num = (total_n % 10) * 10 + (total_n / 10).to_i\n        pos_num = 100 if total_n >= 100\n\n        output += wh_atpos(pos_num, pos_type) if total_n <= diff\n\n        return output\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:Warhammer>", "self", "register_prefix", "initialize", "command", "@round_type", "RoundType::CEIL", "RoundType", "eval_game_system_specific_command", "output_msg", "$ret_or_1", "upcase", "attackCommand", "Regexp", "last_match", "1", "getAttackResult", "criticalCommand", "getCriticalResult", "result_1d100", "total", "_dice_total", "cmp_op", "target", "Result", "nothing", "<=", "success", "/", "-", "10", "to_i", "failure", "result_1d100_text", "dice_total", "result", "nil?", "string", "whh", "wha", "whb", "whl", "whw", "criticalTable", "=~", "partsWord", "criticalValue", "2", ">", "<", "whpp", "whppp", "dice_now", "@randomizer", "roll_once", "100", "crit_no", "*", "crit_num", "[]", "+", "resultText", ">=", "5", "output", "wh_atpos", "pos_num", "pos_type", "debug", "pos_2l", "15", "35", "55", "80", "90", "pos_2lw", "25", "45", "pos_4l", "60", "70", "pos_4la", "20", "30", "pos_4lw", "pos_b", "wh_pos", "pos_t", "0", "4", "3", "-1", "each", "block in wh_atpos", "pos_i", "block (2 levels) in wh_atpos", "get_wh_atpos_message", "step", "length", "block in get_wh_atpos_message", "i", "block (2 levels) in get_wh_atpos_message", "diff", "total_n", "%", "Base"], :mappings=>"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"}}]}
{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/ChaosFlare.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class ChaosFlare < Base\n      # ゲームシステムの識別子\n      ID = 'ChaosFlare'\n      # ゲームシステム名\n      NAME = 'カオスフレア'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'かおすふれあ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        判定\n        CF\n          書式: [ダイスの数]CF[修正値][@クリティカル値][#ファンブル値][>=目標値]\n            CF以外は全て省略可能\n          例:\n          - CF 2D6,クリティカル値12,ファンブル値2で判定\n          - CF+10@10 修正値+10,クリティカル値10で判定\n          - CF+10#3 修正値+10,ファンブル値3で判定\n          - CF+10>=10 目標値を指定した場合、差分値も出力する\n          - 3CF+10@10#3>=10 3D6での判定\n          - CF@9#3+8>=10\n\n        2D6\n          ファンブル値2で判定する。クリティカルの判定は行われない。\n          目標値が設定された場合、差分値を出力する。\n          - 2D6+4>=10\n\n        各種表\n          FT: 因縁表\n          FTx: 数値を指定すると因果表の値を出力する\n          - FT -> 11から66の間でランダム決定\n          - FT23 -> 23の項目を出力\n          - FT0\n          - FT7\n      INFO_MESSAGE_TEXT\n\n      register_prefix('\\d*CF', 'FT')\n\n      # ゲーム別成功度判定(2D6)。以前の処理をそのまま残しています。\n      def result_2d6(total, dice_total, _dice_list, cmp_op, target)\n        return nil unless cmp_op == :>=\n\n        sequence = []\n        result = Result.new\n\n        if dice_total <= 2\n          total -= 20\n          sequence.push(\"ファンブル(-20)\")\n          result.fumble = true\n        end\n\n        if target != '?'\n          if total >= target\n            sequence.push(\"成功\")\n            result.success = true\n          else\n            sequence.push(\"失敗\")\n            result.failure = true\n          end\n\n          if total - target != 0\n            sequence.push(\"差分値\#{total - target}\")\n          end\n        end\n\n        return Result.nothing if sequence.empty?\n\n        result.text = sequence.join(\" ＞ \")\n        return result\n      end\n\n      def eval_game_system_specific_command(command)\n        if command.start_with? \"FT\"\n          roll_fate_table(command)\n        else\n          cf_roll(command)\n        end\n      end\n\n      private\n\n      # 因縁表\n      def roll_fate_table(command)\n        m = /^FT(\\d+)?/.match(command)\n        if m[1]\n          num = m[1].to_i\n          if [0, 7].include?(num)\n            return \"因果表(\#{num}) ＞ \#{FATE_TABLE[num][0]}\"\n          end\n\n          dice1 = (num / 10).to_i\n          dice2 = num % 10\n          if !(1..6).include?(dice1) || !(1..6).include?(dice2)\n            return nil\n          end\n        else\n          dice1 = @randomizer.roll_once(6)\n          dice2 = @randomizer.roll_once(6)\n        end\n\n        index1 = dice1\n        index2 = (dice2 / 2).to_i - 1\n        return \"因果表(\#{dice1}\#{dice2}) ＞ \#{FATE_TABLE[index1][index2]}\"\n      end\n\n      # カオスフレア専用コマンド\n      # @param command [String]\n      # @return [String, nil]\n      def cf_roll(command)\n        parser = Command::Parser.new(/\\d*CF/, round_type: round_type)\n                                .enable_critical\n                                .enable_fumble\n\n        @cmd = parser.parse(command)\n        unless @cmd\n          return nil\n        end\n\n        times = @cmd.command == \"CF\" ? 2 : @cmd.command.to_i\n        critical = @cmd.critical || 12\n        fumble = @cmd.fumble || 2\n        @cmd.dollar = nil\n\n        if times < 0 || ![:>=, nil].include?(@cmd.cmp_op)\n          return nil\n        end\n\n        dice_list = @randomizer.roll_barabara(times, 6)\n        dice_total = dice_list.sum()\n        dice_list_text = dice_list.join(\",\")\n\n        is_critical = dice_total >= critical\n        is_fumble = dice_total <= fumble\n\n        total =\n          if is_critical\n            30\n          elsif is_fumble\n            -20\n          else\n            dice_total\n          end\n\n        total += @cmd.modify_number\n\n        sequence = [\n          \"(\#{@cmd.to_s(:after_modify_number)})\",\n          \"\#{dice_total}[\#{dice_list_text}]\",\n          total.to_s,\n          (\"0\" if total < 0),\n          (\"クリティカル\" if is_critical),\n          (\"ファンブル\" if is_fumble),\n          (\"差分値 \#{difference(total)}\" if @cmd.target_number),\n        ].compact\n\n        return sequence.join(\" ＞ \")\n      end\n\n      # @param total [Integer] 合計値\n      # @return [Integer] 差分値\n      def difference(total)\n        if total < 0\n          -@cmd.target_number\n        else\n          total - @cmd.target_number\n        end\n      end\n\n      # 表を振るのに使う定数的なやつ。\n      FATE_TABLE = [\n        [\"腐れ縁\"],\n        [\"純愛\", \"親近感\", \"庇護\"],\n        [\"信頼\", \"感服\", \"共感\"],\n        [\"友情\", \"尊敬\", \"慕情\"],\n        [\"好敵手\", \"期待\", \"借り\"],\n        [\"興味\", \"憎悪\", \"悲しみ\"],\n        [\"恐怖\", \"執着\", \"利用\"],\n        [\"任意\"]\n      ].freeze\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:ChaosFlare>", "self", "register_prefix", "result_2d6", "total", "dice_total", "_dice_list", "cmp_op", "target", "sequence", "result", "Result", "new", "<=", "2", "-", "20", "push", "fumble=", ">=", "success=", "failure=", "0", "empty?", "nothing", "text=", "join", "eval_game_system_specific_command", "command", "start_with?", "roll_fate_table", "cf_roll", "private", "m", "match", "[]", "1", "num", "to_i", "7", "include?", "FATE_TABLE", "dice1", "/", "10", "dice2", "%", "6", "@randomizer", "roll_once", "index1", "index2", "parser", "Command::Parser", "Command", "round_type", "enable_critical", "enable_fumble", "@cmd", "parse", "times", "critical", "$ret_or_1", "12", "fumble", "dollar=", "<", "dice_list", "roll_barabara", "sum", "dice_list_text", "is_critical", "is_fumble", "30", "-20", "+", "modify_number", "to_s", "target_number", "difference", "compact", "-@", "freeze", "Base"], :mappings=>"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"}}]}
{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/EclipsePhase.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class EclipsePhase < Base\n      # ゲームシステムの識別子\n      ID = 'EclipsePhase'\n\n      # ゲームシステム名\n      NAME = 'エクリプス・フェイズ'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'えくりふすふえいす'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE =\n        '1D100<=m 方式の判定で成否、クリティカル・ファンブルを自動判定'\n\n      def result_1d100(total, _dice_total, cmp_op, target)\n        return nil if target == '?'\n        return nil unless cmp_op == :<=\n\n        dice_value = total % 100 # 出目00は100ではなく00とする\n        dice_ten_place = (dice_value / 10).to_i\n        dice_one_place = dice_value % 10\n\n        if dice_ten_place == dice_one_place\n          return Result.fumble('決定的失敗') if dice_value == 99\n          return Result.critical('00 ＞ 決定的成功') if dice_value == 0\n          return Result.critical('決定的成功') if total <= target\n\n          return Result.fumble('決定的失敗')\n        end\n\n        diff_threshold = 30\n\n        if total <= target\n          if total >= diff_threshold\n            Result.success('エクセレント')\n          else\n            Result.success('成功')\n          end\n        elsif (total - target) >= diff_threshold\n          Result.failure('シビア')\n        else\n          Result.failure('失敗')\n        end\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:EclipsePhase>", "result_1d100", "total", "_dice_total", "cmp_op", "target", "dice_value", "%", "100", "dice_ten_place", "/", "10", "to_i", "dice_one_place", "99", "Result", "fumble", "0", "critical", "<=", "diff_threshold", "30", ">=", "success", "-", "failure", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;;QAEE,8BAAKA,cAAL;QAGA,gCAAOA,YAAP;QAGA,oCAAWA,WAAX;QAGA,wCACEA,qCADF;QAGAA,OAAAC,4BAAAA,wBAAiBC,KAAD,EAAQC,WAAR,EAAqBC,MAArB,EAA6BC,MAA7CJ;AAAAA,UAAAA;;;UACE,IAAA,MAAcI,MAAd,EAAwBJ,GAAxB,CAAA;YAAA,OAAO;UAAP;UACA,KAAA,MAAkBG,MAAlB,EAA4B,IAA5B,CAAA;YAAA,OAAO;UAAP;UAEAE,aAAaJ,KAAMK,MAAAA,CAAEC,GAAFD;UACnBE,iBAA6BC,WAAXJ,UAAWI,EAAEC,EAAFD,CAAKE,MAAAA,CAAAA;UAClCC,iBAAiBP,UAAWC,MAAAA,CAAEI,EAAFJ;UAE5B,IAAA,MAAGE,cAAH,EAAqBI,cAArB,CAAA;;YACE,IAAA,MAAiCP,UAAjC,EAA+CQ,EAA/C,CAAA;cAAA,OAAOC,YAAMC,QAAAA,CAAQf,OAARe;YAAb;YACA,IAAA,MAAwCV,UAAxC,EAAsDW,CAAtD,CAAA;cAAA,OAAOF,YAAMG,UAAAA,CAAUjB,YAAViB;YAAb;YACA,IAAA,QAAyCC,OAANjB,KAAMiB,EAAGd,MAAHc,CAAzC,CAAA;cAAA,OAAOJ,YAAMG,UAAAA,CAAUjB,OAAViB;YAAb;YAEA,OAAOH,YAAMC,QAAAA,CAAQf,OAARe;UALf;UAQAI,iBAAiBC;UAEjB,IAAA,QAASF,OAANjB,KAAMiB,EAAGd,MAAHc,CAAT,CAAA;YACE,IAAA,QAASG,OAANpB,KAAMoB,EAAGF,cAAHE,CAAT,CAAA;cACErB,OAAAc,YAAMQ,SAAAA,CAAStB,QAATsB;YADR;cAGEtB,OAAAc,YAAMQ,SAAAA,CAAStB,IAATsB;YAHR;UADF,OAMA,IAAA,QAAuBD,OAAVE,UAANtB,KAAMsB,EAAEnB,MAAFmB,CAAUF,EAAGF,cAAHE,CAAvB,CAAA;YACErB,OAAAc,YAAMU,SAAAA,CAASxB,KAATwB;UADR;YAGExB,OAAAc,YAAMU,SAAAA,CAASxB,IAATwB;UAHR;QAxBFxB,CAAAA;MAdFD,GAAAA,WAAAA,EAAqB0B,UAArB1B;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
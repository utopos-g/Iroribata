{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/DarkSouls.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class DarkSouls < Base\n      # ゲームシステムの識別子\n      ID = 'DarkSouls'\n\n      # ゲームシステム名\n      NAME = 'ダークソウルTRPG'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'たあくそうるTRPG'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・行為判定：[n]DS[a±b][@t]　　[]内のコマンドは省略可\n        ・能動判定：[n]ADS[a±b][@t]　　FP消費を判定\n        　n：ダイス数。省略時は「2」\n        　a±b：修正値。「1+2-1」のように、複数定可\n        　@t：目標値。省略時は達成値を、指定時は判定の正否を表示\n        例）DS → 2D6の達成値を表示\n        　　1DS → 1D6の達成値を表示\n        　　ADS+2-2 → 2D6+2の達成値を表示（能動判定）\n        　　DS+2@10 → 2D6+2で目標値10の判定\n      MESSAGETEXT\n\n      register_prefix('(\\d+)?(A)?DS([-+\\d]*)(@\\d+)?')\n\n      def eval_game_system_specific_command(command)\n        return nil unless (m = /(\\d+)?(A)?DS([-+\\d]*)(@(\\d+))?$/i.match(command.upcase))\n\n        diceCount = (m[1] || 2).to_i\n        isActive = !m[2].nil?\n        modify = getValue(m[3])\n        target = (m[5] || 0).to_i\n\n        output = checkRoll(diceCount, isActive, modify, target)\n\n        return output\n      end\n\n      def checkRoll(diceCount, isActive, modify, target)\n        dice_list = @randomizer.roll_barabara(diceCount, 6)\n        dice = dice_list.sum()\n        diceText = dice_list.join(\",\")\n\n        successValue = dice + modify\n        modifyText = getValueText(modify)\n        targetText = (target == 0 ? '' : \">=\#{target}\")\n\n        if isActive\n          diceArray = diceText.split(/,/).map(&:to_i)\n          focusDamage = diceArray.count { |i| i == 1 }\n\n          if focusDamage > 0\n            focusText = \"■\" * focusDamage\n            focusText = \"（FP\#{focusText}消費）\"\n          end\n        end\n\n        result = \"(\#{diceCount}D6\#{modifyText}\#{targetText})\"\n        result += \" ＞ \#{dice}(\#{diceText})\#{modifyText}\"\n        result += \" ＞ \#{successValue}\#{targetText}\"\n\n        if target > 0\n          if successValue >= target\n            result += \" ＞ 【成功】\"\n          else\n            result += \" ＞ 【失敗】\"\n          end\n        end\n\n        result += focusText.to_s\n        return result\n      end\n\n      def getValue(text)\n        text ||= \"\"\n        return ArithmeticEvaluator.eval(text)\n      end\n\n      def getValueText(value)\n        return \"\" if value == 0\n        return value.to_s if value < 0\n\n        return \"\\+\#{value}\"\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:DarkSouls>", "self", "register_prefix", "eval_game_system_specific_command", "command", "m", "match", "upcase", "diceCount", "$ret_or_1", "[]", "1", "2", "to_i", "isActive", "nil?", "!", "modify", "getValue", "3", "target", "5", "0", "output", "checkRoll", "dice_list", "@randomizer", "roll_barabara", "6", "dice", "sum", "diceText", "join", "successValue", "+", "modifyText", "getValueText", "targetText", "diceArray", "map", "split", "to_proc", "focusDamage", "count", "block in checkRoll", "i", "block (2 levels) in checkRoll", "==", ">", "focusText", "*", "result", ">=", "to_s", "text", "ArithmeticEvaluator", "eval", "value", "<", "Base"], :mappings=>"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"}}]}
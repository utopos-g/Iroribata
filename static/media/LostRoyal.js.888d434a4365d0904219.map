{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/LostRoyal.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class LostRoyal < Base\n      # ゲームシステムの識別子\n      ID = 'LostRoyal'\n\n      # ゲームシステム名\n      NAME = 'ロストロイヤル'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'ろすとろいやる'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・D66ダイスあり\n\n        行為判定\n        　LR[x,x,x,x,x,x]\n        　　x の並びには【判定表】の数値を順番に入力する。\n        　　（例： LR[1,3,0,1,2,3] ）\n\n        ファンブル表\n        　FC\n\n        風力決定表\n        　WPC\n\n        感情決定表\n        　EC\n\n        希望点の決定\n        　HRx\n        　　x にはダイスの数（ 1 - 2 ）を指定\n      INFO_MESSAGE_TEXT\n\n      register_prefix('LR\\[[0-5],[0-5],[0-5],[0-5],[0-5],[0-5]\\]', 'FC', 'WPC', 'EC', 'HR[1-2]')\n\n      def initialize(command)\n        super(command)\n\n        @sort_add_dice = true\n        @d66_sort_type = D66SortType::NO_SORT\n      end\n\n      def eval_game_system_specific_command(command)\n        case command\n        when /LR\\[([0-5]),([0-5]),([0-5]),([0-5]),([0-5]),([0-5])\\]/i\n          return check_lostroyal([Regexp.last_match(1).to_i, Regexp.last_match(2).to_i, Regexp.last_match(3).to_i, Regexp.last_match(4).to_i, Regexp.last_match(5).to_i, Regexp.last_match(6).to_i,])\n        when /FC/\n          return roll_fumble_chart\n        when /WPC/\n          return roll_wind_power_chart\n        when /EC/\n          return roll_emotion_chart\n        when /HR([1-2])/\n          return roll_hope(Regexp.last_match(1).to_i)\n        end\n\n        return nil\n      end\n\n      def check_lostroyal(checking_table)\n        keys = []\n\n        3.times do |_i|\n          key = @randomizer.roll_once(6)\n          keys << key\n        end\n\n        scores = (keys.map { |k| checking_table[k - 1] }).to_a\n        total_score = scores.inject(:+)\n\n        chained_sequence = find_sequence(keys)\n\n        text = \"3D6 => [\#{keys.join(',')}] => (\#{scores.join('+')}) => \#{total_score}\"\n\n        unless chained_sequence.nil? || chained_sequence.empty?\n          bonus = fumble_?(keys, chained_sequence) ? 3 : chained_sequence.size\n          text += \" | \#{chained_sequence.size} chain! (\#{chained_sequence.join(',')}) => \#{total_score + bonus}\"\n\n          if chained_sequence.size >= 3\n            text += \" [スペシャル]\"\n          end\n\n          if fumble_?(keys, chained_sequence)\n            text += \" [ファンブル]\"\n          end\n        end\n\n        return text\n      end\n\n      def find_sequence(keys)\n        keys = keys.sort\n\n        sequences = (1...6).map do |start_key|\n          find_sequence_from_start_key(keys, start_key)\n        end\n        sequences.select { |x| x.size > 1 }.max { |a, b| a.size <=> b.size }\n      end\n\n      def find_sequence_from_start_key(keys, start_key)\n        chained_keys = []\n\n        key = start_key\n\n        while keys.include? key\n          chained_keys << key\n          key += 1\n        end\n\n        if !chained_keys.empty? && chained_keys[0] == 1\n          key = 6\n          while keys.include? key\n            chained_keys.unshift key\n            key -= 1\n          end\n        end\n\n        return chained_keys\n      end\n\n      def fumble_?(keys, chained_sequence)\n        chained_sequence.each do |k|\n          if keys.count(k) >= 2\n            return true\n          end\n        end\n\n        false\n      end\n\n      def roll_fumble_chart\n        key = @randomizer.roll_once(6)\n\n        text = [\n          \"何かの問題で言い争い、主君に無礼を働いてしまう。あなたは主君の名誉点を１点失うか、【時間】を１点消費して和解の話し合いを持つか選べる。\",\n          \"見過ごせば人々を不幸にする危険に遭遇する。あなたは逃げ出して冒険の名誉点を１点失うか、これに立ち向かい【命数】を２点減らすかを選べる。\",\n          \"あなたが惹かれたのは好意に付け込む人だった。あなたはその場を去って恋慕の名誉点を１点失うか【正義】を１点減らして礼を尽くすかを選べる。\",\n          \"金銭的な問題で、生命と魂の苦しみを背負う人に出会う。あなたは庇護の名誉点を１点失うか出費を３点増やすかを選べる。\",\n          \"襲撃を受ける。苦もなく叩き伏せると、卑屈な態度で命乞いをしてきた。容赦なく命を奪い寛容の名誉点を１点失うか、密告によって【血路】が１Ｄ６点増えるかを選ぶことができる。\",\n          \"風聞により、友が悪に身を貶めたと知る。共に並んだ戦場が色褪せる想いだ。戦友の名誉点を１点減らすか、【酒と歌】すべてを失うかを選べる。\",\n        ][key - 1]\n\n        return \"1D6 => [\#{key}] \#{text}\"\n      end\n\n      def roll_wind_power_chart\n        key = 0\n        total_bonus = 0\n        text = \"\"\n\n        loop do\n          dice = @randomizer.roll_once(6)\n          key += dice\n\n          add, bonus, current_text, = [\n            [true, 0, \"ほぼ凪（振り足し）\"],\n            [true, 0, \"弱い風（振り足し）\"],\n            [false, 0, \"ゆるやかな風\"],\n            [false, 0, \"ゆるやかな風\"],\n            [false, 1, \"やや強い風（儀式点プラス１）\"],\n            [false, 2, \"強い風（龍を幻視、儀式点プラス２）\"],\n            [false, 3, \"体が揺らぐほどの風（龍を幻視、儀式点プラス３）\"],\n          ][[key, 7].min - 1]\n\n          total_bonus += bonus\n\n          if key != dice\n            current_text = \"1D6[\#{dice}]+\#{key - dice} \#{current_text}\"\n          else\n            current_text = \"1D6[\#{dice}] \#{current_text}\"\n          end\n\n          if text.empty?\n            text = current_text\n          else\n            text = \"\#{text} => \#{current_text}\"\n          end\n\n          unless add\n            text += \" [合計：儀式点 +\#{total_bonus} ]\"\n            return text\n          end\n        end\n      end\n\n      def roll_emotion_chart\n        key = @randomizer.roll_once(6)\n\n        text = [\n          \"愛情／殺意\",\n          \"友情／負目\",\n          \"崇拝／嫌悪\",\n          \"興味／侮蔑\",\n          \"信頼／嫉妬\",\n          \"守護／欲情\",\n        ][key - 1]\n\n        return \"1D6 => [\#{key}] \#{text}\"\n      end\n\n      def roll_hope(number_of_dice)\n        total = 0\n        text = \"\"\n\n        loop do\n          d1 = @randomizer.roll_once(6)\n          d2 = 0\n\n          if number_of_dice >= 2\n            d2 = @randomizer.roll_once(6)\n          end\n\n          total += d1 + d2\n\n          if number_of_dice == 2\n            text += \"2D6[\#{d1},\#{d2}]\"\n          else\n            text += \"1D6[\#{d1}]\"\n          end\n\n          if is_1or2(d1) || is_1or2(d2)\n            text += \" （振り足し） => \"\n          else\n            text += \" => 合計 \#{total}\"\n            return text\n          end\n        end\n      end\n\n      def is_1or2(n)\n        [1, 2].include?(n)\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:LostRoyal>", "self", "register_prefix", "initialize", "command", "@sort_add_dice", "@d66_sort_type", "D66SortType::NO_SORT", "D66SortType", "eval_game_system_specific_command", "$ret_or_1", "check_lostroyal", "Regexp", "last_match", "1", "to_i", "2", "3", "4", "5", "6", "roll_fumble_chart", "roll_wind_power_chart", "roll_emotion_chart", "roll_hope", "checking_table", "keys", "times", "block in check_lostroyal", "_i", "block (2 levels) in check_lostroyal", "key", "@randomizer", "roll_once", "<<", "scores", "map", "k", "[]", "-", "to_a", "total_score", "inject", "chained_sequence", "find_sequence", "text", "join", "nil?", "empty?", "bonus", "fumble_?", "size", "+", ">=", "sort", "sequences", "block in find_sequence", "start_key", "block (2 levels) in find_sequence", "find_sequence_from_start_key", "max", "select", "x", ">", "a", "b", "<=>", "chained_keys", "include?", "0", "unshift", "each", "block in fumble_?", "count", "block (2 levels) in fumble_?", "total_bonus", "loop", "block in roll_wind_power_chart", "block (2 levels) in roll_wind_power_chart", "dice", "7", "min", "add", "current_text", "number_of_dice", "total", "block in roll_hope", "block (2 levels) in roll_hope", "d1", "d2", "is_1or2", "n", "Base"], :mappings=>"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"}}]}
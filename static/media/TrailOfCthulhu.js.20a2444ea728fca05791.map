{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/TrailOfCthulhu.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class TrailOfCthulhu < Base\n      # ゲームシステムの識別子\n      ID = 'TrailOfCthulhu'\n\n      # ゲームシステム名\n      NAME = 'トレイル・オブ・クトゥルー'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'とれいるおふくとうるう'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGETEXT\n        ■技能判定　TCb[>=t]   b:消費プール・ポイント t:難易度(省略可能)\n\n        例)TC2>=5:消費プール・ポイント2,難易度5で技能判定し、その結果を表示する。\n           TC>=3: 難易度3で技能判定し、その結果を表示する。\n           TC:    難易度指定せずに技能判定する。\n           TC3:   消費プール・ポイント3,難易度指定せずに技能判定する。\n\n        ■神話的狂気表　MMT[a,b]   a,b:除外する神話的狂気(省略時は全神話的狂気を表示する)\n\n        例)MMT[1,8]: 神話的狂気のうち、1番と8番を除外してロールし、神話的狂気を決定する。\n           MMT2,6:   神話的狂気のうち、2番と6番を除外してロールし、神話的狂気を決定する。\n           MMT:      神話的狂気を1番から8番まで列挙する。\n\n      INFO_MESSAGETEXT\n\n      register_prefix(\"TC\", \"MMT\")\n\n      def initialize(command)\n        super(command)\n\n        @round_type = RoundType::CEIL\n      end\n\n      def eval_game_system_specific_command(command)\n        resolute_action(command) ||\n          roll_mythos_madness_table(command)\n      end\n\n      private\n\n      # 技能判定\n      # @param [String] command\n      # @return [Result]\n      def resolute_action(command)\n        m = /^TC([+\\d]*)(>=(\\d+))?/.match(command)\n        return nil unless m\n\n        bonus =\n          if m[1].empty?\n            0\n          else\n            Arithmetic.eval(m[1], @round_type)\n          end\n\n        if bonus.nil?\n          return nil\n        end\n\n        difficulty = m[3].to_i\n\n        dice = @randomizer.roll_once(6)\n        total = dice + bonus\n\n        return Result.new.tap do |result|\n          if difficulty > 0\n            result.condition = (total >= difficulty)\n\n            sequence = [\n              \"(TC\#{bonus}>=\#{difficulty})\",\n              \"\#{dice}+\#{bonus}\",\n              total.to_s,\n              result.success? ? \"成功\" : \"失敗\"\n            ].compact\n          else\n            sequence = [\n              \"(TC\#{bonus})\",\n              \"\#{dice}+\#{bonus}\",\n              total.to_s,\n            ].compact\n          end\n\n          result.text = sequence.join(\" ＞ \")\n        end\n      end\n\n      # 神話的狂気表\n      MITHOS_MADDNESS = [\n        \"1:強迫性障害\",\n        \"2:恐怖症\",\n        \"3:誇大妄想狂\",\n        \"4:殺人狂\",\n        \"5:恣意的記憶喪失\",\n        \"6:多重人格障害\",\n        \"7:偏執症\",\n        \"8:妄想症\",\n      ].freeze\n\n      def roll_mythos_madness_table(command)\n        m = /^MMT(\\[?([1-8],[1-8])\\]?)?/.match(command)\n        return nil unless m\n\n        sequence = []\n        result_text = \"\"\n        if m[1]\n          exclusion_number = m[2].split(',')\n          return nil unless exclusion_number.length == 2\n\n          sequence = [\"(MMT[\#{exclusion_number.join(',')}])\"]\n          is_exclusion_number = true\n          while is_exclusion_number\n            idx = @randomizer.roll_once(8).to_i\n            if idx != exclusion_number[0].to_i && idx != exclusion_number[1].to_i\n              result_text = MITHOS_MADDNESS[idx - 1]\n              is_exclusion_number = false\n            end\n          end\n        else\n          sequence = [\"(MMT)\"]\n          mithos_maddness_all = []\n          (1..8).each do |i|\n            mithos_maddness_all.push(MITHOS_MADDNESS[i - 1])\n          end\n          result_text = mithos_maddness_all.join(\", \")\n        end\n\n        return Result.new.tap do |result|\n          sequence.push(result_text)\n          result.text = sequence.join(\" ＞ \")\n        end\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:TrailOfCthulhu>", "self", "register_prefix", "initialize", "command", "@round_type", "RoundType::CEIL", "RoundType", "eval_game_system_specific_command", "$ret_or_1", "resolute_action", "roll_mythos_madness_table", "private", "m", "match", "bonus", "[]", "1", "empty?", "0", "Arithmetic", "eval", "nil?", "difficulty", "3", "to_i", "dice", "@randomizer", "roll_once", "6", "total", "+", "tap", "Result", "new", "block in resolute_action", "result", "block (2 levels) in resolute_action", ">", "condition=", ">=", "sequence", "to_s", "success?", "compact", "text=", "join", "freeze", "result_text", "exclusion_number", "2", "split", "length", "is_exclusion_number", "idx", "8", "MITHOS_MADDNESS", "-", "mithos_maddness_all", "each", "block in roll_mythos_madness_table", "i", "block (2 levels) in roll_mythos_madness_table", "push", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAEE,8BAAKA,gBAAL;QAGA,gCAAOA,eAAP;QAGA,oCAAWA,aAAX;QAGA,wCACNA,6CADqB,GAErBA,IAFqB,GAGrBA,8CAHqB,GAIrBA,mCAJqB,GAKrBA,6BALqB,GAMrBA,yCANqB,GAOrBA,IAPqB,GAQrBA,qDARqB,GASrBA,IATqB,GAUrBA,mDAVqB,GAWrBA,oDAXqB,GAYrBA,oCAZqB,GAarBA,IAbM;QAgBAC,IAAAC,iBAAAA,CAAgBF,IAAhB,EAAsBA,KAAtBE;;AAEAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAF,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMG,OAAN,CAAA,EAAA,IAAA;UAEAD,OAAAE,CAAAA,kBAAcC,IAAAC,eAAAD,SAAdD;QAHFF,CAAAA;;AAMAK,QAAAA,iDAAAA,6CAAsCJ,OAAtCI;AAAAA,UAAAA;;UACE,IAAA,QAAAC,CAAAA,YAAAR,IAAAS,iBAAAA,CAAgBN,OAAhBM,CAAAD,CAAA,CAAA;YAAAD,OAAA;UAAA;YACEA,OAAAP,IAAAU,2BAAAA,CAA0BP,OAA1BO;UADF;QADFH,CAAAA;QAKAP,IAAAW,SAAAA,CAAAA;;AAKAF,QAAAA,+BAAAA,2BAAoBN,OAApBM,GAAAA,MAAAA,IAAAA,wCAAAA;AAAAA,UAAAA;;;UACEG,IAAI,uBAAuBC,OAAAA,CAAOV,OAAPU;UAC3B,KAAA,QAAkBD,CAAlB,CAAA;YAAA,OAAO;UAAP;UAEAE,QACE,CAAA,QAAGF,CAACG,OAAAA,CAACC,CAADD,CAAGE,WAAAA,CAAAA,CAAP,CAAA,GAAA,CACEC,CADF,IAAA,CAGEC,gBAAUC,MAAAA,CAAMR,CAACG,OAAAA,CAACC,CAADD,CAAjB,EAAsBX,eAAZgB,CAHZ,CAAA;UAMF,IAAA,QAAGN,KAAKO,SAAAA,CAAAA,CAAR,CAAA;YACE,OAAO;UADT;UAIAC,aAAaV,CAACG,OAAAA,CAACQ,CAADR,CAAGS,MAAAA,CAAAA;UAEjBC,OAAOC,eAAWC,WAAAA,CAAWC,CAAXD;UAClBE,QAAaC,SAALL,IAAKK,EAAEhB,KAAFgB;UAEb,OAAiBC,MAAVC,YAAMC,KAAAA,CAAAA,CAAIF,OAAAA,EAAAA,EAAAA,EAAVG,aAAmBC,MAAnBD,EAAAE;;;YAAmB;YACxB,IAAA,QAAcC,OAAXf,UAAWe,EAAEnB,CAAFmB,CAAd,CAAA;;cACEF,MAAMG,eAAAA,CAAoBC,OAANV,KAAMU,EAAGjB,UAAHiB,CAApBD;cAENE,WAAW,CACRJ,KAAD,GAAA,CAAMtB,KAAN,CAAA,GAAYsB,IAAZ,GAAA,CAAgBd,UAAhB,CAAA,GAA2Bc,GADlB,EAET,EAAA,GAAA,CAAGX,IAAH,CAAA,GAAQW,GAAR,GAAA,CAAWtB,KAAX,CAFS,EAGTe,KAAKY,MAAAA,CAAAA,CAHI,EAIT,CAAA,QAAAN,MAAMO,aAAAA,CAAAA,CAAN,CAAA,GAAA,CAAkBN,IAAlB,IAAA,CAAyBA,IAAzB,CAAA,CAJS,CAKVO,SAAAA,CAAAA;YARH;cAUEH,WAAW,CACRJ,KAAD,GAAA,CAAMtB,KAAN,CAAA,GAAYsB,GADH,EAET,EAAA,GAAA,CAAGX,IAAH,CAAA,GAAQW,GAAR,GAAA,CAAWtB,KAAX,CAFS,EAGTe,KAAKY,MAAAA,CAAAA,CAHI,CAIVE,SAAAA,CAAAA;YAdH;YAiBAP,OAAMQ,MAAAA,CAAQJ,QAAQK,MAAAA,CAAMT,KAANS,CAAhBD,CAAAA,EAAAA,MAANT,MAAMS,SAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBAlBDV,CAAUH,EApBnBtB;YAAAA;YAAAA;UAAAA;QAAAA,CAAAA;QA2CA,2CAAkB,CAChBV,SADgB,EAEhBA,OAFgB,EAGhBA,SAHgB,EAIhBA,OAJgB,EAKhBA,WALgB,EAMhBA,UANgB,EAOhBA,OAPgB,EAQhBA,OARgB,CASjB+C,QAAAA,CAAAA,CATD;QAWA/C,OAAAW,yCAAAA,qCAA8BP,OAA9BO;AAAAA,UAAAA;;;UACEE,IAAI,4BAA4BC,OAAAA,CAAOV,OAAPU;UAChC,KAAA,QAAkBD,CAAlB,CAAA;YAAA,OAAO;UAAP;UAEA4B,WAAW;UACXO,cAAcrC;UACd,IAAA,QAAGE,CAACG,OAAAA,CAACC,CAADD,CAAJ,CAAA;;YACEiC,mBAAmBpC,CAACG,OAAAA,CAACkC,CAADlC,CAAGmC,OAAAA,CAAOxC,GAAPwC;YACvB,KAAA,MAAkBF,gBAAgBG,QAAAA,CAAAA,CAAlC,EAA6CF,CAA7C,CAAA;cAAA,OAAO;YAAP;YAEAT,WAAW,CAAE9B,OAAD,GAAA,CAAQsC,gBAAgBH,MAAAA,CAAMnC,GAANmC,CAAxB,CAAA,GAAmCnC,IAApC;YACX0C,sBAAsB;YACtB,OAAA,QAAMA,mBAAN,CAAA;;cACEC,MAAM3B,eAAWC,WAAAA,CAAW2B,CAAX3B,CAAaH,MAAAA,CAAAA;cAC9B,IAAG,CAAA,OAAA6B,GAAA,EAAOL,gBAAgBjC,OAAAA,CAACG,CAADH,CAAGS,MAAAA,CAAAA,CAA1B,CAAA,IAAA,CAAA,OAAmC6B,GAAnC,EAA0CL,gBAAgBjC,OAAAA,CAACC,CAADD,CAAGS,MAAAA,CAAAA,CAA7D,CAAA,CAAA,CAAH;;gBACEuB,cAAcQ,qBAAexC,OAAAA,CAAKyC,UAAJH,GAAIG,EAAExC,CAAFwC,CAALzC;gBAC7BqC,sBAAsB;cAFxB;YAFF;UANF;;YAcEZ,WAAW,CAAC9B,OAAD;YACX+C,sBAAsB;YAChBC,MAAL,OAAA1C,CAAA,EAAGsC,CAAH,QAAKI,QAAAA,EAAAA,EAAAA,EAANC,aAAgBC,CAAhBD;;cAAgB;cACdE,OAAAJ,mBAAmBK,MAAAA,CAAMP,qBAAexC,OAAAA,CAAGyC,UAAFI,CAAEJ,EAAExC,CAAFwC,CAAHzC,CAArB+C,EADrBH,CAAMD;YAGNX,cAAcU,mBAAmBZ,MAAAA,CAAMnC,IAANmC;UAnBnC;UAsBA,OAAiBd,MAAVC,YAAMC,KAAAA,CAAAA,CAAIF,OAAAA,EAAAA,EAAAA,EAAV4B,aAAmBxB,MAAnBwB,EAAAE;;;YAAmB;YACxBrB,QAAQsB,MAAAA,CAAMf,WAANe;YACRD,OAAMjB,MAAAA,CAAQJ,QAAQK,MAAAA,CAAMgB,KAANhB,CAAhBD,CAAAA,EAAAA,MAANT,MAAMS,SAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBAFDe,CAAU5B;QA5BnBrB,CAAAA;MAnGFX,GAAAA,WAAAA,EAAuBgE,UAAvBhE;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
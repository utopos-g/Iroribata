{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Chill3.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class Chill3 < Base\n      # ゲームシステムの識別子\n      ID = 'Chill3'\n\n      # ゲームシステム名\n      NAME = 'Chill 3rd Edition'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'ちる3'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・1D100で判定時に成否、Botchを判定\n        　例）1D100<=50\n        　　 (1D100<=50) ＞ 55 ＞ Botch\n      INFO_MESSAGE_TEXT\n\n      def result_1d100(total, dice_total, cmp_op, target)\n        return nil if target == '?'\n        return nil unless cmp_op == :<=\n\n        # ゾロ目ならC-ResultかBotch\n        tens = (dice_total / 10).to_i % 10\n        ones = dice_total % 10\n\n        if tens == ones\n          if (total > target) || (dice_total == 100) # 00は必ず失敗\n            if target > 100 # 目標値が100を超えている場合は、00を振ってもBotchにならない\n              return Result.failure(\"Failure\")\n            else\n              return Result.fumble(\"Botch\")\n            end\n          else\n            return Result.critical(\"Colossal Success\")\n          end\n        elsif (total <= target) || (dice_total == 1) # 01は必ず成功\n          if total <= (target / 2).to_i\n            return Result.success(\"High Success\")\n          else\n            return Result.success(\"Low Success\")\n          end\n        else\n          return Result.failure(\"Failure\")\n        end\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:Chill3>", "result_1d100", "total", "dice_total", "cmp_op", "target", "tens", "/", "10", "to_i", "%", "ones", ">", "100", "Result", "failure", "fumble", "critical", "<=", "1", "2", "success", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;;QAEE,8BAAKA,QAAL;QAGA,gCAAOA,mBAAP;QAGA,oCAAWA,KAAX;QAGA,wCACNA,0BADqB,GAErBA,gBAFqB,GAGrBA,+BAHM;QAMAA,OAAAC,4BAAAA,wBAAiBC,KAAD,EAAQC,UAAR,EAAoBC,MAApB,EAA4BC,MAA5CJ;AAAAA,UAAAA;;;UACE,IAAA,MAAcI,MAAd,EAAwBJ,GAAxB,CAAA;YAAA,OAAO;UAAP;UACA,KAAA,MAAkBG,MAAlB,EAA4B,IAA5B,CAAA;YAAA,OAAO;UAAP;UAGAE,OAAmBC,WAAXJ,UAAWI,EAAEC,EAAFD,CAAKE,MAAAA,CAAAA,CAAMC,MAAAA,CAAEF,EAAFE;UAC9BC,OAAOR,UAAWO,MAAAA,CAAEF,EAAFE;UAElB,IAAA,MAAGJ,IAAH,EAAWK,IAAX,CAAA;YACE,IAAG,CAAA,QAAOC,OAANV,KAAMU,EAAEP,MAAFO,CAAP,CAAA,IAAA,CAAA,MAAqBT,UAArB,EAAmCU,GAAnC,CAAA,CAAA,CAAH;cACE,IAAA,QAAUD,OAAPP,MAAOO,EAAEC,GAAFD,CAAV,CAAA;gBACE,OAAOE,YAAMC,SAAAA,CAASd,SAATc;cADf;gBAGE,OAAOD,YAAME,QAAAA,CAAQf,OAARe;cAHf;YADF;cAOE,OAAOF,YAAMG,UAAAA,CAAUhB,kBAAVgB;YAPf;UADF,OAUA,IAAM,CAAA,QAAOC,OAANhB,KAAMgB,EAAGb,MAAHa,CAAP,CAAA,IAAA,CAAA,MAAsBf,UAAtB,EAAoCgB,CAApC,CAAA,CAAA,CAAN;YACE,IAAA,QAASD,OAANhB,KAAMgB,EAAWX,WAAPF,MAAOE,EAAEa,CAAFb,CAAIE,MAAAA,CAAAA,CAAfS,CAAT,CAAA;cACE,OAAOJ,YAAMO,SAAAA,CAASpB,cAAToB;YADf;cAGE,OAAOP,YAAMO,SAAAA,CAASpB,aAAToB;YAHf;UADF;YAOE,OAAOP,YAAMC,SAAAA,CAASd,SAATc;UAPf;QAlBFd,CAAAA;MAjBFD,GAAAA,WAAAA,EAAesB,UAAftB;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
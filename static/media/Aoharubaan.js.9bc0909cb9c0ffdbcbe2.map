{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Aoharubaan.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class Aoharubaan < Base\n      # ゲームシステムの識別子\n      ID = 'Aoharubaan'\n\n      # ゲームシステム名\n      NAME = 'あおはるばーんっ'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'あおはるはあんつ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~HELP\n        カレカノ反応表（ KR, KReaction ）\n      HELP\n\n      JUDGE_ROLL_REG = /^(1d6?|d6)(\\+\\d+)?(>=|=>)(\\d+)$/i.freeze\n      register_prefix('(1d6?|d6)(\\+\\d+)?(>=|=>)(\\d+)')\n\n      def eval_game_system_specific_command(command)\n        command = ALIAS[command] || command\n\n        if (m = JUDGE_ROLL_REG.match(command))\n          roll_judge(m[2], m[4])\n        else\n          roll_tables(command, TABLES)\n        end\n      end\n\n      private\n\n      def roll_judge(modifier_expression, border_expression)\n        modifier = modifier_expression ? Arithmetic.eval(modifier_expression, RoundType::FLOOR) : nil\n        border = border_expression.to_i\n\n        command_text = make_command_text(modifier, border)\n\n        dice = @randomizer.roll_once(6)\n        score = dice + modifier.to_i\n\n        is_success = score >= border # 「成功」か？\n        is_right = is_success && score == border # 「ピタリ賞」か？\n        is_excellent = is_success && score >= 7 # 「限界突破」か？\n\n        result_elements = []\n        result_elements << (is_success ? '成功' : '失敗')\n        result_elements << \"ピタリ賞\" if is_right\n        result_elements << \"限界突破\" if is_excellent\n\n        message_elements = []\n        message_elements << command_text\n        message_elements << \"\#{dice}+\#{modifier}\" if modifier\n        message_elements << score\n        message_elements << result_elements.join(\" ＆ \")\n\n        Result.new(message_elements.join(' ＞ ')).tap do |r|\n          r.condition = is_success\n          r.critical = is_right || is_excellent\n        end\n      end\n\n      def make_command_text(modifier, border)\n        command = \"1D6\"\n        command = \"\#{command}+\#{modifier}\" if modifier\n        command = \"\#{command}>=\#{border}\"\n        \"(\#{command})\"\n      end\n\n      ALIAS = {\n        \"KR\" => \"KReaction\",\n      }.transform_keys(&:upcase).transform_values(&:upcase).freeze\n\n      TABLES = {\n        \"KReaction\" => DiceTable::RangeTable.new(\n          \"カレカノ反応表\",\n          \"1D6\",\n          [\n            [1..2, \"何となく素っ気ない気がする。\"],\n            [3..4, \"いつもと変わらない安心感。\"],\n            [5..6, \"何故だかすごくデレてきた！　嬉しくて〈テンション〉１回復。\"],\n          ]\n        ),\n      }.transform_keys(&:upcase).freeze\n\n      register_prefix(ALIAS.keys, TABLES.keys)\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:Aoharubaan>", "freeze", "self", "register_prefix", "eval_game_system_specific_command", "command", "$ret_or_1", "ALIAS", "[]", "m", "JUDGE_ROLL_REG", "match", "roll_judge", "2", "4", "roll_tables", "TABLES", "private", "modifier_expression", "border_expression", "modifier", "Arithmetic", "eval", "RoundType::FLOOR", "RoundType", "border", "to_i", "command_text", "make_command_text", "dice", "@randomizer", "roll_once", "6", "score", "+", "is_success", ">=", "is_right", "==", "is_excellent", "7", "result_elements", "<<", "message_elements", "join", "tap", "Result", "new", "block in roll_judge", "r", "block (2 levels) in roll_judge", "condition=", "critical=", "transform_values", "transform_keys", "to_proc", "DiceTable::RangeTable", "DiceTable", "1", "3", "5", "keys", "Base"], :mappings=>"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"}}]}
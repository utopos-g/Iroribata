{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/EmbryoMachine.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class EmbryoMachine < Base\n      # ゲームシステムの識別子\n      ID = 'EmbryoMachine'\n\n      # ゲームシステム名\n      NAME = 'エムブリオマシンRPG'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'えむふりおましんRPG'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・判定ロール(EMt+m@c#f)\n        　目標値t、修正値m、クリティカル値c(省略時は20)、ファンブル値f(省略時は2)で攻撃判定を行います。\n        　命中した場合は命中レベルと命中部位も自動出力します。\n        　Rコマンドに読み替えされます。\n        ・各種表\n        　・命中部位表　HLT\n        　・白兵攻撃ファンブル表　MFT\n        　・射撃攻撃ファンブル表　SFT\n      INFO_MESSAGE_TEXT\n\n      register_prefix('EM', 'HLT', 'MFT', 'SFT', '2R10')\n\n      def initialize(command)\n        super(command)\n\n        @sort_add_dice = true\n      end\n\n      def replace_text(string)\n        string\n          .gsub(/EM(\\d+)([+-][+\\-\\d]+)(@(\\d+))(\\#(\\d+))/i) { \"2R10\#{Regexp.last_match(2)}>=\#{Regexp.last_match(1)}[\#{Regexp.last_match(4)},\#{Regexp.last_match(6)}]\" }\n          .gsub(/EM(\\d+)([+-][+\\-\\d]+)(\\#(\\d+))/i) { \"2R10\#{Regexp.last_match(2)}>=\#{Regexp.last_match(1)}[20,\#{Regexp.last_match(4)}]\" }\n          .gsub(/EM(\\d+)([+-][+\\-\\d]+)(@(\\d+))/i) { \"2R10\#{Regexp.last_match(2)}>=\#{Regexp.last_match(1)}[\#{Regexp.last_match(4)},2]\" }\n          .gsub(/EM(\\d+)([+-][+\\-\\d]+)/i) { \"2R10\#{Regexp.last_match(2)}>=\#{Regexp.last_match(1)}[20,2]\" }\n          .gsub(/EM(\\d+)(@(\\d+))(\\#(\\d+))/i) { \"2R10>=\#{Regexp.last_match(1)}[\#{Regexp.last_match(3)},\#{Regexp.last_match(5)}]\" }\n          .gsub(/EM(\\d+)(\\#(\\d+))/i) { \"2R10>=\#{Regexp.last_match(1)}[20,\#{Regexp.last_match(3)}]\" }\n          .gsub(/EM(\\d+)(@(\\d+))/i) { \"2R10>=\#{Regexp.last_match(1)}[\#{Regexp.last_match(3)},2]\" }\n          .gsub(/EM(\\d+)/i) { \"2R10>=\#{Regexp.last_match(1)}[20,2]\" }\n      end\n\n      # ゲーム別成功度判定(nD10)\n      def result_nd10(total, dice_total, _dice_list, cmp_op, target)\n        return nil unless cmp_op == :>=\n\n        if dice_total <= 2\n          Result.fumble(\"ファンブル\")\n        elsif dice_total >= 20\n          Result.critical(\"クリティカル\")\n        elsif target == \"?\"\n          Result.nothing\n        elsif total >= target\n          Result.success(\"成功\")\n        else\n          Result.failure(\"失敗\")\n        end\n      end\n\n      def checkRoll(string)\n        string = replace_text(string)\n\n        return nil unless /(^|\\s)S?(2[rR]10([+\\-\\d]+)?([>=]+(\\d+))(\\[(\\d+),(\\d+)\\]))(\\s|$)/i =~ string\n\n        string = Regexp.last_match(2)\n        diff = 0\n        crit = 20\n        fumble = 2\n        mod = 0\n        modText = Regexp.last_match(3)\n\n        diff = Regexp.last_match(5).to_i if Regexp.last_match(5)\n        crit = Regexp.last_match(7).to_i if Regexp.last_match(7)\n        fumble = Regexp.last_match(8).to_i if Regexp.last_match(8)\n        mod = ArithmeticEvaluator.eval(modText) if modText\n\n        dice_arr = @randomizer.roll_barabara(2, 10).sort\n        dice_now = dice_arr.sum()\n        dice_str = dice_arr.join(\",\")\n\n        dice_loc = @randomizer.roll_sum(2, 10)\n        big_dice = dice_arr[1]\n        output = \"\#{dice_now}[\#{dice_str}]\"\n        total_n = dice_now + mod\n        if mod > 0\n          output += \"+\#{mod}\"\n        elsif mod < 0\n          output += mod.to_s\n        end\n        if output =~ /[^\\d\\[\\]]+/\n          output = \"(\#{string}) ＞ \#{output} ＞ \#{total_n}\"\n        else\n          output = \"(\#{string}) ＞ \#{output}\"\n        end\n        # 成功度判定\n        if dice_now <= fumble\n          output += \" ＞ ファンブル\"\n        elsif dice_now >= crit\n          output += \" ＞ クリティカル ＞ \" + get_hit_level_table(big_dice) + \"(ダメージ+10) ＞ [\#{dice_loc}]\#{get_hit_location_table(dice_loc)}\"\n        elsif total_n >= diff\n          output += \" ＞ 成功 ＞ \" + get_hit_level_table(big_dice) + \" ＞ [\#{dice_loc}]\#{get_hit_location_table(dice_loc)}\"\n        else\n          output += \" ＞ 失敗\"\n        end\n\n        return output\n      end\n\n      def eval_game_system_specific_command(command)\n        debug(\"eval_game_system_specific_command command\", command)\n\n        if (result = checkRoll(command))\n          return result\n        end\n\n        output = '1'\n        type = \"\"\n        number = 0\n\n        case command\n        when /HLT/i\n          type = '命中部位'\n          number = @randomizer.roll_sum(2, 10)\n          output = get_hit_location_table(number)\n        when /SFT/i\n          type = '射撃ファンブル'\n          number = @randomizer.roll_sum(2, 10)\n          output = get_shoot_fumble_table(number)\n        when /MFT/i\n          type = '白兵ファンブル'\n          number = @randomizer.roll_sum(2, 10)\n          output = get_melee_fumble_table(number)\n        end\n\n        if output != '1'\n          output = \"\#{type}表(\#{number}) ＞ \#{output}\"\n        end\n        return output\n      end\n\n      # ** 命中部位表\n      def get_hit_location_table(num)\n        table = [\n          [4, '頭'],\n          [7, '左脚'],\n          [9, '左腕'],\n          [12, '胴'],\n          [14, '右腕'],\n          [17, '右脚'],\n          [20, '頭'],\n        ]\n\n        return get_table_by_number(num, table)\n      end\n\n      # ** ファンブル表\n      def get_shoot_fumble_table(num) # 射撃攻撃ファンブル表\n        output = '1'\n        table = [\n          '暴発した。使用した射撃武器が搭載されている部位に命中レベルAで命中する。',\n          'あまりに無様な誤射をした。パイロットの精神的負傷が2段階上昇する。',\n          '誤射をした。自機に最も近い味方機体に命中レベルAで命中する。',\n          '誤射をした。対象に最も近い味方機体に命中レベルAで命中する。',\n          '武装が暴発した。使用した射撃武器が破損する。ダメージは発生しない。',\n          '転倒した。次のセグメントのアクションが待機に変更される。',\n          '弾詰まりを起こした。使用した射撃武器は戦闘終了まで使用できなくなる。',\n          '砲身が大きく歪んだ。使用した射撃武器による射撃攻撃の命中値が戦闘終了まで-3される。',\n          '熱量が激しく増大した。使用した射撃武器の消費弾薬が戦闘終了まで+3される。',\n          '暴発した。使用した射撃武器が搭載されている部位に命中レベルBで命中する。',\n          '弾薬が劣化した。使用した射撃武器の全てのダメージが戦闘終了まで-2される。',\n          '無様な誤射をした。パイロットの精神的負傷が1段階上昇する。',\n          '誤射をした。対象に最も近い味方機体に命中レベルBで命中する。',\n          '誤射をした。自機に最も近い味方機体に命中レベルBで命中する。',\n          '砲身が歪んだ。使用した射撃武器による射撃攻撃の命中値が戦闘終了まで-2される。',\n          '熱量が増大した。使用した射撃武器の消費弾薬が戦闘終了まで+2される。',\n          '砲身がわずかに歪んだ。使用した射撃武器による射撃攻撃の命中値が戦闘終了まで-1される。',\n          '熱量がやや増大した。使用した射撃武器の消費弾薬が戦闘終了まで+1される。',\n          '何も起きなかった。',\n        ]\n        dc = 2\n        output = table[num - dc] if table[num - dc]\n        return output\n      end\n\n      def get_melee_fumble_table(num) # 白兵攻撃ファンブル表\n        output = '1'\n        table = [\n          '大振りしすぎた。使用した白兵武器が搭載されている部位の反対の部位(右腕に搭載されているなら左側)に命中レベルAで命中する。',\n          '激しく頭を打った。パイロットの肉体的負傷が2段階上昇する。',\n          '過負荷で部位が爆発した。使用した白兵武器が搭載されている部位が全壊する。ダメージは発生せず、搭載されている武装も破損しない。',\n          '大振りしすぎた。使用した白兵武器が搭載されている部位の反対の部位(右腕に搭載されているなら左側)に命中レベルBで命中する。',\n          '武装が爆発した。使用した白兵武器が破損する。ダメージは発生しない。',\n          '部分的に機能停止した。使用した白兵武器は戦闘終了まで使用できなくなる。',\n          '転倒した。次のセグメントのアクションが待機に変更される。',\n          '激しい刃こぼれを起こした。使用した白兵武器の全てのダメージが戦闘終了まで-3される。',\n          '地面の凹凸にはまった。次の2セグメントは移動を行うことができない。',\n          '刃こぼれを起こした。使用した白兵武器の全てのダメージが戦闘終了まで-2される。',\n          '大振りしすぎた。使用した白兵武器が搭載されている部位の反対の部位(右腕に搭載されているなら左側)に命中レベルCで命中する。',\n          '頭を打った。パイロットの肉体的負傷が1段階上昇する。',\n          '駆動系が損傷した。移動力が戦闘終了まで-2される(最低1)。',\n          '間合いを取り損ねた。隣接している機体(複数の場合は1機をランダムに決定)に激突する。',\n          '機体ごと突っ込んだ。機体が向いている方角へ移動力をすべて消費するまで移動する。',\n          '制御系が損傷した。回避値が戦闘終了まで-1される(最低1)。',\n          '踏み誤った。機体が向いている方角へ移動力の半分を消費するまで移動する。',\n          'たたらを踏んだ。機体が向いている方角へ1の移動力で移動する。',\n          '何も起きなかった。',\n        ]\n        dc = 2\n        output = table[num - dc] if table[num - dc]\n        return output\n      end\n\n      def get_hit_level_table(num)\n        table = [\n          [6, '命中レベルC'],\n          [9, '命中レベルB'],\n          [10, '命中レベルA'],\n        ]\n\n        return get_table_by_number(num, table)\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:EmbryoMachine>", "self", "register_prefix", "initialize", "command", "@sort_add_dice", "replace_text", "string", "gsub", "block in replace_text", "block (2 levels) in replace_text", "Regexp", "last_match", "2", "1", "4", "6", "3", "5", "result_nd10", "total", "dice_total", "_dice_list", "cmp_op", "target", "<=", "Result", "fumble", ">=", "20", "critical", "nothing", "success", "failure", "checkRoll", "=~", "diff", "0", "crit", "mod", "modText", "to_i", "7", "8", "ArithmeticEvaluator", "eval", "dice_arr", "@randomizer", "roll_barabara", "10", "sort", "dice_now", "sum", "dice_str", "join", "dice_loc", "roll_sum", "big_dice", "[]", "output", "total_n", "+", ">", "<", "to_s", "get_hit_level_table", "get_hit_location_table", "eval_game_system_specific_command", "debug", "result", "type", "number", "$ret_or_1", "get_shoot_fumble_table", "get_melee_fumble_table", "num", "table", "9", "12", "14", "17", "get_table_by_number", "dc", "-", "Base"], :mappings=>"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"}}]}
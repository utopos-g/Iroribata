{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/TensaiGunshiNiNaro.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class TensaiGunshiNiNaro < Base\n      # ゲームシステムの識別子\n      ID = 'TensaiGunshiNiNaro'\n\n      # ゲームシステム名\n      NAME = '天才軍師になろう'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'てんさいくんしになろう'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・行為判定\n        TN6…「有利」を得ていない場合、6面ダイスを2つ振って判定します。\n        TN10…「有利」を得ている場合、10面ダイスを2つ振って判定します。\n        不調 気づかぬうちの不満【C】…判定のダイス目が「4」でも判定に成功しません。数字の後ろに【C】をつけます。\n        　例）TN6C\n        軍師スキル 〇〇サポート【S】…決戦フェイズの判定中「3」の出目を出しても判定に成功します。数字の後ろに【S】をつけます。\n        　例）TN6S\n        英傑スキル/武人 煌めく刃【B】…決戦フェイズの判定中「3」の出目を出しても判定に成功となり、スペシャルが発生します。数字の後ろに【B】をつけます。\n        　例）TN6B\n        英傑スキル/カリスマ 御身のためならば【Y】…「交流」「スカウト」の判定中「3」の出目を出しても判定に成功となり、スペシャルが発生します。数字の後ろに【Y】をつけます。\n        　例）TN6Y\n        英傑スキル/英傑汎用 凄腕エージェント【A】…活動フェイズの判定中「3」の出目を出しても判定に成功となり、スペシャルが発生します。数字の後ろに【A】をつけます。\n        　例）TN6A\n        数字の後ろに複数のコマンドを追加できます。\n        　例）TN10CYA\n        ・ダメージ計算 xDM>=t\n        　[ダメージ計算]を行う。成否と【HP】の減少量を表示する。\n        　x: 6面ダイス数\n        　t: 防御力\n        ・各種表\n        関係決定表 RELA\n        平時天才軍師表 PTGS\n        平時英傑表 PTHE\n        スカウト表 SCOU\n        変調表 BDST\n      MESSAGETEXT\n\n      def initialize(command)\n        super(command)\n\n        @d66_sort_type = D66SortType::ASC\n        @round_type = RoundType::FLOOR\n      end\n\n      register_prefix('TN(6|10)[CSBYA]*', '\\d+DM')\n\n      def eval_game_system_specific_command(command)\n        roll_judge(command) || roll_damage(command) || roll_tables(command, self.class::TABLES)\n      end\n\n      private\n\n      # 行為判定\n      def roll_judge(command)\n        m = /^TN(6|10)([CSBYA]*)$/.match(command)\n        unless m\n          return nil\n        end\n\n        # 成功となる出目\n        success_dices = [4, 5, 6, 7, 8, 9, 10]\n\n        # スペシャルとなる出目\n        special_dices = [6, 10]\n\n        # ファンブルとなる出目\n        fumble_dices = [1]\n\n        # 有利\n        advantage = m[1] == \"10\"\n\n        # 不調 気づかぬうちの不満\n        complaints = m[2].include?(\"C\")\n\n        # 軍師スキル 〇〇サポート\n        support = m[2].include?(\"S\")\n\n        # 英傑スキル/武人 煌めく刃\n        blade = m[2].include?(\"B\")\n\n        # 英傑スキル/カリスマ 御身のためならば\n        you = m[2].include?(\"Y\")\n\n        # 英傑スキル/英傑汎用 凄腕エージェント\n        agent = m[2].include?(\"A\")\n\n        # 〇〇サポート、煌めく刃、御身のためならば、凄腕エージェントいずれかの適用時\n        if support | blade | you | agent\n          # 成功となる出目に3を追加\n          success_dices.push(3)\n        end\n\n        # 煌めく刃、御身のためならば、凄腕エージェントいずれかの適用時\n        if blade | you | agent\n          # スペシャルとなる出目に3を追加\n          special_dices.push(3)\n        end\n\n        # 気づかぬうちの不満適用時\n        if complaints\n          # 成功となる出目から4を削除\n          success_dices.delete(4)\n        end\n\n        dice_size = advantage ? 10 : 6\n        dice_list = @randomizer.roll_barabara(2, dice_size)\n\n        texts = []\n        is_critical = false\n        is_fumble = false\n        is_success = false\n\n        # スペシャルとなる出目を含む場合\n        unless dice_list.intersection(special_dices).empty?\n          # クリティカルフラグを立てる\n          is_critical = true\n          # スペシャルのシステムメッセージを追加\n          texts.push(translate(\"TensaiGunshiNiNaro.JUDGE.critical\"))\n          special_effects = []\n          # 通常時の追加効果\n          special_effects.push(translate(\"TensaiGunshiNiNaro.NORMAL.critical\"))\n          # 英傑スキル/武人 煌めく刃による追加効果\n          special_effects.push(translate(\"TensaiGunshiNiNaro.BLADE.critical\")) if blade\n          # 英傑スキル/カリスマ 御身のためならばによる追加効果\n          special_effects.push(translate(\"TensaiGunshiNiNaro.YOU.critical\")) if you\n          # 追加効果を結合してカッコ内に格納\n          texts.push(\"（\#{special_effects.join('')}）\")\n        end\n\n        # ファンブルとなる出目を含む場合\n        unless dice_list.intersection(fumble_dices).empty?\n          # ファンブルフラグを立てる\n          is_fumble = true\n          # ファンブルのシステムメッセージを追加\n          texts.push(translate(\"TensaiGunshiNiNaro.JUDGE.fumble\"))\n          # ファンブルの追加効果をカッコ内に格納\n          texts.push(\"（\#{translate('TensaiGunshiNiNaro.NORMAL.fumble')}）\")\n        end\n\n        if dice_list.intersection(success_dices).empty?\n          # 成功となる出目を含まない場合\n          # 失敗の汎用メッセージを追加\n          texts.push(translate(\"failure\"))\n        else\n          # 成功となる出目を含む場合\n          # 成功フラグを立てる\n          is_success = true\n          # 成功の汎用メッセージを追加\n          texts.push(translate(\"success\"))\n        end\n\n        return Result.new.tap do |r|\n          # テキストを整形\n          r.text = \"\#{command} ＞ [\#{dice_list.join(',')}] ＞ \#{texts.join('')}\"\n          # 各種成否を格納\n          r.condition = is_success\n          r.critical = is_critical\n          r.fumble = is_fumble\n        end\n      end\n\n      # ダメージ計算\n      def roll_damage(command)\n        parser = Command::Parser.new(\"DM\", round_type: @round_type)\n                                .has_prefix_number\n                                .disable_modifier\n                                .restrict_cmp_op_to(:>=)\n        parsed = parser.parse(command)\n        unless parsed\n          return nil\n        end\n\n        text = ''\n        is_success = false\n\n        # ダメージ計算\n        damage = @randomizer.roll_sum(parsed.prefix_number, 6)\n        # HP減少量計算\n        dec = (damage / parsed.target_number).floor\n\n        # HP減少量の最大値は3\n        dec = 3 if dec > 3\n\n        if dec > 0\n          # HPを減らせた場合\n          # 成功フラグを立てる\n          is_success = true\n          # 成功メッセージを追加\n          text = translate(\"TensaiGunshiNiNaro.DAMAGE.success\", damage: damage.to_s, dec: dec.to_s)\n        else\n          # 失敗メッセージを追加\n          text = translate(\"TensaiGunshiNiNaro.DAMAGE.failure\", damage: damage.to_s)\n        end\n\n        return Result.new.tap do |r|\n          # テキストを整形\n          r.text = \"\#{command} ＞ \#{damage} ＞ \#{text}\"\n          # 各種成否を格納\n          r.condition = is_success\n        end\n      end\n\n      class << self\n        private\n\n        def translate_tables(locale)\n          {\n            \"RELA\" => DiceTable::D66Table.from_i18n(\"TensaiGunshiNiNaro.table.RELA\", locale),\n            \"PTGS\" => DiceTable::D66Table.from_i18n(\"TensaiGunshiNiNaro.table.PTGS\", locale),\n            \"PTHE\" => DiceTable::D66Table.from_i18n(\"TensaiGunshiNiNaro.table.PTHE\", locale),\n            \"SCOU\" => DiceTable::D66Table.from_i18n(\"TensaiGunshiNiNaro.table.SCOU\", locale),\n            \"BDST\" => DiceTable::Table.from_i18n(\"TensaiGunshiNiNaro.table.BDST\", locale),\n          }\n        end\n      end\n\n      TABLES = translate_tables(:ja_jp)\n\n      register_prefix(TABLES.keys)\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:TensaiGunshiNiNaro>", "initialize", "command", "self", "@d66_sort_type", "D66SortType::ASC", "D66SortType", "@round_type", "RoundType::FLOOR", "RoundType", "register_prefix", "eval_game_system_specific_command", "$ret_or_1", "$ret_or_2", "roll_judge", "roll_damage", "roll_tables", "class::TABLES", "class", "private", "m", "match", "success_dices", "4", "5", "6", "7", "8", "9", "10", "special_dices", "fumble_dices", "1", "advantage", "[]", "==", "complaints", "2", "include?", "support", "blade", "you", "agent", "|", "push", "3", "delete", "dice_size", "dice_list", "@randomizer", "roll_barabara", "texts", "is_critical", "is_fumble", "is_success", "intersection", "empty?", "translate", "special_effects", "join", "tap", "Result", "new", "block in roll_judge", "r", "block (2 levels) in roll_judge", "text=", "condition=", "critical=", "fumble=", "parser", "Command::Parser", "Command", "has_prefix_number", "disable_modifier", "restrict_cmp_op_to", "parsed", "parse", "text", "damage", "roll_sum", "prefix_number", "dec", "/", "target_number", "floor", ">", "0", "to_s", "block in roll_damage", "block (2 levels) in roll_damage", "translate_tables", "locale", "DiceTable::D66Table", "DiceTable", "from_i18n", "DiceTable::Table", "TABLES", "keys", "Base"], :mappings=>"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"}}]}
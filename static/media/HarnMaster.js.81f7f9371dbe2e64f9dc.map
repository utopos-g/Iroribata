{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/HarnMaster.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class HarnMaster < Base\n      # ゲームシステムの識別子\n      ID = 'HarnMaster'\n\n      # ゲームシステム名\n      NAME = 'ハーンマスター'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'はあんますたあ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・判定\n        　1D100<=XX の判定時に致命的失敗・決定的成功を判定\n        ・ショック判定（SHKx）\n        　例）SHK13,3\n        ・人型用　中段命中部位表 (SLH)／上段命中部位 (SLHU)／上段命中部位 (SLHD)\n      MESSAGETEXT\n\n      register_prefix('SHK', 'SLH', 'SLHU', 'SLHD')\n\n      def result_1d100(total, _dice_total, cmp_op, target)\n        return Result.nothing if target == '?'\n        return nil unless cmp_op == :<=\n\n        if total <= target\n          if total % 5 == 0\n            Result.critical(\"決定的成功\")\n          else\n            Result.success(\"成功\")\n          end\n        else\n          if total % 5 == 0\n            Result.fumble(\"致命的失敗\")\n          else\n            Result.failure(\"失敗\")\n          end\n        end\n      end\n\n      def eval_game_system_specific_command(command)\n        result = nil\n\n        case command\n        when /^SHK(\\d*),(\\d+)/i\n          toughness = Regexp.last_match(1).to_i\n          damage = Regexp.last_match(2).to_i\n          result = getCheckShockResult(damage, toughness)\n        when /SLH(U|D)?/i\n          type = Regexp.last_match(1)\n          result = getStrikeLocationHuman(type)\n        else\n          result = nil\n        end\n\n        return result\n      rescue StandardError => e\n        return e.message\n      end\n\n      def getCheckShockResult(damage, toughness)\n        dice_list = @randomizer.roll_barabara(damage, 6)\n        dice = dice_list.sum()\n        diceText = dice_list.join(\",\")\n\n        result = (dice <= toughness ? '成功' : '失敗')\n\n        text = \"ショック判定(ダメージ:\#{damage}, 耐久力:\#{toughness}) ＞ (\#{dice}[\#{diceText}]) ＞ \#{result}\"\n        return text\n      end\n\n      def getStrikeLocationHuman(type)\n        typeName = ''\n        table = nil\n\n        case type\n        when 'U'\n          typeName = \"命中部位(人型 上段)\"\n          table = getStrikeLocationHumanUpperTable()\n        when 'D'\n          typeName = \"命中部位(人型 下段)\"\n          table = getStrikeLocationHumanDownTable()\n        when nil\n          typeName = \"命中部位(人型 中段)\"\n          table = getStrikeLocationHumanNormalTable()\n        else\n          raise \"unknow atak type \#{type}\"\n        end\n\n        number = @randomizer.roll_once(100)\n        part = get_table_by_number(number, table)\n        part = getLocationSide(part, number)\n        part = getFaceLocation(part)\n\n        result = \"\#{typeName} ＞ (\#{number})\#{part}\"\n\n        return result\n      end\n\n      def getLocationSide(part, number)\n        unless part =~ /^\\*/\n          debug(\"part has NO side\", part)\n          return part\n        end\n\n        debug(\"part has side\", part)\n\n        side = (number.odd? ? \"左\" : \"右\")\n\n        part.sub(/\\*/, side)\n      end\n\n      def getFaceLocation(part)\n        debug(\"getFaceLocation part\", part)\n\n        unless part =~ /\\+$/\n          debug(\"is NOT Face\")\n          return part\n        end\n\n        debug(\"is Face\")\n\n        table = [\n          [15, \"顎\"],\n          [30, \"*目\"],\n          [64, \"*頬\"],\n          [80, \"鼻\"],\n          [90, \"*耳\"],\n          [100, \"口\"],\n        ]\n\n        number = @randomizer.roll_once(100)\n        faceLocation = get_table_by_number(number, table)\n        debug(\"faceLocation\", faceLocation)\n        debug(\"number\", number)\n        faceLocation = getLocationSide(faceLocation, number)\n\n        result = part.sub(/\\+$/, \" ＞ (\#{number})\#{faceLocation}\")\n        return result\n      end\n\n      def getStrikeLocationHumanUpperTable()\n        table = [\n          [15, \"頭部\"],\n          [30, \"顔+\"],\n          [45, \"首\"],\n          [57, \"*肩\"],\n          [69, \"*上腕\"],\n          [73, \"*肘\"],\n          [81, \"*前腕\"],\n          [85, \"*手\"],\n          [95, \"胸部\"],\n          [100, \"腹部\"],\n        ]\n        return table\n      end\n\n      def getStrikeLocationHumanNormalTable()\n        table = [\n          [5, \"頭部\"],\n          [10, \"顔+\"],\n          [15, \"首\"],\n          [27, \"*肩\"],\n          [33, \"*上腕\"],\n          [35, \"*肘\"],\n          [39, \"*前腕\"],\n          [43, \"*手\"],\n          [60, \"胸部\"],\n          [70, \"腹部\"],\n          [74, \"股間\"],\n          [80, \"*臀部\"],\n          [88, \"*腿\"],\n          [90, \"*膝\"],\n          [96, \"*脛\"],\n          [100, \"*足\"],\n        ]\n        return table\n      end\n\n      def getStrikeLocationHumanDownTable()\n        table = [\n          [6, \"*前腕\"],\n          [12, \"*手\"],\n          [19, \"胸部\"],\n          [29, \"腹部\"],\n          [35, \"股間\"],\n          [49, \"*臀部\"],\n          [70, \"*腿\"],\n          [78, \"*膝\"],\n          [92, \"*脛\"],\n          [100, \"*足\"],\n        ]\n        return table\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:HarnMaster>", "self", "register_prefix", "result_1d100", "total", "_dice_total", "cmp_op", "target", "Result", "nothing", "<=", "%", "5", "0", "critical", "success", "fumble", "failure", "eval_game_system_specific_command", "command", "result", "$ret_or_1", "toughness", "Regexp", "last_match", "1", "to_i", "damage", "2", "getCheckShockResult", "type", "getStrikeLocationHuman", "StandardError", "e", "message", "dice_list", "@randomizer", "roll_barabara", "6", "dice", "sum", "diceText", "join", "text", "typeName", "table", "getStrikeLocationHumanUpperTable", "getStrikeLocationHumanDownTable", "getStrikeLocationHumanNormalTable", "raise", "number", "roll_once", "100", "part", "get_table_by_number", "getLocationSide", "getFaceLocation", "=~", "debug", "side", "odd?", "sub", "15", "30", "64", "80", "90", "faceLocation", "45", "57", "69", "73", "81", "85", "95", "10", "27", "33", "35", "39", "43", "60", "70", "74", "88", "96", "12", "19", "29", "49", "78", "92", "Base"], :mappings=>"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"}}]}
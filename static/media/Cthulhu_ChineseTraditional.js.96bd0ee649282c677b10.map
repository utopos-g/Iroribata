{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/arithmetic_evaluator.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module ArithmeticEvaluator\n    class << self\n      # 四則演算を評価する\n      # @deprecated +Arithmetic.#eval+ を利用してください。\n      # @param expr [String, nil] 評価する式\n      # @param round_type [Symbol] 端数処理の種類\n      # @return [Integer] 評価結果を返す。不正な式の場合には0を返す。\n      def eval(expr, round_type: RoundType::FLOOR)\n        return 0 unless expr\n\n        Arithmetic.eval(expr, round_type) || 0\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:ArithmeticEvaluator>", "eval", "expr", "$kwargs", "RoundType::FLOOR", "RoundType", "0", "$ret_or_1", "Arithmetic", "round_type", "self"], :mappings=>"AAAAA,8CAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAA;QAAA;;QAME,OAAAC,oBAAAA,iBAASC,IAAD,EAVdC,OAUMF,GAAAA,MAAAA,IAAAA,wCAAAA;AAAAA,UAAAA;;;UAVN;;UAUqB,0CAAA,qCAAYG,IAAAC,eAAAD;UACzB,KAAA,QAAgBF,IAAhB,CAAA;YAAA,OAAOI;UAAP;UAEA,IAAA,QAAAC,CAAAA,YAAAC,gBAAUP,MAAAA,CAAMC,IAAhB,EAAsBO,UAAZR,CAAVM,CAAA,CAAA;YAAAN,OAAA;UAAA;YAAqCA,OAAAK;UAArC,EAHFL;YAAAA;YAAAA;UAAAA;QAAAA,CAAAA,IAAAA;MANF,4BAASS,IAAT;IADFV,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>40, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Cthulhu.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nrequire 'bcdice/arithmetic_evaluator'\n\nmodule BCDice\n  module GameSystem\n    class Cthulhu < Base\n      # ゲームシステムの識別子\n      ID = 'Cthulhu'\n\n      # ゲームシステム名\n      NAME = 'クトゥルフ神話TRPG'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'くとうるふしんわTRPG'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        c=クリティカル値 ／ f=ファンブル値 ／ s=スペシャル\n\n        1d100<=n    c・f・sすべてオフ（単純な数値比較判定のみ行います）\n\n        ・cfs判定付き判定コマンド\n\n        CC\t 1d100ロールを行う c=1、f=100\n        CCB  同上、c=5、f=96\n\n        例：CC<=80  （技能値80で行為判定。1%ルールでcf適用）\n        例：CCB<=55 （技能値55で行為判定。5%ルールでcf適用）\n\n        ・組み合わせロールについて\n\n        CBR(x,y)\tc=1、f=100\n        CBRB(x,y)\tc=5、f=96\n\n        ・抵抗表ロールについて\n        RES(x-y)\tc=1、f=100\n        RESB(x-y)\tc=5、f=96\n\n        ※故障ナンバー判定\n\n        ・CC(x) c=1、f=100\n        x=故障ナンバー。出目x以上が出た上で、ファンブルが同時に発生した場合、共に出力する（テキスト「ファンブル＆故障」）\n        ファンブルでない場合、成功・失敗に関わらずテキスト「故障」のみを出力する（成功・失敗を出力せず、上書きしたものを出力する形）\n\n        ・CCB(x) c=5、f=96\n        同上\n\n      INFO_MESSAGE_TEXT\n\n      register_prefix('CCB?', 'RESB?', 'CBRB?')\n\n      def initialize(command)\n        super(command)\n        @special_percentage  = 20\n        @critical_percentage = 1\n        @fumble_percentage   = 1\n      end\n\n      def eval_game_system_specific_command(command)\n        case command\n        when /CCB/i\n          # 5%\n          @critical_percentage = 5\n          @fumble_percentage   = 5\n          return getCheckResult(command)\n        when /CC/i\n          # 1%\n          @critical_percentage = 1\n          @fumble_percentage   = 1\n          return getCheckResult(command)\n        when /RESB/i\n          # 5%\n          @critical_percentage = 5\n          @fumble_percentage   = 5\n          return getRegistResult(command)\n        when /CBRB/i\n          # 5%\n          @critical_percentage = 5\n          @fumble_percentage   = 5\n          return getCombineRoll(command)\n        when /RES/i\n          # 1%\n          @critical_percentage = 1\n          @fumble_percentage   = 1\n          return getRegistResult(command)\n        when /CBR/i\n          # 1%\n          @critical_percentage = 1\n          @fumble_percentage   = 1\n          return getCombineRoll(command)\n        end\n\n        return nil\n      end\n\n      private\n\n      def getCheckResult(command)\n        m = %r{^CCB?(\\d+)?(?:<=([+-/*\\d]+))?$}i.match(command)\n        unless m\n          return nil\n        end\n\n        broken_num = m[1].to_i\n        diff = ArithmeticEvaluator.eval(m[2])\n\n        if diff <= 0\n          total = @randomizer.roll_once(100)\n          return Result.new(\"(1D100) ＞ \#{total}\")\n        end\n\n        expr = \"(1D100<=\#{diff})\"\n        if broken_num > 0\n          expr += \" \#{translate('Cthulhu.broken_number')}[\#{broken_num}]\"\n        end\n\n        total = @randomizer.roll_once(100)\n        compare_result = compare(total, diff, broken_num)\n\n        compare_result.to_result.tap do |r|\n          r.text = \"\#{expr} ＞ \#{total} ＞ \#{compare_result.text}\"\n        end\n      end\n\n      class CompareResult\n        include Translate\n        attr_accessor :success, :failure, :critical, :fumble, :special, :broken\n\n        def initialize(locale)\n          @locale = locale\n\n          @success = false\n          @failure = false\n          @critical = false\n          @fumble = false\n          @special = false\n          @broke = false\n        end\n\n        def text\n          if critical && special\n            translate(\"Cthulhu.critical_special\")\n          elsif critical\n            translate(\"Cthulhu.critical\")\n          elsif special\n            translate(\"Cthulhu.special\")\n          elsif success\n            translate(\"success\")\n          elsif broken && fumble\n            \"\#{translate('Cthulhu.fumble')}/\#{translate('Cthulhu.broken')}\"\n          elsif broken\n            translate(\"Cthulhu.broken\")\n          elsif fumble\n            translate(\"Cthulhu.fumble\")\n          elsif failure\n            translate(\"failure\")\n          end\n        end\n\n        def to_result\n          Result.new.tap do |r|\n            r.success = success\n            r.failure = failure\n            r.critical = critical\n            r.fumble = fumble\n          end\n        end\n      end\n\n      def compare(total, target, broken_number = 0)\n        result = CompareResult.new(@locale)\n        target_special = (target * @special_percentage / 100).to_i.clamp(1, 100)\n\n        if (total <= target) && (total < 100)\n          result.success = true\n          result.special = total <= target_special\n          result.critical = total <= @critical_percentage\n        else\n          result.failure = true\n          result.fumble = total >= (101 - @fumble_percentage)\n        end\n\n        if broken_number > 0 && total >= broken_number\n          result.broken = true\n          result.failure = true\n          result.success = false\n          result.special = false\n          result.critical = false\n        end\n\n        return result\n      end\n\n      def getRegistResult(command)\n        m = /^RESB?(-?\\d+)$/i.match(command)\n        unless m\n          return nil\n        end\n\n        value = m[1].to_i\n        target = value * 5 + 50\n\n        if target < 5\n          return Result.failure(\"(1d100<=\#{target}) ＞ \#{translate('Cthulhu.automatic_failure')}\")\n        end\n\n        if target > 95\n          return Result.success(\"(1d100<=\#{target}) ＞ \#{translate('Cthulhu.automatic_success')}\")\n        end\n\n        # 通常判定\n        total_n = @randomizer.roll_once(100)\n        compare_result = compare(total_n, target)\n\n        compare_result.to_result.tap do |r|\n          r.text = \"(1d100<=\#{target}) ＞ \#{total_n} ＞ \#{compare_result.text}\"\n        end\n      end\n\n      def getCombineRoll(command)\n        m = /^CBR(B)?\\((\\d+),(\\d+)\\)$/i.match(command)\n        unless m\n          return nil\n        end\n\n        diff_1 = m[2].to_i\n        diff_2 = m[3].to_i\n\n        total = @randomizer.roll_once(100)\n\n        result_1 = compare(total, diff_1)\n        result_2 = compare(total, diff_2)\n\n        rank =\n          if result_1.success && result_2.success\n            translate(\"success\")\n          elsif result_1.success || result_2.success\n            translate(\"Cthulhu.partial_success\")\n          else\n            translate(\"failure\")\n          end\n\n        Result.new.tap do |r|\n          r.text = \"(1d100<=\#{diff_1},\#{diff_2}) ＞ \#{total}[\#{result_1.text},\#{result_2.text}] ＞ \#{rank}\"\n          r.critical = result_1.critical || result_2.critical\n          r.fumble = result_1.fumble || result_2.fumble\n          r.condition = result_1.success || result_2.success\n        end\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "self", "require", "<module:BCDice>", "<module:GameSystem>", "<class:Cthulhu>", "register_prefix", "initialize", "command", "@special_percentage", "20", "@critical_percentage", "1", "@fumble_percentage", "eval_game_system_specific_command", "$ret_or_1", "5", "getCheckResult", "getRegistResult", "getCombineRoll", "private", "m", "match", "broken_num", "[]", "to_i", "diff", "ArithmeticEvaluator", "eval", "2", "<=", "0", "total", "@randomizer", "roll_once", "100", "Result", "new", "expr", ">", "+", "translate", "compare_result", "compare", "tap", "to_result", "block in getCheckResult", "r", "block (2 levels) in getCheckResult", "text=", "text", "<class:CompareResult>", "include", "Translate", "attr_accessor", "locale", "@locale", "@success", "@failure", "@critical", "@fumble", "@special", "@broke", "critical", "special", "success", "broken", "fumble", "failure", "block in to_result", "block (2 levels) in to_result", "success=", "failure=", "critical=", "fumble=", "target", "broken_number", "result", "CompareResult", "target_special", "/", "*", "clamp", "<", "special=", ">=", "-", "101", "broken=", "value", "50", "95", "total_n", "block in getRegistResult", "block (2 levels) in getRegistResult", "diff_1", "diff_2", "3", "result_1", "result_2", "rank", "block in getCombineRoll", "block (2 levels) in getCombineRoll", "condition=", "Base"], :mappings=>"AAAAA,6CAAAA,gBAAAA;EAAAA;;;EAEAC,IAAAC,SAAAA,CAAQF,6BAARE;EAEAF,OAAAG;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAEE,8BAAKA,SAAL;QAGA,gCAAOA,aAAP;QAGA,oCAAWA,cAAX;QAGA,wCACNA,kCADqB,GAErBA,IAFqB,GAGrBA,2CAHqB,GAIrBA,IAJqB,GAKrBA,kBALqB,GAMrBA,IANqB,GAOrBA,8BAPqB,GAQrBA,oBARqB,GASrBA,IATqB,GAUrBA,qCAVqB,GAWrBA,qCAXqB,GAYrBA,IAZqB,GAarBA,iBAbqB,GAcrBA,IAdqB,GAerBA,uBAfqB,GAgBrBA,uBAhBqB,GAiBrBA,IAjBqB,GAkBrBA,eAlBqB,GAmBrBA,uBAnBqB,GAoBrBA,uBApBqB,GAqBrBA,IArBqB,GAsBrBA,aAtBqB,GAuBrBA,IAvBqB,GAwBrBA,oBAxBqB,GAyBrBA,8DAzBqB,GA0BrBA,kEA1BqB,GA2BrBA,IA3BqB,GA4BrBA,oBA5BqB,GA6BrBA,MA7BqB,GA8BrBA,IA9BM;QAiCAJ,IAAAK,iBAAAA,CAAgBD,MAAhB,EAAwBA,OAAxB,EAAiCA,OAAjCC;;AAEAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAN,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMO,OAAN,CAAA,EAAA,IAAA;UACAC,0BAAuBC;UACvBC,2BAAuBC;UACvBL,OAAAM,CAAAA,yBAAuBD,CAAvBC;QAJFN,CAAAA;;AAOAO,QAAAA,iDAAAA,6CAAsCN,OAAtCM;AAAAA,UAAAA;;;UAEE,IAAA,QAAK,MAAL,EADAC,CAAAA,YAAKP,OAALO,CACA,CAAA;;YAEEJ,2BAAuBK;YACvBH,yBAAuBG;YACvB,OAAOf,IAAAgB,gBAAAA,CAAeT,OAAfS;UAJT,OAKA,IAAA,QAAK,KAAL,EAlER,SAkEQ,CAAA;;YAEEN,2BAAuBC;YACvBC,yBAAuBD;YACvB,OAAOX,IAAAgB,gBAAAA,CAAeT,OAAfS;UAJT,OAKA,IAAA,QAAK,OAAL,EAvER,SAuEQ,CAAA;;YAEEN,2BAAuBK;YACvBH,yBAAuBG;YACvB,OAAOf,IAAAiB,iBAAAA,CAAgBV,OAAhBU;UAJT,OAKA,IAAA,QAAK,OAAL,EA5ER,SA4EQ,CAAA;;YAEEP,2BAAuBK;YACvBH,yBAAuBG;YACvB,OAAOf,IAAAkB,gBAAAA,CAAeX,OAAfW;UAJT,OAKA,IAAA,QAAK,MAAL,EAjFR,SAiFQ,CAAA;;YAEER,2BAAuBC;YACvBC,yBAAuBD;YACvB,OAAOX,IAAAiB,iBAAAA,CAAgBV,OAAhBU;UAJT,OAKA,IAAA,QAAK,MAAL,EAtFR,SAsFQ,CAAA;;YAEEP,2BAAuBC;YACvBC,yBAAuBD;YACvB,OAAOX,IAAAkB,gBAAAA,CAAeX,OAAfW;UAJT;YA1BA;UA0BA;UAOA,OAAO;QAlCTL,CAAAA;QAqCAb,IAAAmB,SAAAA,CAAAA;;AAEAH,QAAAA,8BAAAA,0BAAmBT,OAAnBS,GAAAA,MAAAA,IAAAA,wCAAAA;AAAAA,UAAAA;;;UACEI,IAAI,kCAAmCC,OAAAA,CAAOd,OAAPc;UACvC,KAAA,QAAOD,CAAP,CAAA;YACE,OAAO;UADT;UAIAE,aAAaF,CAACG,OAAAA,CAACZ,CAADY,CAAGC,MAAAA,CAAAA;UACjBC,OAAOC,yBAAmBC,MAAAA,CAAMP,CAACG,OAAAA,CAACK,CAADL,CAAPI;UAE1B,IAAA,QAAQE,OAALJ,IAAKI,EAAGC,CAAHD,CAAR,CAAA;;YACEE,QAAQC,eAAWC,WAAAA,CAAWC,GAAXD;YACnB,OAAOE,YAAMC,KAAAA,CAAMpB,YAAD,GAAA,CAAae,KAAb,CAALK;UAFf;UAKAC,OAAQrB,UAAD,GAAA,CAAWS,IAAX,CAAA,GAAgBT;UACvB,IAAA,QAAcsB,OAAXhB,UAAWgB,EAAER,CAAFQ,CAAd,CAAA;YACED,OAAKE,SAALF,IAAKE,EAAIvB,GAAD,GAAA,CAAIhB,IAAAwC,WAAAA,CAAUxB,uBAAVwB,CAAJ,CAAA,GAAuCxB,GAAvC,GAAA,CAA0CM,UAA1C,CAAA,GAAqDN,GAAxDuB;UADP;UAIAR,QAAQC,eAAWC,WAAAA,CAAWC,GAAXD;UACnBQ,iBAAiBzC,IAAA0C,SAAAA,CAAQX,KAAR,EAAeN,IAAf,EAAqBH,UAArBoB;UAEjB1B,OAAwB2B,MAAxBF,cAAcG,WAAAA,CAAAA,CAAUD,OAAAA,EAAAA,EAAAA,EAAxBE,aAAiCC,CAAjCD,EAAAE;;;YAAiC;YAC/BA,OAACC,MAAAA,CAAQ,EAAA,GAAA,CAAGX,IAAH,CAAA,GAAQU,KAAR,GAAA,CAAahB,KAAb,CAAA,GAAmBgB,KAAnB,GAAA,CAAwBN,cAAcQ,MAAAA,CAAAA,CAAtC,CAARD,CAAAA,EAAAA,MAADF,CAACE,SAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBADHH,CAAwBF,EAtB1B3B;YAAAA;YAAAA;UAAAA;QAAAA,CAAAA;QA2BAkC;QAAAA;;UAAAA;;;UACElD,IAAAmD,SAAAA,CAAQC,eAARD;UACAnD,IAAAqD,eAAAA,CAAc,SAAd,EAAwB,SAAxB,EAAkC,UAAlC,EAA6C,QAA7C,EAAsD,SAAtD,EAAgE,QAAhEA;;AAEA/C,UAAAA,0BAAAA,sBAAegD,MAAfhD;AAAAA,YAAAA;;;YACEiD,cAAUD;YAEVE,eAAW;YACXC,eAAW;YACXC,gBAAY;YACZC,cAAU;YACVC,eAAW;YACXtD,OAAAuD,CAAAA,aAAS,KAATA;UARFvD,CAAAA;;AAWA2C,UAAAA,oBAAAA,gBAAAA;AAAAA,YAAAA;;YACE,IAAG,CAAA,QAAAjD,IAAA8D,UAAAA,CAAAA,CAAA,CAAA,IAAA,CAAA,QAAY9D,IAAA+D,SAAAA,CAAAA,CAAZ,CAAA,CAAA,CAAH;cACEd,OAAAjD,IAAAwC,WAAAA,CAAUS,0BAAVT;YADF,OAEA,IAAA,QAAMxC,IAAA8D,UAAAA,CAAAA,CAAN,CAAA;cACEb,OAAAjD,IAAAwC,WAAAA,CAAUS,kBAAVT;YADF,OAEA,IAAA,QAAMxC,IAAA+D,SAAAA,CAAAA,CAAN,CAAA;cACEd,OAAAjD,IAAAwC,WAAAA,CAAUS,iBAAVT;YADF,OAEA,IAAA,QAAMxC,IAAAgE,SAAAA,CAAAA,CAAN,CAAA;cACEf,OAAAjD,IAAAwC,WAAAA,CAAUS,SAAVT;YADF,OAEA,IAAM,CAAA,QAAAxC,IAAAiE,QAAAA,CAAAA,CAAA,CAAA,IAAA,CAAA,QAAUjE,IAAAkE,QAAAA,CAAAA,CAAV,CAAA,CAAA,CAAN;cACEjB,OAAA,EAAA,GAAA,CAAGjD,IAAAwC,WAAAA,CAAUS,gBAAVT,CAAH,CAAA,GAA+BS,GAA/B,GAAA,CAAkCjD,IAAAwC,WAAAA,CAAUS,gBAAVT,CAAlC;YADF,OAEA,IAAA,QAAMxC,IAAAiE,QAAAA,CAAAA,CAAN,CAAA;cACEhB,OAAAjD,IAAAwC,WAAAA,CAAUS,gBAAVT;YADF,OAEA,IAAA,QAAMxC,IAAAkE,QAAAA,CAAAA,CAAN,CAAA;cACEjB,OAAAjD,IAAAwC,WAAAA,CAAUS,gBAAVT;YADF,OAEA,IAAA,QAAMxC,IAAAmE,SAAAA,CAAAA,CAAN,CAAA;cACElB,OAAAjD,IAAAwC,WAAAA,CAAUS,SAAVT;YADF;cA3JVS,OAAA;YA2JU;UAfFA,CAAAA;UAoBAC,OAAAN,yBAAAA,qBAAAA;AAAAA,YAAAA;;YACEA,OAAUD,MAAVR,YAAMC,KAAAA,CAAAA,CAAIO,OAAAA,EAAAA,EAAAA,EAAVyB,aAAmBtB,CAAnBsB,EAAAC;;;cAAmB;cACjBvB,CAACwB,aAAAA,CAAWtE,IAAAgE,SAAAA,CAAAA,CAAXM;cACDxB,CAACyB,aAAAA,CAAWvE,IAAAmE,SAAAA,CAAAA,CAAXI;cACDzB,CAAC0B,cAAAA,CAAYxE,IAAA8D,UAAAA,CAAAA,CAAZU;cACDH,OAACI,MAAAA,CAAUzE,IAAAkE,QAAAA,CAAAA,CAAVO,CAAAA,EAAAA,MAAD3B,CAAC2B,WAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBAJHL,CAAAA,GAAAA,SAAAA,CAAUzB;UADZC,CAAAA;QAnCFM,GAAAA,WAAAA,EAAAA,IAAAA;;AA6CAR,QAAAA,uBAAAA,mBAAYX,KAAD,EAAQ2C,MAAR,EAAgBC,aAA3BjC;AAAAA,UAAAA;;;UAA2B,2CAAgBZ;UACzC8C,SAASC,mBAAazC,KAAAA,CAAKmB,WAALnB;UACtB0C,iBAA+CC,WAAtBC,UAAPN,MAAOM,EAAExE,uBAAFwE,CAAsBD,EAAE7C,GAAF6C,CAAMvD,MAAAA,CAAAA,CAAKyD,OAAAA,CAAOtE,CAAhD,EAAmDuB,GAAV+C;UAE1D,IAAG,CAAA,QAAOpD,OAANE,KAAMF,EAAG6C,MAAH7C,CAAP,CAAA,IAAA,CAAA,QAA4BqD,OAANnD,KAAMmD,EAAEhD,GAAFgD,CAA5B,CAAA,CAAA,CAAH;;YACEN,MAAMN,aAAAA,CAAW,IAAXA;YACNM,MAAMO,aAAAA,CAAiBtD,OAANE,KAAMF,EAAGiD,cAAHjD,CAAjBsD;YACNP,MAAMJ,cAAAA,CAAkB3C,OAANE,KAAMF,EAAGnB,wBAAHmB,CAAlB2C;UAHR;;YAKEI,MAAML,aAAAA,CAAW,IAAXA;YACNK,MAAMH,YAAAA,CAAgBW,OAANrD,KAAMqD,EAAQC,UAAJC,GAAID,EAAEzE,sBAAFyE,CAARD,CAAhBX;UANR;UASA,IAAG,CAAA,QAAcnC,OAAdqC,aAAcrC,EAAER,CAAFQ,CAAd,CAAA,IAAA,CAAA,QAA2B8C,OAANrD,KAAMqD,EAAGT,aAAHS,CAA3B,CAAA,CAAA,CAAH;;YACER,MAAMW,YAAAA,CAAU,IAAVA;YACNX,MAAML,aAAAA,CAAW,IAAXA;YACNK,MAAMN,aAAAA,CAAW,KAAXA;YACNM,MAAMO,aAAAA,CAAW,KAAXA;YACNP,MAAMJ,cAAAA,CAAY,KAAZA;UALR;UAQA,OAAOI;QArBTlC,CAAAA,IAAAA;;AAwBAzB,QAAAA,+BAAAA,2BAAoBV,OAApBU;AAAAA,UAAAA;;;UACEG,IAAI,iBAAiBC,OAAAA,CAAOd,OAAPc;UACrB,KAAA,QAAOD,CAAP,CAAA;YACE,OAAO;UADT;UAIAoE,QAAQpE,CAACG,OAAAA,CAACZ,CAADY,CAAGC,MAAAA,CAAAA;UACZkD,SAAmBnC,SAAJyC,UAANQ,KAAMR,EAAEjE,CAAFiE,CAAIzC,EAAEkD,EAAFlD;UAEnB,IAAA,QAAU2C,OAAPR,MAAOQ,EAAEnE,CAAFmE,CAAV,CAAA;YACE,OAAO/C,YAAMgC,SAAAA,CAAUlD,UAAD,GAAA,CAAWyD,MAAX,CAAA,GAAkBzD,MAAlB,GAAA,CAAwBjB,IAAAwC,WAAAA,CAAUvB,2BAAVuB,CAAxB,CAAT2B;UADf;UAIA,IAAA,QAAU7B,OAAPoC,MAAOpC,EAAEoD,EAAFpD,CAAV,CAAA;YACE,OAAOH,YAAM6B,SAAAA,CAAU/C,UAAD,GAAA,CAAWyD,MAAX,CAAA,GAAkBzD,MAAlB,GAAA,CAAwBjB,IAAAwC,WAAAA,CAAUvB,2BAAVuB,CAAxB,CAATwB;UADf;UAKA2B,UAAU3D,eAAWC,WAAAA,CAAWC,GAAXD;UACrBQ,iBAAiBzC,IAAA0C,SAAAA,CAAQiD,OAAR,EAAiBjB,MAAjBhC;UAEjBzB,OAAwB0B,MAAxBF,cAAcG,WAAAA,CAAAA,CAAUD,OAAAA,EAAAA,EAAAA,EAAxBiD,aAAiC9C,CAAjC8C,EAAAC;;;YAAiC;YAC/BA,OAAC7C,MAAAA,CAAS6C,UAAD,GAAA,CAAWnB,MAAX,CAAA,GAAkBmB,MAAlB,GAAA,CAAwBF,OAAxB,CAAA,GAAgCE,KAAhC,GAAA,CAAqCpD,cAAcQ,MAAAA,CAAAA,CAAnD,CAARD,CAAAA,EAAAA,MAADF,CAACE,SAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBADH4C,CAAwBjD;QArB1B1B,CAAAA;QA0BAb,OAAAc,8BAAAA,0BAAmBX,OAAnBW;AAAAA,UAAAA;;;UACEE,IAAI,2BAA2BC,OAAAA,CAAOd,OAAPc;UAC/B,KAAA,QAAOD,CAAP,CAAA;YACE,OAAO;UADT;UAIA0E,SAAS1E,CAACG,OAAAA,CAACK,CAADL,CAAGC,MAAAA,CAAAA;UACbuE,SAAS3E,CAACG,OAAAA,CAACyE,CAADzE,CAAGC,MAAAA,CAAAA;UAEbO,QAAQC,eAAWC,WAAAA,CAAWC,GAAXD;UAEnBgE,WAAWjG,IAAA0C,SAAAA,CAAQX,KAAR,EAAe+D,MAAfpD;UACXwD,WAAWlG,IAAA0C,SAAAA,CAAQX,KAAR,EAAegE,MAAfrD;UAEXyD,OACE,CAAG,CAAA,QAAAF,QAAQjC,SAAAA,CAAAA,CAAR,CAAA,IAAA,CAAA,QAAoBkC,QAAQlC,SAAAA,CAAAA,CAA5B,CAAA,CAAA,CAAH,GAAA,CACEhE,IAAAwC,WAAAA,CAAUtB,SAAVsB,CADF,IAEA,CAAM,CAAA,QAAAyD,QAAQjC,SAAAA,CAAAA,CAAR,CAAA,IAAA,CAAA,QAAoBkC,QAAQlC,SAAAA,CAAAA,CAA5B,CAAA,CAAA,CAAN,GAAA,CACEhE,IAAAwC,WAAAA,CAAUtB,yBAAVsB,CADF,IAAA,CAGExC,IAAAwC,WAAAA,CAAUtB,SAAVsB,CAHF,CAAA,CAFA;UAQFtB,OAAUyB,MAAVR,YAAMC,KAAAA,CAAAA,CAAIO,OAAAA,EAAAA,EAAAA,EAAVyD,aAAmBtD,CAAnBsD,EAAAC;;;YAAmB;YACjBvD,CAACE,UAAAA,CAASqD,UAAD,GAAA,CAAWP,MAAX,CAAA,GAAkBO,GAAlB,GAAA,CAAqBN,MAArB,CAAA,GAA4BM,MAA5B,GAAA,CAAkCtE,KAAlC,CAAA,GAAwCsE,GAAxC,GAAA,CAA2CJ,QAAQhD,MAAAA,CAAAA,CAAnD,CAAA,GAAyDoD,GAAzD,GAAA,CAA4DH,QAAQjD,MAAAA,CAAAA,CAApE,CAAA,GAA0EoD,MAA1E,GAAA,CAAgFF,IAAhF,CAARnD;YACDF,CAAC0B,cAAAA,CAAY,CAAA,QAAA1D,CAAAA,YAAAmF,QAAQnC,UAAAA,CAAAA,CAARhD,CAAA,CAAA,GAAA,CAAA,SAAA,IAAA,CAAqBoF,QAAQpC,UAAAA,CAAAA,CAA7B,CAAA,CAAZU;YACD1B,CAAC2B,YAAAA,CAAU,CAAA,QAAA3D,CAAAA,YAAAmF,QAAQ/B,QAAAA,CAAAA,CAARpD,CAAA,CAAA,GAAA,CAAA,SAAA,IAAA,CAAmBoF,QAAQhC,QAAAA,CAAAA,CAA3B,CAAA,CAAVO;YACD4B,OAACC,MAAAA,CAAa,CAAA,QAAAxF,CAAAA,YAAAmF,QAAQjC,SAAAA,CAAAA,CAARlD,CAAA,CAAA,GAAA,CAAA,SAAA,IAAA,CAAoBoF,QAAQlC,SAAAA,CAAAA,CAA5B,CAAA,CAAbsC,CAAAA,EAAAA,MAADxD,CAACwD,cAAAA,EAAAA,EAAAA,CAAAA,EAAAA,mBAJHF,CAAUzD;QAvBZzB,CAAAA;MAtNFd,GAAAA,WAAAA,EAAgBmG,UAAhBnG;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAJAH;"}}, {:offset=>{:line=>289, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Cthulhu_ChineseTraditional.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nrequire \"bcdice/game_system/Cthulhu\"\n\nmodule BCDice\n  module GameSystem\n    class Cthulhu_ChineseTraditional < Cthulhu\n      # ゲームシステムの識別子\n      ID = 'Cthulhu:ChineseTraditional'\n\n      # ゲームシステム名\n      NAME = '克蘇魯神話'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = '国際化:Chinese Traditional:克蘇魯神話'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        c=爆擊率 ／ f=大失敗值 ／ s=特殊\n\n        1d100<=n    c・f・s全關閉（只進行單純數值比較判定）\n\n        ・cfs付註判定指令\n\n        CC\t 1d100擲骰 c=1、f=100\n        CCB  同上、c=5、f=96\n\n        例：CC<=80  （以技能值80來判定。cf適用於1%規則）\n        例：CCB<=55 （以技能值55來判定。cf適用於5%規則）\n\n        ・關於組合骰組\n\n        CBR(x,y)\tc=1、f=100\n        CBRB(x,y)\tc=5、f=96\n\n        ・關於對抗骰\n        RES(x-y)\tc=1、f=100\n        RESB(x-y)\tc=5、f=96\n\n        ※故障率判定\n\n        ・CC(x) c=1、f=100\n        x=故障率。擲出骰值x以上時、需在大失敗發生同時輸出（參照「大失敗＆故障」）\n        沒有大失敗時，無論成功或失敗只需參考[故障]來輸出(並非成功或失敗來輸出，而是覆蓋上去並對其輸出)\n\n        ・CCB(x) c=5、f=96\n        同上\n\n      INFO_MESSAGE_TEXT\n\n      register_prefix_from_super_class()\n\n      def initialize(command)\n        super(command)\n\n        @locale = :zh_hant\n      end\n    end\n  end\nend\n"], :names=>["<main>", "self", "require", "<module:BCDice>", "<module:GameSystem>", "<class:Cthulhu_ChineseTraditional>", "register_prefix_from_super_class", "initialize", "command", "@locale", "Cthulhu"], :mappings=>"AAAAA,2BAAAA;EAAAA;;;EAEAC,IAAAC,SAAAA,CAAQF,4BAARE;EAEAF,OAAAG;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;;QAEE,8BAAKA,4BAAL;QAGA,gCAAOA,OAAP;QAGA,oCAAWA,+BAAX;QAGA,wCACNA,yBADqB,GAErBA,IAFqB,GAGrBA,qCAHqB,GAIrBA,IAJqB,GAKrBA,cALqB,GAMrBA,IANqB,GAOrBA,0BAPqB,GAQrBA,oBARqB,GASrBA,IATqB,GAUrBA,mCAVqB,GAWrBA,mCAXqB,GAYrBA,IAZqB,GAarBA,WAbqB,GAcrBA,IAdqB,GAerBA,uBAfqB,GAgBrBA,uBAhBqB,GAiBrBA,IAjBqB,GAkBrBA,UAlBqB,GAmBrBA,uBAnBqB,GAoBrBA,uBApBqB,GAqBrBA,IArBqB,GAsBrBA,UAtBqB,GAuBrBA,IAvBqB,GAwBrBA,oBAxBqB,GAyBrBA,0CAzBqB,GA0BrBA,qDA1BqB,GA2BrBA,IA3BqB,GA4BrBA,oBA5BqB,GA6BrBA,MA7BqB,GA8BrBA,IA9BM;QAiCAJ,IAAAK,kCAAAA,CAAAA;QAEAD,OAAAE,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAN,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMO,OAAN,CAAA,EAAA,IAAA;UAEAD,OAAAE,CAAAA,cAAU,SAAVA;QAHFF,CAAAA;MA9CFF,GAAAA,WAAAA,EAAmCK,aAAnCL;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAJAH;"}}]}
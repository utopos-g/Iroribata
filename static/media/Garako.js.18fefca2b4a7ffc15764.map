{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/dice_table/table.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module DiceTable\n    # 表を表すクラス\n    class Table\n      # @param key [String]\n      # @param locale [Symbol]\n      # @return [Table]\n      def self.from_i18n(key, locale)\n        table = I18n.t(key, locale: locale)\n        new(table[:name], table[:type], table[:items])\n      end\n\n      # @param [String] name 表の名前\n      # @param [String] type 項目を選ぶときのダイスロールの方法 '1D6'など\n      # @param [Array<String>] items 表の項目の配列\n      def initialize(name, type, items)\n        @name = name\n        @items = items.freeze\n\n        m = /(\\d+)D(\\d+)/i.match(type)\n        unless m\n          raise ArgumentError, \"Unexpected table type: \#{type}\"\n        end\n\n        @times = m[1].to_i\n        @sides = m[2].to_i\n      end\n\n      # 表を振る\n      # @param [BCDice] bcdice ランダマイザ\n      # @return [String] 結果\n      def roll(bcdice)\n        value = bcdice.roll_sum(@times, @sides)\n        return choice(value)\n      end\n\n      def choice(value)\n        index = value - @times\n        return RollResult.new(@name, value, @items[index])\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:DiceTable>", "<class:Table>", "from_i18n", "self", "key", "locale", "table", "I18n", "t", "new", "[]", "initialize", "name", "type", "items", "@name", "@items", "freeze", "m", "match", "raise", "ArgumentError", "@times", "1", "to_i", "@sides", "2", "roll", "bcdice", "value", "roll_sum", "choice", "index", "-", "RollResult"], :mappings=>"AAAAA,0CAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MAEEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAIEC,MAAIC,IAAJD,gBAAAA,qBAAmBE,GAAD,EAAMC,MAAxBH;AAAAA,UAAAA;;;UACEI,QAAQC,UAAIC,GAAAA,CAAGJ,GAAP,EAAY,oBAAA,UAAQC,MAAR,EAARG;UACZN,OAAAC,IAAAM,KAAAA,CAAIH,KAAKI,OAAAA,CAAC,MAADA,CAAT,EAAkBJ,KAAKI,OAAAA,CAAC,MAADA,CAAvB,EAAgCJ,KAAKI,OAAAA,CAAC,OAADA,CAArCD;QAFFP,CAAAA;;AAQAS,QAAAA,0BAAAA,sBAAeC,IAAD,EAAOC,IAAP,EAAaC,KAA3BH;AAAAA,UAAAA;;;UACEI,YAAQH;UACRI,aAASF,KAAKG,QAAAA,CAAAA;UAEdC,IAAI,cAAcC,OAAAA,CAAON,IAAPM;UAClB,KAAA,QAAOD,CAAP,CAAA;YACEf,IAAAiB,OAAAA,CAAMC,mBAAN,EAAsBV,yBAAD,GAAA,CAA0BE,IAA1B,CAArBO;UADF;UAIAE,aAASJ,CAACR,OAAAA,CAACa,CAADb,CAAGc,MAAAA,CAAAA;UACbb,OAAAc,CAAAA,aAASP,CAACR,OAAAA,CAACgB,CAADhB,CAAGc,MAAAA,CAAAA,CAAbC;QAVFd,CAAAA;;AAgBAgB,QAAAA,oBAAAA,gBAASC,MAATD;AAAAA,UAAAA;;;UACEE,QAAQD,MAAME,UAAAA,CAAUR,UAAhB,EAAwBG,UAAlBK;UACd,OAAO3B,IAAA4B,QAAAA,CAAOF,KAAPE;QAFTJ,CAAAA;QAKA1B,OAAA8B,sBAAAA,kBAAWF,KAAXE;AAAAA,UAAAA;;;UACEC,QAAcC,UAANJ,KAAMI,EAAEX,UAAFW;UACd,OAAOC,gBAAUzB,KAAAA,CAAKM,SAAf,EAAsBc,KAAtB,EAA6Bb,UAAMN,OAAAA,CAACsB,KAADtB,CAAzBD;QAFnBsB,CAAAA;MAjCF9B,GAAAA,WAAAA,EAAAA,IAAAA;IAFFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>61, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/dice_table/range_table.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module DiceTable\n    # 各項目について、Rangeを用いて出目の合計の範囲を指定する、表のクラス。\n    #\n    # このクラスを使うと、表の定義を短く書ける。\n    # このクラスを使って表を定義するときは、各項目を以下の形で書く。\n    #\n    #     [出目の合計の範囲, 内容]\n    #\n    # 「出目の合計の範囲」には、Integerを要素とするRangeか、Integerを置ける。\n    #\n    # roll メソッドで表を振ると、出目の合計値と対応する項目が選ばれる。\n    #\n    # @example 表の定義（バトルテックの致命的命中表）\n    #   CRITICAL_TABLE = RangeTable.new(\n    #     '致命的命中表',\n    #     '2D6',\n    #     [\n    #       [2..7,   '致命的命中はなかった'],\n    #       [8..9,   '1箇所の致命的命中'],\n    #       [10..11, '2箇所の致命的命中'],\n    #       [12,     'その部位が吹き飛ぶ（腕、脚、頭）または3箇所の致命的命中（胴）']\n    #     ]\n    #   )\n    #\n    # @example 表を振った結果\n    #   CRITICAL_TABLE.roll(bcdice).formatted\n    #   # 出目の合計が7の場合 ：\"致命的命中表(7) ＞ 致命的命中はなかった\"\n    #   # 出目の合計が8の場合 ：\"致命的命中表(8) ＞ 1箇所の致命的命中\"\n    #   # 出目の合計が9の場合 ：\"致命的命中表(9) ＞ 1箇所の致命的命中\"\n    #   # 出目の合計が10の場合：\"致命的命中表(10) ＞ 2箇所の致命的命中\"\n    class RangeTable\n      # 表を振った結果を表す構造体\n      # @!attribute [rw] sum\n      #   @return [Integer] 出目の合計\n      # @!attribute [rw] values\n      #   @return [Array<Integer>] 出目の配列\n      # @!attribute [rw] content\n      #   @return [Object] 選ばれた項目の内容\n      # @!attribute [rw] formatted\n      #   @return [String] 整形された結果\n      RollResult = Struct.new(:sum, :values, :content, :formatted) do\n        alias_method :to_s, :formatted\n      end\n\n      # 表の項目を表す構造体\n      # @!attribute [rw] range\n      #   @return [Range] 出目の合計の範囲\n      # @!attribute [rw] content\n      #   @return [Object] 内容\n      Item = Struct.new(:range, :content)\n\n      # 項目を選ぶときのダイスロールの方法を表す正規表現\n      DICE_ROLL_METHOD_RE = /\\A(\\d+)D(\\d+)\\z/i.freeze\n\n      # 表を振った結果の整形処理（既定の処理）\n      DEFAULT_FORMATTER = lambda do |table, result|\n        \"\#{table.name}(\#{result.sum}) ＞ \#{result.content}\"\n      end\n\n      # @return [String] 表の名前\n      attr_reader :name\n      # @return [Integer] 振るダイスの個数\n      attr_reader :num_of_dice\n      # @return [Integer] 振るダイスの面数\n      attr_reader :num_of_sides\n\n      class << self\n        def from_i18n(key, locale)\n          table = I18n.t(key, locale: locale)\n          converted_items = table[:items].map do |item|\n            [conv_string_range(item[0]), item[1]]\n          end\n          new(table[:name], table[:type], converted_items)\n        end\n\n        def conv_string_range(x)\n          case x\n          when Integer\n            return x\n          when String\n            return x.include?(\"..\") ? Range.new(*x.split(\"..\", 2).map { |n| Integer(n) }) : Integer(x)\n          end\n\n          raise(\n            TypeError,\n            \"\#{@name}: \#{x} (\#{x.class}) must be a String or an Integer\"\n          )\n        end\n      end\n\n      # 表を初期化する\n      #\n      # ブロックを与えると、独自の結果整形処理を指定できる。\n      # ブロックは振った表（+table+）と振った結果（+result+）を引数として受け取る。\n      #\n      # @param [String] name 表の名前\n      # @param [String] dice_roll_method\n      #   項目を選ぶときのダイスロールの方法（+'1D6'+ など）\n      # @param [Array<(Range, Object)>, Array<(Integer, Object)>] items\n      #   表の項目の配列。[出目の合計の範囲, 内容]\n      # @yieldparam [RangeTable] table 振った表\n      # @yieldparam [RollResult] result 表を振った結果\n      # @raise [ArgumentError] ダイスロール方法が正しい書式で指定されていなかった場合\n      # @raise [TypeError] 範囲の型が正しくなかった場合\n      # @raise [RangeError] 出目の合計の最小値がカバーされていなかった場合\n      # @raise [RangeError] 出目の合計の最大値がカバーされていなかった場合\n      # @raise [RangeError] 出目の合計の範囲にずれや重なりがあった場合\n      #\n      # @example 表の定義（バトルテックの致命的命中表）\n      #   CRITICAL_TABLE = RangeTable.new(\n      #     '致命的命中表',\n      #     '2D6',\n      #     [\n      #       [2..7,   '致命的命中はなかった'],\n      #       [8..9,   '1箇所の致命的命中'],\n      #       [10..11, '2箇所の致命的命中'],\n      #       [12,     'その部位が吹き飛ぶ（腕、脚、頭）または3箇所の致命的命中（胴）']\n      #     ]\n      #   )\n      #\n      # @example 独自の結果整形処理を指定する場合\n      #   CRITICAL_TABLE_WITH_FORMATTER = RangeTable.new(\n      #     '致命的命中表',\n      #     '2D6',\n      #     [\n      #       [2..7,   '致命的命中はなかった'],\n      #       [8..9,   '1箇所の致命的命中'],\n      #       [10..11, '2箇所の致命的命中'],\n      #       [12,     'その部位が吹き飛ぶ（腕、脚、頭）または3箇所の致命的命中（胴）']\n      #     ]\n      #   ) do |table, result|\n      #     \"致命的命中発生? ＞ \#{result.sum}[\#{result.values}] ＞ \#{result.content}\"\n      #   end\n      #\n      #   CRITICAL_TABLE_WITH_FORMATTER.roll(bcdice).formatted\n      #   #=> \"致命的命中発生? ＞ 11[5,6] ＞ 2箇所の致命的命中\"\n      def initialize(name, dice_roll_method, items, &formatter)\n        @name = name.freeze\n        @formatter = formatter || DEFAULT_FORMATTER\n\n        m = DICE_ROLL_METHOD_RE.match(dice_roll_method)\n        unless m\n          raise(\n            ArgumentError,\n            \"\#{@name}: invalid dice roll method: \#{dice_roll_method}\"\n          )\n        end\n\n        @num_of_dice = m[1].to_i\n        @num_of_sides = m[2].to_i\n\n        store(items)\n      end\n\n      # 指定された値に対応する項目を返す\n      # @param [Integer] value 値（出目の合計）\n      # @return [Item] 指定された値に対応する項目\n      # @raise [RangeError] 範囲外の値が指定された場合\n      def fetch(value)\n        item = @items.find { |i| i.range.include?(value) }\n        unless item\n          raise RangeError, \"\#{@name}: value is out of range: \#{value}\"\n        end\n\n        return item\n      end\n\n      # 表を振る\n      # @param randomizer [#roll_barabara] ランダマイザ\n      # @return [RollResult] 表を振った結果\n      def roll(randomizer)\n        values = randomizer.roll_barabara(@num_of_dice, @num_of_sides)\n        sum = values.sum()\n\n        result = RollResult.new(sum, values, fetch(sum).content)\n        result.formatted = @formatter[self, result]\n\n        return result\n      end\n\n      private\n\n      # 表の項目を格納する\n      # @param [Array<(Range, Object)>, Array<(Integer, Object)>] items\n      #   表の項目の配列。[出目の合計の範囲, 内容]\n      # @return [self]\n      # @raise [TypeError] 範囲の型が正しくなかった場合\n      # @raise [RangeError] 出目の合計の最小値がカバーされていなかった場合\n      # @raise [RangeError] 出目の合計の最大値がカバーされていなかった場合\n      # @raise [RangeError] 出目の合計の範囲にずれや重なりがあった場合\n      def store(items)\n        items_with_range = items.map { |r, c| [coerce_to_int_range(r), c] }\n        sorted_items = items_with_range.sort_by { |r, _| r.min }\n\n        assert_min_sum_is_covered(sorted_items)\n        assert_max_sum_is_covered(sorted_items)\n        assert_no_gap_or_overlap_in_ranges(sorted_items)\n\n        @items = sorted_items\n                 .map { |range, content| Item.new(range, content.freeze).freeze }\n                 .freeze\n\n        self\n      end\n\n      # 引数を強制的に整数を要素とするRangeに変換する\n      # @param [Range, Integer] x 変換対象\n      # @return [Range] 整数を要素とするRange\n      # @raise [TypeError] xの型に対応していなかった場合\n      def coerce_to_int_range(x)\n        case x\n        when Integer\n          return Range.new(x, x)\n        when Range\n          if x.begin.is_a?(Integer) && x.end.is_a?(Integer)\n            return x\n          end\n        end\n\n        raise(\n          TypeError,\n          \"\#{@name}: \#{x} (\#{x.class}) must be an Integer or a Range with Integers \"\n        )\n      end\n\n      # 出目の合計の最小値がカバーされていることを確認する\n      # @param [Array<(Range, Object)>] sorted_items\n      #   ソートされた、項目の配列\n      # @return [self]\n      # @raise [RangeError] 出目の合計の最小値がカバーされていなかった場合\n      def assert_min_sum_is_covered(sorted_items)\n        min_sum = @num_of_dice\n        range = sorted_items.first[0]\n        unless range.include?(min_sum)\n          raise(\n            RangeError,\n            \"\#{@name}: min value (\#{min_sum}) is not covered: \#{range}\"\n          )\n        end\n\n        self\n      end\n\n      # 出目の合計の最大値がカバーされていることを確認する\n      # @param [Array<(Range, Object)>] sorted_items\n      #   ソートされた、項目の配列\n      # @return [self]\n      # @raise [RangeError] 出目の合計の最大値がカバーされていなかった場合\n      def assert_max_sum_is_covered(sorted_items)\n        max_sum = @num_of_dice * @num_of_sides\n        range = sorted_items.last[0]\n        unless range.include?(max_sum)\n          raise(\n            RangeError,\n            \"\#{@name}: max value (\#{max_sum}) is not covered: \#{range}\"\n          )\n        end\n\n        self\n      end\n\n      # 出目の合計の範囲にずれや重なりがないことを確認する\n      # @param [Array<(Range, Object)>] sorted_items\n      #   ソートされた、項目の配列\n      # @return [self]\n      # @raise [RangeError] 出目の合計の範囲にずれや重なりがあった場合\n      def assert_no_gap_or_overlap_in_ranges(sorted_items)\n        sorted_items.each_cons(2) do |i1, i2|\n          r1 = i1[0]\n          r2 = i2[0]\n\n          max1 = r1.max\n          next_of_max1 = max1 + 1\n\n          if r2.include?(max1)\n            raise RangeError, \"\#{@name}: Range overlap: \#{r1} and \#{r2}\"\n          end\n\n          unless r2.include?(next_of_max1)\n            raise RangeError, \"\#{@name}: Range gap: \#{r1} and \#{r2}\"\n          end\n        end\n\n        self\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:DiceTable>", "<class:RangeTable>", "new", "Struct", "block in <class:RangeTable>", "block (2 levels) in <class:RangeTable>", "self", "alias_method", "freeze", "lambda", "table", "result", "name", "sum", "content", "attr_reader", "from_i18n", "key", "locale", "I18n", "t", "converted_items", "map", "[]", "block in from_i18n", "item", "block (2 levels) in from_i18n", "conv_string_range", "0", "1", "x", "Integer", "$ret_or_1", "String", "include?", "Range", "split", "2", "block in conv_string_range", "n", "block (2 levels) in conv_string_range", "raise", "TypeError", "@name", "class", "initialize", "dice_roll_method", "items", "@formatter", "formatter", "DEFAULT_FORMATTER", "m", "DICE_ROLL_METHOD_RE", "match", "ArgumentError", "@num_of_dice", "to_i", "@num_of_sides", "store", "fetch", "value", "find", "@items", "block in fetch", "i", "block (2 levels) in fetch", "range", "RangeError", "roll", "randomizer", "values", "roll_barabara", "RollResult", "formatted=", "private", "items_with_range", "block in store", "r", "c", "block (2 levels) in store", "coerce_to_int_range", "sorted_items", "sort_by", "_", "min", "assert_min_sum_is_covered", "assert_max_sum_is_covered", "assert_no_gap_or_overlap_in_ranges", "Item", "begin", "is_a?", "end", "min_sum", "first", "max_sum", "*", "last", "each_cons", "block in assert_no_gap_or_overlap_in_ranges", "i1", "i2", "block (2 levels) in assert_no_gap_or_overlap_in_ranges", "r1", "r2", "max1", "max", "next_of_max1", "+"], :mappings=>"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"}}, {:offset=>{:line=>268, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/format.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module Format\n    module_function\n\n    # 比較演算子を文字列表記にする\n    #\n    # @param op [Symbol]\n    # @return [String, nil]\n    def comparison_operator(op)\n      case op\n      when :==\n        \"=\"\n      when :'!='\n        \"<>\"\n      when Symbol\n        op.to_s\n      end\n    end\n\n    # 修正値を文字列表記にする\n    #\n    # @param number [Integer, nil]\n    # @return [String]\n    def modifier(number)\n      if number.nil?\n        nil\n      elsif number == 0\n        \"\"\n      elsif number > 0\n        \"+\#{number}\"\n      else\n        number.to_s\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:Format>", "self", "module_function", "comparison_operator", "op", "$ret_or_1", "Symbol", "to_s", "modifier", "number", "nil?", "0", ">"], :mappings=>"AAAAA,gCAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;;MACEC,IAAAC,iBAAAA,CAAAA;;AAMAC,MAAAA,mCAAAA,+BAAwBC,EAAxBD;AAAAA,QAAAA;;QAEE,IAAA,QAAK,IAAL,EADAE,CAAAA,YAAKD,EAALC,CACA,CAAA;UACEF,OAAAA;QADF,OAEA,IAAA,QAAK,IAAL,EAdN,SAcM,CAAA;UACEA,OAAAA;QADF,OAEA,IAAA,QAAKG,YAAL,EAhBN,SAgBM,CAAA;UACEH,OAAAC,EAAEG,MAAAA,CAAAA;QADJ;UALAJ,OAAA;QAKA;MANFA,CAAAA;MAeAH,OAAAQ,wBAAAA,oBAAaC,MAAbD;AAAAA;QACE,IAAA,QAAGC,MAAMC,SAAAA,CAAAA,CAAT,CAAA;UACEF,OAAA;QADF,OAEA,IAAA,MAAMC,MAAN,EAAgBE,CAAhB,CAAA;UACEH,OAAAA;QADF,OAEA,IAAA,QAAaI,OAAPH,MAAOG,EAAED,CAAFC,CAAb,CAAA;UACEJ,OAACA,GAAD,GAAA,CAAIC,MAAJ;QADF;UAGED,OAAAC,MAAMF,MAAAA,CAAAA;QAHR;MALFC,CAAAA;IAtBFR,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>313, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Garako.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nrequire 'bcdice/dice_table/table'\nrequire 'bcdice/dice_table/range_table'\nrequire 'bcdice/format'\n\nmodule BCDice\n  module GameSystem\n    class Garako < Base\n      # ゲームシステムの識別子\n      ID = 'Garako'\n\n      # ゲームシステム名\n      NAME = 'ガラコと破界の塔'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'からことはかいのとう'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・判定 GR+n#f>=X （+n：判定値、#f：不安定による自動失敗基準値、X：目標値、それぞれ省略可能）\n        ・部位決定チャート：HIT\n        ・ダメージ+部位決定：GHAn（n：火力）\n        ・ダメージチャート：xDCy（CDC/EDC/FDC/ADC/LDC )\n        ・ダメージチャートver2：xDTy（CDT/EDT/FDT/ADT/LDT）\n        　xは C：コックピット、E：エンジン、F：フレーム、A：アーム、L：レッグ\n        　yはダメージ値\n        各種表\n        ・個性表：IDI／動機決定表：MTV\n        ・名前表\n        ピグマー族　　男：PNM　女：PNF　　エレメント族　男：ENM　女：ENF\n        ノーマッド族　男：NNM　女：NNF　　ラット族　　　男：RNM　女：RNF\n        ブレイン族　　１：BN1　２：BN2　　テンタクル族　１：TN1　２：TN2\n        ・ガラコ改造チャート表：GCC\n        ・武器改造チャート表：WCC\n        ・イベントチャート表：EVC\n        ・戦闘開始距離：BSD\n\n        デフォルトダイス：10面\n      MESSAGETEXT\n\n      def initialize(command)\n        super(command)\n\n        @sides_implicit_d = 10\n      end\n\n      # @param command [String]\n      # @return [String, nil]\n      def eval_game_system_specific_command(command)\n        roll_tables(command, TABLES) ||\n          roll_gr(command) ||\n          roll_damage_chart(command) ||\n          roll_attack_hit(command)\n      end\n\n      private\n\n      # 判定\n      #\n      # @param command [String]\n      # @return [String, nil]\n      def roll_gr(command)\n        parser = Command::Parser.new(\"GR\", round_type: round_type)\n                                .enable_fumble\n                                .restrict_cmp_op_to(nil, :>=)\n        cmd = parser.parse(command)\n        return nil unless cmd\n\n        modify_number = cmd.modify_number || 0\n        auto_failure_number = cmd.fumble || 1\n        target_number = cmd.target_number\n\n        dice = @randomizer.roll_once(10)\n        total = dice + modify_number\n\n        result =\n          if dice == 1\n            \"ファンブル\"\n          elsif dice <= auto_failure_number # 公式FAQより、ファンブルと自動失敗を区別する可能性があるので分岐\n            \"自動失敗\"\n          elsif dice == 10\n            \"クリティカル\"\n          elsif target_number && total >= target_number\n            \"成功\"\n          elsif target_number\n            \"失敗\"\n          end\n\n        formated_modifier = Format.modifier(modify_number)\n        formated_auto_failure = \"#\#{auto_failure_number}\" if auto_failure_number >= 2\n        format_target = \">=\#{target_number}\" if target_number\n\n        sequence = [\n          \"(1D10\#{formated_modifier}\#{formated_auto_failure}\#{format_target})\",\n          \"\#{dice}[\#{dice}]\#{formated_modifier}\",\n          total.to_s,\n          result\n        ]\n\n        return sequence.compact.join(\" ＞ \")\n      end\n\n      # ダメージ算出+部位決定チャート\n      #\n      # @param command [String]\n      # @return [String, nil]\n      def roll_attack_hit(command)\n        m = /^GHA([-+\\d]+)$/i.match(command)\n        return nil unless m\n\n        modifier = ArithmeticEvaluator.eval(m[1])\n        attack = @randomizer.roll_once(10)\n        total = attack + modifier\n        hit_text = \"\#{total}（ダメージを受けない）\"\n        if total > 0\n          hit = TABLES[\"HIT\"].roll(@randomizer)\n          hit_dice = \", HIT[\#{hit.value}]\"\n          hit_text = \"\#{hit.body}に \#{total} -【部位装甲】\"\n        end\n\n        formated_modifier = Format.modifier(modifier)\n        sequence = [\n          \"(1D10\#{formated_modifier})\",\n          \"\#{attack}[\#{attack}]\#{formated_modifier}\#{hit_dice}\",\n          hit_text\n        ]\n\n        return sequence.join(\" ＞ \")\n      end\n\n      # 部位ダメージチャート\n      #\n      # @param command [String]\n      # @return [String, nil]\n      def roll_damage_chart(command)\n        m = /^([CEFAL]D[CT])([-+\\d]+)$/i.match(command)\n        return nil unless m\n\n        chart = DAMAGE_CHARTS[m[1]]\n        damage = ArithmeticEvaluator.eval(m[2]).clamp(0, 10)\n        return \"ダメージを受けない\" if damage <= 0\n\n        result = chart[:table][damage - 1]\n        return \"\#{chart[:name]}(\#{damage}) ＞ \#{result}\"\n      end\n\n      DAMAGE_CHARTS = {\n        \"CDC\" => {\n          name: \"部位ダメージチャート：コックピット\",\n          table: [\n            \"小破（アーマー損傷）：以後、この部位の【部位装甲】-1。\",\n            \"小破（視界不良）：モニターやハッチの歪み等により、視界を大きく遮られる。以後、【視認性】-1、【部位装甲】-1。\",\n            \"小破（強震）：大きく揺さぶられる。キミは【身体】10の判定を行う。失敗した場合、次のターンを失う。【部位装甲】-1。\",\n            \"小破（収納直撃）：アイテム収納スペースに直撃！　所持品一つにつき1d10を振れ。出目が5以下だった所持品は破壊される。【部位装甲】-1。\",\n            \"中破（計器損傷）：コンソールの一部が停止する。［弱体1］を受ける。\",\n            \"中破（制御不能）：コントロールが効かなくなる。キミは次のターンを失う。［弱体1］を受ける。\",\n            \"中破（貫通！）：パイロットに被害が！　キミはHPダメージ（1d10-【身体】）に加え、［弱体1］を受ける。\",\n            \"大破（故障）：コックピットが完全にいかれる。キミは次のラウンド終了時まで、あらゆる判定に自動的にファンブルする。［弱体1］を受ける。\",\n            \"大破（貫通！）：パイロットに被害が！　キミはHPダメージ（1d10+3-【身体】）に加え、［弱体1］を受ける。\",\n            \"修復不能（破壊）：コックピットが［修復不能］となる。キミは2d10-【身体】点のHPダメージを受ける。ガラコはすべての機能を停止する。コックピットのハッチが自動的に開く。\",\n          ]\n        },\n        \"EDC\" => {\n          name: \"部位ダメージチャート：エンジン\",\n          table: [\n            \"小破（アーマー損傷）：以後、この部位の【部位装甲】-1。\",\n            \"小破（アーマー損傷）：以後、この部位の【部位装甲】-1。\",\n            \"小破（燃料漏れ）：タンクから燃料が漏れる。燃料-1。この部位の【部位装甲】-1。\",\n            \"小破（燃料漏れ）：タンクから燃料が漏れる。燃料-2。この部位の【部位装甲】-1。\",\n            \"中破（エンジン不調）：時々エンジンが動かなくなる。［弱体1］を受ける。\",\n            \"中破（燃料漏れ）：タンクから燃料が漏れる。燃料-2。［弱体1］を受ける。\",\n            \"中破（ヒート）：オーバーヒートする。次のターンの終了時まで、移動と攻撃を行えない。［弱体1］を受ける。\",\n            \"大破（エンジン不調）：キミは次のターンを失う。［弱体1］を受ける。\",\n            \"大破（故障）：以後、この部位の【部位装甲】が0になる。［弱体1］を受ける。\",\n            \"修復不能（エンジン停止）：エンジンが停止する。ガラコはすべての機能を停止する。コックピットのハッチが自動的に開く。【操作性】10の判定を行うこと。失敗するとエンジンが爆発する。その場合、すべての部位が［修復不能］となり、キミは2d10-【身体】点のダメージを受ける。\",\n          ]\n        },\n        \"FDC\" => {\n          name: \"部位ダメージチャート：フレーム\",\n          table: [\n            \"小破（不安定）：体勢を崩す。次のターン、キミは攻撃を行えない。この部位の【部位装甲】-1。\",\n            \"小破（スクラッチ！）：フレームに醜い傷が残る。この部位の【部位装甲】-1。\",\n            \"小破（アーマー損傷）：フレームが歪む。この部位の【部位装甲】-1。\",\n            \"小破（アーマー損傷）：フレームがきしみ始め、ガラコの動きを阻害し始める。【移動力】-1。さらに、この部位の【部位装甲】-1。\",\n            \"中破（放熱板損傷）：熱を機体外に逃すことができなくなる。［弱体1］を受ける。\",\n            \"中破（スタビライザー損傷）：機体のバランス調整装置が故障する。【身体】10の判定を行うこと。失敗した場合、キミは次のターンを失う。［弱体1］を受ける。\",\n            \"中破（貫通！）：パイロットに被害が！　キミはHPダメージ（1d10-【身体】）を受ける。［弱体1］を受ける。\",\n            \"大破（停止）：フレームが動かない。キミは次のターンを失う。［弱体1］を受ける。\",\n            \"大破（アーマー損傷）：フレームに甚大なダメージを受ける。以後、この部位の【部位装甲】に-3。［弱体1］を受ける。\",\n            \"修復不能（フレーム崩壊）：フレームが［修復不能］となる。フレームの大部分が剥がれ落ち、ガラコの内部が晒される。以後、キミに対して部位狙いが行われる場合、その命中判定に対する修正（p21）は発生しなくなる。［弱体2］を受ける。\",\n          ]\n        },\n        \"ADC\" => {\n          name: \"部位ダメージチャート：アーム\",\n          table: [\n            \"小破（アーマー損傷）：アームの装甲にヒビが入る。【部位装甲】-1。\",\n            \"小破（武器落とし！）：【身体】8の判定を行う。失敗した場合、ダメージを受けた側のアームに（スロットを消費して）装着していた武器を落とす。【部位装甲】-1。\",\n            \"小破（マニュピレータ損傷）：指が何本かちぎれ飛んだ。【操作性】-1、【部位装甲】-1。\",\n            \"小破（機能停止）：次のターンの終了時まで、このアームを使った攻撃はできない。以後、この部位の【部位装甲】-1。\",\n            \"中破（痙攣）：アームの動きがぶれ始める。［弱体1］を受ける。\",\n            \"中破（武器落とし！）：ダメージを受けた側のアームに（スロットを消費して）装着していた武器を落とす。［弱体1］を受ける。\",\n            \"中破（スピン）：機体が大きく回転する。【身体】10の判定を行うこと。失敗した場合、［伏せ］状態となった上、次のターンを失う。［弱体1］を受ける。\",\n            \"大破（アーマー損傷）：以後、この部位の【部位装甲】を-3。［弱体1］を受ける。\",\n            \"大破（武器落とし！）：ダメージを受けた側のアームに（スロットを消費して）装着していた武器を落とす。以後、この部位の【部位装甲】が0になる。［弱体1］を受ける。\",\n            \"修復不能（破壊）：ダメージを受けた側のアームが［修復不能］となる。［弱体2］を受ける。\",\n          ]\n        },\n        \"LDC\" => {\n          name: \"部位ダメージチャート：レッグ\",\n          table: [\n            \"小破（アーマー損傷）：以後、この部位の【部位装甲】-1。\",\n            \"小破（よろめき）：以後、この部位の【部位装甲】-1。次のターン終了時まで、キミは移動できない。\",\n            \"小破（スネア）：足元をすくわれる。【部位装甲】-1。さらに【身体】8の判定を行うこと。失敗した場合、キミは［伏せ］状態になる。\",\n            \"小破（跛足）：以後、【移動力】-1、【部位装甲】-1。\",\n            \"中破（シャフト損傷）：脚部の軸に歪みが生じる。［弱体1］を受ける。\",\n            \"中破（アクチュエータ損傷）：脚部のアクチュエータに大きな損傷を受ける。【移動力】-1。［弱体1］を受ける。\",\n            \"中破（スピン）：機体が大きく回転する。【身体】10の判定を行うこと。失敗した場合、［伏せ］状態となった上、次のターンを失う。［弱体1］を受ける。\",\n            \"大破（アーマー損傷）：以後、この部位の【部位装甲】を-3。［弱体1］を受ける。\",\n            \"大破（跛足）：以後、【移動力】-2。この部位の【部位装甲】が0になる。［弱体1］を受ける。\",\n            \"修復不能（破壊）：ダメージを受けた側のレッグが［修復不能］となる。【移動力】-2。［弱体2］を受ける。\",\n          ]\n        },\n        \"CDT\" => {\n          name: \"部位ダメージチャートv2: コックピット\",\n          table: [\n            \"アーマー損傷（小破/弱体0/装甲ダメージ1）装甲に軽いひび割れが走る。\",\n            \"視界不良（小破/弱体0/装甲ダメージ1）モニターやハッチの歪み等により、視界を大きく遮られる。以後、【視認性】-1。\",\n            \"強震（小破/弱体0/装甲ダメージ1）大きく揺さぶられる。キミは【身体】10 の判定を行なう。失敗した場合、次のターンを失う。\",\n            \"貫通！（小破/弱体0/装甲ダメージ1）パイロットに被害が！キミはＨＰダメージ（1d10-【身体】）を受ける。\",\n            \"計器損傷（中破/弱体1/装甲ダメージ1）コンソールの一部が停止する。\",\n            \"制御不能（中破/弱体1/装甲ダメージ1）コントロールが効かなくなる。キミは次のターンを失う。\",\n            \"貫通！（中破/弱体1/装甲ダメージ1）パイロットに被害が！キミはＨＰダメージ（1d10-【身体】）を受ける。\",\n            \"故障（大破/弱体1/装甲ダメージ2）コックピットが完全にいかれる。キミは次のラウンド終了時まで、あらゆる判定に自動的にファンブルする。\",\n            \"貫通！（大破/弱体1/装甲ダメージ2）パイロットに被害が！キミはＨＰダメージ（1d10+3-【身体】）を受ける。\",\n            \"破壊（修復不能/弱体2/装甲ダメージ3）コックピットが「修復不能」となる。キミは2d10-【身体】点のＨＰダメージを受ける。ガラコはすべての機能を停止する。コックピットのハッチが自動的に開く。\",\n          ]\n        },\n        \"EDT\" => {\n          name: \"部位ダメージチャートv2: エンジン\",\n          table: [\n            \"アーマー損傷（小破/弱体0/装甲ダメージ1）装甲に軽いひび割れが走る。\",\n            \"アーマー損傷（小破/弱体0/装甲ダメージ1）装甲に軽いひび割れが走る。\",\n            \"燃料漏れ（小破/弱体0/装甲ダメージ1）タンクから燃料が漏れる。燃料-1。\",\n            \"燃料漏れ（小破/弱体0/装甲ダメージ1）タンクから燃料が漏れる。燃料-2。\",\n            \"エンジン不調（中破/弱体1/装甲ダメージ1）エンジンの調子が安定しない。\",\n            \"オーバーヒート（中破/弱体1/装甲ダメージ1）オーバーヒートする。次のターンの終了時まで、移動と攻撃を行えない。\",\n            \"エンジン不調（中破/弱体1/装甲ダメージ1）なんだか調子悪い。キミは次のターンを失う。\",\n            \"燃料漏れ（大破/弱体1/装甲ダメージ2）タンクから燃料が漏れる。燃料-3。\",\n            \"貫通！（大破/弱体1/装甲ダメージ2）パイロットに被害が！キミはＨＰダメージ（1d10+3-【身体】）を受ける。\",\n            \"エンジン停止（修復不能/弱体2/装甲ダメージ3）エンジンが停止する。ガラコはすべての機能を停止する。コックピットのハッチが自動的に開く。【操作性】10の判定を行なうこと。失敗するとエンジンが爆発する。その場合、すべての部位が［修復不能］となり、キミは2d10-【身体】点のＨＰダメージを受ける\",\n          ]\n        },\n        \"FDT\" => {\n          name: \"部位ダメージチャートv2: フレーム\",\n          table: [\n            \"アーマー損傷 （小破 /0/装甲ダメージ1）装甲に軽いひび割れが走る。\",\n            \"スクラッチ！（小破/弱体0/装甲ダメージ1）フレームに醜い傷が残る。\",\n            \"歪み（小破/弱体0/装甲ダメージ1）フレームが歪み、ガラコの動きを阻害し始める。【移動力】-1。\",\n            \"ハードポイント損傷（小破/弱体0/装甲ダメージ1）このフレームに装着している武器、及びオプションをすべて落とす。装着していた武器やオプションが外れかかる。キミは【身体】8の判定を行なう。失敗した場合、\",\n            \"放熱板損傷（中破/弱体1/装甲ダメージ1）熱を機体外に逃すことができなくなる。これはヤバい。\",\n            \"スタビライザー損傷（中破/弱体1/装甲ダメージ1）ターンを失う。機体のバランス調整装置が故障する。【身体】10の判定を行なうこと。失敗した場合、キミは次の\",\n            \"貫通！（中破/弱体1/装甲ダメージ1）パイロットに被害が！キミはＨＰダメージ（1d10-【身体】）を受ける。\",\n            \"停止（大破/弱体1/装甲ダメージ2）フレームが動かない。キミは次のターンを失う。\",\n            \"ハードポイント破壊（大破/弱体1/装甲ダメージ2）武器やオプションを取り付ける箇所が破壊される。以後、このフレームに（スロットを消費して）装着している武器やオプションは使用できない（常時効果のあるものも、効果を失う）。\",\n            \"フレーム崩壊（修復不能/弱体2/装甲ダメージ3）フレームが「修復不能」となる。フレームの大部分が剥がれ落ち、ガラコの内部が晒される。以後キミに対して部位狙いが行われる場合、その命中判定に対する修正（『GHT』p21）は発生しない。\",\n          ]\n        },\n        \"ADT\" => {\n          name: \"部位ダメージチャートv2: アーム\",\n          table: [\n            \"アーマー損傷（小破/弱体0/装甲ダメージ1）装甲に軽いひび割れが走る。\",\n            \"武器落とし！（小破/弱体0/装甲ダメージ1）キミは【身体】8の判定を行う。失敗した場合、ダメージを受けた側のアームに（スロットを消費して）装着していた武器を落とす。\",\n            \"マニピュレータ損傷（小破/弱体0/装甲ダメージ1）指が何本かちぎれ飛んだ。【操作性】-1。\",\n            \"機能停止（小破/弱体0/装甲ダメージ1）次のターンの終了時まで、このアームを使った攻撃はできない。\",\n            \"痙攣（中破/弱体1/装甲ダメージ1）アームの動きがぶれ始める。\",\n            \"武器落とし！（中破/弱体1/装甲ダメージ1）ダメージを受けた側のアームに（スロットを消費して）装着していた武器を落とす。\",\n            \"スピン（中破/弱体1/装甲ダメージ1）機体が大きく回転する。【身体】10の判定を行うこと。失敗した場合、［伏せ］状態となった上、次のターンを失う。\",\n            \"武器落とし！（大破/弱体1/装甲ダメージ2）ダメージを受けた側のアームに（スロットを消費して）装着していた武器を落とす。\",\n            \"ハードポイント破壊（大破/弱体1/装甲ダメージ2）している武器やオプションは使用できない（常時効果のあるものも、効果を失う）。武器やオプションを取り付ける箇所が破壊される。以後、このアームに（スロットを消費して）装着している武器やオプションは使用できない（常時効果のあるものも、効果を失う）。\",\n            \"破壊（修復不能/2/装甲ダメージ3）ダメージを受けた側のアームが「修復不能」となる。\",\n          ]\n        },\n        \"LDT\" => {\n          name: \"部位ダメージチャートv2: レッグ\",\n          table: [\n            \"アーマー損傷 （小破 /弱体0/装甲ダメージ1）装甲に軽いひび割れが走る。\",\n            \"よろめき （小破 /弱体0/装甲ダメージ1）次のターンの終了時まで、キミは移動できない。\",\n            \"スネア （小破 /弱体0/装甲ダメージ1）足元をすくわれる。【身体】8 の判定を行うこと。失敗した場合、キミは［伏せ］状態になる。\",\n            \"跛足 （小破 /弱体0/装甲ダメージ1）以後、【移動力】-1。\",\n            \"シャフト損傷 （中破 /弱体1/装甲ダメージ1）脚部の軸に歪みが生じる。\",\n            \"アクチュエータ損傷 （中破 /弱体1/装甲ダメージ1）脚部のアクチュエータに大きな損傷を受ける。【移動力】-1。\",\n            \"スピン （中破 /弱体1/装甲ダメージ1）機体が大きく回転する。【身体】10 の判定を行うこと。失敗した場合、［伏せ］状態となった上、次のターンを失う。\",\n            \"跛足 （大破 /弱体1/装甲ダメージ2）以後、【移動力】-2。\",\n            \"ハードポイント破壊 （大破 /弱体1/装甲ダメージ2）している武器やオプションは使用できない（常時効果のあるものも、効果を失う）。 武器やオプションを取り付ける箇所が破壊される。以後、このレッグに（スロットを消費して）装着している武器やオプションは使用できない（常時効果のあるものも、効果を失う）。\",\n            \"破壊 （修復不能 /弱体2/装甲ダメージ3）ダメージを受けた側のレッグが「修復不能」となる。【移動力】-2。\",\n          ]\n        }\n      }.freeze\n      TABLES = {\n        \"PNM\" => DiceTable::Table.new(\n          \"名前表：ピグマー族（男）\",\n          \"1D10\",\n          [\n            \"バビロン\",\n            \"グリニッジ\",\n            \"デトロイト\",\n            \"ヨコスカ\",\n            \"ボルドー\",\n            \"テキサス\",\n            \"シチリア\",\n            \"チェルノブイリ\",\n            \"グンマ\",\n            \"サマルトリア\",\n          ]\n        ),\n        \"PNF\" => DiceTable::Table.new(\n          \"名前表：ピグマー族（女）\",\n          \"1D10\",\n          [\n            \"ルアンダ\",\n            \"ローマ\",\n            \"フロリダ\",\n            \"ホノルル\",\n            \"ツガル\",\n            \"ゲルニカ\",\n            \"シャンハイ\",\n            \"モナコ\",\n            \"チグリス\",\n            \"オーサカ\",\n          ]\n        ),\n        \"ENM\" => DiceTable::Table.new(\n          \"名前表：エレメント族（男）\",\n          \"1D10\",\n          [\n            \"アポロン\",\n            \"ミキストリ\",\n            \"アザゼル\",\n            \"フマクト\",\n            \"マサカド\",\n            \"ククルカン\",\n            \"ルシフェル\",\n            \"ザギグ\",\n            \"フェムト\",\n            \"マイトレーヤ\",\n          ]\n        ),\n        \"ENF\" => DiceTable::Table.new(\n          \"名前表：エレメント族（女）\",\n          \"1D10\",\n          [\n            \"クシナダ\",\n            \"アルテミス\",\n            \"ゼノビア\",\n            \"フレイヤ\",\n            \"イシュタム\",\n            \"ベルゼバブ\",\n            \"マイシェラ\",\n            \"バステト\",\n            \"スクルド\",\n            \"アテナ\",\n          ]\n        ),\n        \"NNM\" => DiceTable::Table.new(\n          \"名前表：ノーマッド族（男）\",\n          \"1D10\",\n          [\n            \"ドラム\",\n            \"カホン\",\n            \"ハレルヤ\",\n            \"トリノウタ\",\n            \"スリラー\",\n            \"シンバル\",\n            \"リュート\",\n            \"ウクレレ\",\n            \"タンバリン\",\n            \"ユメコウネン\",\n          ]\n        ),\n        \"NNF\" => DiceTable::Table.new(\n          \"名前表：ノーマッド族（女）\",\n          \"1D10\",\n          [\n            \"ピアノ\",\n            \"テルミン\",\n            \"ソバカス\",\n            \"イマジン\",\n            \"ツナミ\",\n            \"ピッコロ\",\n            \"ハープ\",\n            \"シャミセン\",\n            \"ミザルー\",\n            \"ドナドナ\",\n          ]\n        ),\n        \"RNM\" => DiceTable::Table.new(\n          \"名前表：ラット族（男）\",\n          \"1D10\",\n          [\n            \"ポチ\",\n            \"シシマル\",\n            \"ポンタ\",\n            \"コテツ\",\n            \"アルフォンス\",\n            \"パトラッシュ\",\n            \"ミッキー\",\n            \"ジジ\",\n            \"サカモト\",\n            \"オンソクマル\",\n          ]\n        ),\n        \"RNF\" => DiceTable::Table.new(\n          \"名前表：ラット族（女）\",\n          \"1D10\",\n          [\n            \"タマ\",\n            \"ココ\",\n            \"ラブ\",\n            \"ピーコ\",\n            \"モカ\",\n            \"オリガミ\",\n            \"ヒメ\",\n            \"ミィ\",\n            \"ルナ\",\n            \"ク・メル\",\n          ]\n        ),\n        \"BN1\" => DiceTable::Table.new(\n          \"名前表：ブレイン族（その１）\",\n          \"1D10\",\n          [\n            \"マリファナ\",\n            \"バファリン\",\n            \"タミフル\",\n            \"セーロガン\",\n            \"モルヒネ\",\n            \"ハルシオン\",\n            \"トリカブト\",\n            \"バイアグラ\",\n            \"エリクサー\",\n            \"クラレ\",\n          ]\n        ),\n        \"BN2\" => DiceTable::Table.new(\n          \"名前表：ブレイン族（その２）\",\n          \"1D10\",\n          [\n            \"ニトロ\",\n            \"ダイオキシン\",\n            \"タウリン\",\n            \"コイーバ\",\n            \"マールボロ\",\n            \"キャメル\",\n            \"ドクダミ\",\n            \"アブサン\",\n            \"ドブロク\",\n            \"マティーニ\",\n          ]\n        ),\n        \"TN1\" => DiceTable::Table.new(\n          \"名前表：テンタクル族（その１）\",\n          \"1D10\",\n          [\n            \"アップル\",\n            \"プリン\",\n            \"ビフテキ\",\n            \"ガンモ\",\n            \"レバニラ\",\n            \"カボチャ\",\n            \"コロッケ\",\n            \"マトン\",\n            \"ギョーザ\",\n            \"タバスコ\",\n          ]\n        ),\n        \"TN2\" => DiceTable::Table.new(\n          \"名前表：テンタクル族（その２）\",\n          \"1D10\",\n          [\n            \"キノコ\",\n            \"セロリ\",\n            \"ラザニア\",\n            \"ユドーフ\",\n            \"ニンジン\",\n            \"カイワレ\",\n            \"ボルシチ\",\n            \"ハクサイ\",\n            \"キャラメル\",\n            \"ワタアメ\",\n          ]\n        ),\n        \"MTV\" => DiceTable::Table.new(\n          \"動機決定表\",\n          \"1D10\",\n          [\n            \"金。お宝の臭いがした。\",\n            \"正義。破界の塔は災いのもと。絶たねばならない。\",\n            \"友情。この破界の塔のせいで友人が困っている。助けなくちゃ。\",\n            \"探究心。破界の塔のことをもっと知りたい。\",\n            \"戦闘狂。もっと戦いたい。\",\n            \"暇つぶし。退屈な日常を忘れたい。\",\n            \"自殺願望。なんかもう死にたい。\",\n            \"冒険家。ワクワクしたい。\",\n            \"山男。シティが肌に合わない。\",\n            \"特に動機らしい動機はない。\",\n          ]\n        ),\n        \"HIT\" => DiceTable::Table.new(\n          \"部位決定チャート\",\n          \"1D10\",\n          [\n            \"コックピット\",\n            \"エンジン\",\n            \"フレーム\",\n            \"フレーム\",\n            \"フレーム\",\n            \"フレーム\",\n            \"ライトアーム\",\n            \"レフトアーム\",\n            \"ライトレッグ\",\n            \"レフトレッグ\",\n          ]\n        ),\n        \"GCC\" => DiceTable::Table.new(\n          \"ガラコ改造チャート表\",\n          \"1D10\",\n          [\n            \"【命中+】価格+200。【操作性】+1。［不安定］1。\",\n            \"【回避+】価格+200。【機動性】+1。［不安定］1。\",\n            \"【視界+】価格+200。【視認性】+2。［不安定］1。\",\n            \"【移動+】価格+100。【移動力】+1。\",\n            \"【火力+】価格+200。その部位に装着した武器の火力を常に+2する。\",\n            \"【部位装甲+】価格+100。【部位装甲】+2。\",\n            \"【限界重量+】価格+100。【限界重量】+1000。\",\n            \"【安定性+】価格+50。［不安定］-1。\",\n            \"【スロット+】価格+500。【スロット】+1。\",\n            \"【弱体無効】価格+500。このパーツへの部位ダメージによる[弱体]の効果を無視する。\",\n          ]\n        ),\n        \"WCC\" => DiceTable::Table.new(\n          \"武器改造チャート表\",\n          \"1D10\",\n          [\n            \"【命中+】価格+200。【操作性】+1。\",\n            \"【火力+】価格+200。【火力】+2。\",\n            \"【射程】価格+200。【射程】+3。「射程：近接」の場合、「射程:3 or 近接」となる(攻撃する度にどちらかを選ぶ)。\",\n            \"【範囲+】価格+200。1シーンにつき1回、この武器の目標を「範囲2」に変更してもよい(フリーアクション)。もともと範囲攻撃できる武器の場合は、「範囲n+1」にできる(1シーン1回、フリーアクション)。\",\n            \"【部位変更】価格+200。装着できる部位がランダムに追加される。部位決定チャート(『GHT』p21)を使用して決めること。\",\n            \"【部位装甲+】価格+100。装着した部位の【部位装甲】+2。\",\n            \"【精度+】価格+100。この武器を使って狙い撃ちをする場合、命中判定に+1。\",\n            \"【装飾+】価格+500。特に効果はないが、売却した時の金額が上昇する。\",\n            \"【幸運+】価格+500。この武器による命中判定の出目が1だった場合、判定を振り直しても良い(1シーン1回まで)。\",\n            \"【回数無限】価格+500。武器の使用回数制限がなくなる。\",\n          ]\n        ),\n        \"EVC\" => DiceTable::Table.new(\n          \"イベントチャート表\",\n          \"1D10\",\n          [\n            \"【クリーチャー】スタートル(『GTD』p30)が1d10+3体現れる。戦闘開始。\",\n            \"【ビット】コーンノーズ(『GTD』p23)が1d10+3体現れる。戦闘開始。\",\n            \"【ノーマッド】ノーマッド族のランドクローラーと遭遇する。このシーンはノーマッドからアイテムを購入しても良い。ノーマッド族は天蓋都市で購入できるすべてのアイテムを販売している(ただし金額は20%増し)。\",\n            \"【ピグマー族】君達の目的地方面から、ボロボロになったピグマー族のNPCが歩いてくる。NPCに何があったのかはGMが決めよ。ピグマー族を天蓋都市まで送った場合、謝礼として200クレジットを受け取ることが出来る。NPCは重量50のアイテムとして扱う。\",\n            \"【ビット】ダスクウォッチ(『GTD』p23)が1d10+3体現れる。戦闘開始。\",\n            \"【異常気象】嵐、竜巻、豪雨など、異常な気象によって行動を阻害される。PCのうち代表者1名が【視認】10の判定を行うこと。失敗した場合、次のシーンはスポットを移動できない。現在のスポットに留まることになる。\",\n            \"【クリーチャー】ナグ(『GTD』p31)が1d10+4体現れる。戦闘開始。\",\n            \"【ビット】ランオーバー(『GTD』p25)が3体現れる。戦闘開始。\",\n            \"【猛毒の霧】付近に毒の霧が立ち込める。全てのキャラクターは毒によって1d10のHPダメージを受ける。\",\n            \"【最悪の敵】ズルワーン(『GTD』p29)が1体現れる。戦闘開始。\",\n          ]\n        ),\n        \"BSD\" => DiceTable::Table.new(\n          \"戦闘開始距離\",\n          \"1D10\",\n          [\n            \"3マス\",\n            \"3マス\",\n            \"6マス\",\n            \"6マス\",\n            \"9マス\",\n            \"9マス\",\n            \"12マス\",\n            \"12マス\",\n            \"15マス\",\n            \"15マス\",\n          ]\n        ),\n        'IDI' => DiceTable::RangeTable.new(\n          \"個性表\",\n          \"1D100\",\n          [\n            [1..5, '〈近接武器熟練〉 近接攻撃の火力+1。'],\n            [6..10, '〈遠隔武器熟練〉 遠隔攻撃の火力+1。'],\n            [11..15, '〈天才〉 【技術】+1。'],\n            [16..20, '〈頑強〉 【身体】+1。'],\n            [21..25, '〈早業〉 【速度】+1。'],\n            [26..30, '〈スイフトフット〉 【移動力】+1。'],\n            [31..35, '〈超反応〉 行動判定値+2。'],\n            [36..40, '〈警戒心〉 罠を発見するための判定に+2。'],\n            [41..45, '〈解除屋〉 罠を解除するための判定に+2。'],\n            [46..50, '〈タフガイ〉 最大HP+5。'],\n            [51, '〈踏み込み〉 キミが使用する近接武器のデータを「射程：2」に変更する。'],\n            [52, '〈不動〉 キミは強制移動の効果を受けない。'],\n            [53, '〈ペイローダー〉 ガラコの【限界重量】+2000。'],\n            [54, '〈魅力〉 キミがHPを回復するアイテム、もしくは超能力の目標になった時、キミのHPを追加で1点回復する。'],\n            [55, '〈ダブルタップ〉 キミのターン開始時に使用。このターンの間、キミは追加で1回の遠隔攻撃を行うことができる。'],\n            [56, '〈薙ぎ払い〉 キミのターン開始時に使用。このターンの間、キミが行う近接攻撃の目標を「周囲1マス以内にいるすべての敵」に変更する。'],\n            [57, '〈武器落とし〉 キミは部位ひとつを指定する。目標は指定された部位に（スロットを消費して）装着している武器すべてを地面に落とす。'],\n            [58, '〈切り払い〉 キミが行う回避判定の直前に使用。その判定を、【機動性】ではなく【操作性】で判定してよい。ただし、キミは近接武器を装着していなければならない。'],\n            [59, '〈体崩しの達人〉 キミが目標のレッグに攻撃を命中させる度、その目標は【機動性】10の判定を行う。失敗した場合、目標は［伏せ］状態になる。'],\n            [60, '〈超分解術〉 アイテムひとつを目標にする。目標のアイテムの重量を1/4にする。ただし、そのアイテムは使用できなくなる。再度〈超分解術〉の判定に成功することで、元に戻せる（重量が元に戻り、アイテムが使用可能になる）。'],\n            [61, '〈即時換装〉 キミは、ガラコのパーツ換装を（ベースアクションではなく）ムーブアクションで行ってもよい。'],\n            [62, '〈ノックバック〉 キミが目標に5点以上の最終ダメージを与えた直後に使用。目標を1マス、任意の方向に強制移動させる。近接武器で攻撃した場合のみ使用できる。'],\n            [63, '〈照準〉 このターンの間、次に行う攻撃の命中判定+1。'],\n            [64, '〈燃料節約術〉 戦闘時以外、キミは燃料を消費しなくてよい。'],\n            [65, '〈追撃〉 キミの敵が、隣接するマスから離れるような移動を宣言した直後に使用。キミはその敵に対して近接攻撃を行う。近接攻撃の後、敵は移動を行うこと。'],\n            [66, '〈連撃〉 キミが敵の部位を［修復不能］にした直後に使用。キミは再度、その敵に対して攻撃を行う。'],\n            [67, '〈殺し屋〉 キミがコックピットに攻撃を命中させる度、そのガラコの操縦者は2点のHPを失う。'],\n            [68, '〈極大射程〉 キミが扱う遠隔武器の射程を2倍にする。'],\n            [69, '〈援護射撃〉 目標が回避判定を行った直後に使用。目標の回避判定の達成値-1。その後、キミは準備済みの遠隔武器ひとつの使用回数を1減らすこと。'],\n            [70, '〈鉄壁〉 キミがダメージを受けた直後に使用。そのダメージを無効化する。'],\n            [71, '〈心臓狙い〉 キミが部位狙いを行い、コックピット、もしくはエンジンに対して攻撃を行う際、命中判定+1。'],\n            [72, '〈四肢狙い〉 キミが部位狙いを行い、アーム、もしくはレッグに対して攻撃を行う際、命中判定+1。'],\n            [73, '〈窮地逆転〉 キミの判定の出目が1だった時、その出目を10に変更する。'],\n            [74, '〈防御重視〉 ラウンド開始時に使用。【操作性】-1。【機動性】+2。ラウンド終了時まで。'],\n            [75, '〈チアガール〉 目標は即座に追加のターンを得る。'],\n            [76, '〈毒半減〉 キミが［毒］状態になった時、毎回失うHPを1点減らす。ノーマッド族はこの個性を取得できない。'],\n            [77, '〈毒無効〉 キミは［毒］状態にならない。この個性はノーマッド族だけが取得できる。'],\n            [78, '〈生存術〉 キミは各シーン終了時、HPを減らさなくてよい。'],\n            [79, '〈平衡感覚〉 キミは［不安定］状態のペナルティを受けない。'],\n            [80, '〈不屈〉 キミのターン開始時に使用。このターンの間、キミはガラコの損傷による［弱体］の効果を受けない。'],\n            [81, '〈プレデターセンス〉 近接攻撃の命中判定+2。この個性はラット族だけが取得できる。'],\n            [82, '〈鷹の目〉 遠隔攻撃の命中判定+2。この個性はラット族だけが取得できる。'],\n            [83, '〈超リペア術〉 部位をひとつ選択する。目標の部位の被ダメージすべてを一時的に回復する（修復不能を除く）。回復したダメージは、シーン終了時に元に戻る（再度壊れる）。この個性はブレイン族のみが取得できる。'],\n            [84, '〈浮遊術〉 キミは［飛行］状態になる。シーン終了時まで。この個性はテンタクル人のみが取得できる。'],\n            [85, '〈瞬間移動術〉 キミは任意のマスに瞬間移動する。この個性はテンタクル人のみが取得できる。'],\n            [86, '〈ハイボルテージ〉 4ラウンドめ以降、キミが持つすべての武器の火力を+2する。'],\n            [87, '〈スライドディフェンス〉 キミが部位決定チャートを振った直後に使用。チャートの結果を+1する。'],\n            [88, '〈カーブアタック〉 目標が部位決定チャートを振った直後に使用。チャートの結果を-1する。'],\n            [89, '〈サイコショット〉 目標に［火力0］の攻撃を行う（自動命中）。（超能力）'],\n            [90, '〈ファイア〉 目標に［火力5］の攻撃を行う。（超能力）'],\n            [91, '〈アイス〉 目標に［火力3］の攻撃を行う。（超能力）'],\n            [92, '〈サンダー〉 目標に［火力2］の攻撃を行う。（超能力）'],\n            [93, '〈テレパシー〉 キミは念話によって会話することができる。（超能力）'],\n            [94, '〈ミラー〉 目標が超能力の使用を宣言した直後に使用。超能力の目標を使用者自身に変更する。（超能力）'],\n            [95, '〈バインド〉 目標のターン開始時に使用。目標の移動力-3。ターン終了時まで。（超能力）'],\n            [96, '〈アーマー〉 目標のすべての部位装甲+2。シーン終了時まで。（超能力）'],\n            [97, '〈バリア〉 目標がダメージを受けた直後に使用。ダメージを3点軽減する。（超能力）'],\n            [98, '〈ヒール〉 目標のHPを［1d10-4］点回復する。出目が低いとHPを失う可能性があることに注意。（超能力）'],\n            [99, '〈カース〉 目標が判定を行った直後に使用。その判定の達成値を-3する。'],\n            [100, '〈リザレクション〉 死んだ目標を生き返らせる。生き返った目標のHPは10になる。このシーンの間に死亡したキャラクターのみ目標にできる。（超能力）'],\n          ]\n        )\n      }.freeze\n\n      register_prefix('GR', '[CEFAL]D[CT]', 'GHA', TABLES.keys)\n    end\n  end\nend\n"], :names=>["<main>", "self", "require", "<module:BCDice>", "<module:GameSystem>", "<class:Garako>", "initialize", "command", "@sides_implicit_d", "10", "eval_game_system_specific_command", "$ret_or_1", "$ret_or_2", "$ret_or_3", "roll_tables", "TABLES", "roll_gr", "roll_damage_chart", "roll_attack_hit", "private", "parser", "Command::Parser", "Command", "new", "round_type", "enable_fumble", "restrict_cmp_op_to", "cmd", "parse", "modify_number", "0", "auto_failure_number", "fumble", "1", "target_number", "dice", "@randomizer", "roll_once", "total", "+", "result", "<=", ">=", "formated_modifier", "Format", "modifier", "2", "formated_auto_failure", "format_target", "sequence", "to_s", "compact", "join", "m", "match", "ArithmeticEvaluator", "eval", "[]", "attack", "hit_text", ">", "hit", "roll", "hit_dice", "value", "body", "chart", "DAMAGE_CHARTS", "damage", "clamp", "-", "freeze", "DiceTable::Table", "DiceTable", "DiceTable::RangeTable", "5", "6", "11", "15", "16", "20", "21", "25", "26", "30", "31", "35", "36", "40", "41", "45", "46", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "register_prefix", "keys", "Base"], :mappings=>"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"}}]}
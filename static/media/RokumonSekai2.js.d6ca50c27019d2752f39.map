{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/RokumonSekai2.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class RokumonSekai2 < Base\n      # ゲームシステムの識別子\n      ID = 'RokumonSekai2'\n\n      # ゲームシステム名\n      NAME = '六門世界RPG セカンドエディション'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'ろくもんせかいRPG2'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・判定\n        aRSm<=t\n        能力値a,修正値m,目標値tで判定ロールを行います。\n        Rコマンド(3R6m<=t[a])に読み替えます。\n        成功度、評価、ボーナスダイスを自動表示します。\n        　例) 3RS+1<=9　3R6+1<=9[3]\n      INFO_MESSAGE_TEXT\n\n      register_prefix('\\d+RS', '3R6')\n\n      def initialize(command)\n        super(command)\n\n        @sort_add_dice = true\n      end\n\n      def replace_text(string)\n        string = string.gsub(/(\\d+)RS([+-][+\\-\\d]+)<=(\\d+)/i) { \"3R6\#{Regexp.last_match(2)}<=\#{Regexp.last_match(3)}[\#{Regexp.last_match(1)}]\" }\n        string = string.gsub(/(\\d+)RS<=(\\d+)/i) { \"3R6<=\#{Regexp.last_match(2)}[\#{Regexp.last_match(1)}]\" }\n\n        return string\n      end\n\n      def eval_game_system_specific_command(string)\n        string = replace_text(string)\n        unless /3R6([+\\-\\d]*)<=(\\d+)\\[(\\d+)\\]/i =~ string\n          return nil\n        end\n\n        modText = Regexp.last_match(1)\n        target = Regexp.last_match(2).to_i\n        abl = Regexp.last_match(3).to_i\n\n        mod = 0\n        if modText\n          mod = ArithmeticEvaluator.eval(modText)\n        end\n\n        dstr, suc, sum = rokumon2_roll(mod, target, abl)\n        output = \"\#{sum}[\#{dstr}] ＞ \#{suc} ＞ 評価\#{rokumon2_suc_rank(suc)}\"\n\n        if suc != 0\n          output += \"(+\#{suc}d6)\"\n        end\n\n        output = \"(\#{string}) ＞ \#{output}\"\n\n        return output\n      end\n\n      def rokumon2_roll(mod, target, abl)\n        suc = 0\n\n        dice = @randomizer.roll_barabara(3 + mod.abs, 6).sort\n        dicestr = dice.join(\",\")\n\n        mod.abs.times do |_i|\n          if mod < 0\n            dice.shift\n          else\n            dice.pop\n          end\n        end\n\n        cnt5 = 0\n        cnt2 = 0\n        sum = 0\n\n        dice.each do |die1|\n          cnt5 += 1 if die1 >= 5\n          cnt2 += 1 if die1 <= 2\n          suc += 1  if die1 <= abl\n          sum += die1\n        end\n\n        if sum < target\n          suc += 2\n        elsif sum == target\n          suc += 1\n        end\n\n        suc = 0 if cnt5 >= 3\n        suc = 5 if cnt2 >= 3\n\n        return dicestr, suc, sum\n      end\n\n      def rokumon2_suc_rank(suc)\n        suc_rank = ['E', 'D', 'C', 'B', 'A', 'S']\n        return suc_rank[suc]\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:RokumonSekai2>", "self", "register_prefix", "initialize", "command", "@sort_add_dice", "replace_text", "string", "gsub", "block in replace_text", "block (2 levels) in replace_text", "Regexp", "last_match", "2", "3", "1", "eval_game_system_specific_command", "=~", "modText", "target", "to_i", "abl", "mod", "0", "ArithmeticEvaluator", "eval", "rokumon2_roll", "dstr", "suc", "sum", "output", "rokumon2_suc_rank", "+", "dice", "@randomizer", "roll_barabara", "abs", "6", "sort", "dicestr", "join", "times", "block in rokumon2_roll", "_i", "<", "block (2 levels) in rokumon2_roll", "shift", "pop", "cnt5", "cnt2", "each", "die1", ">=", "5", "<=", "suc_rank", "[]", "Base"], :mappings=>"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"}}]}
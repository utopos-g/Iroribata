{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/GeishaGirlwithKatana.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class GeishaGirlwithKatana < Base\n      # ゲームシステムの識別子\n      ID = 'GeishaGirlwithKatana'\n\n      # ゲームシステム名\n      NAME = 'ゲイシャ・ガール・ウィズ・カタナ'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'けいしやかあるういすかたな'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・判定 (GK#n)\n          役やチョムバを含めて1回分のダイスロールを判定します。\n        　役は　（通常判定）／（戦闘時）　の順で両方出力されます。\n          GK のみの場合5%の確率でチョムバます。\n          GK#3 の様に #n をつけることによってチョムバの確率をn%にすることができます。\n        　例）GK　GK#10\n        ・隠しコマンド (GL)\n          必ずチョムバします。GMが空気を読んでチョムバさせたいときや、\n          GKコマンドを打ち間違えてチョムバするを想定してます。\n        　例）GL\n      MESSAGETEXT\n\n      register_prefix('GK', 'GL')\n\n      def eval_game_system_specific_command(command)\n        output = nil\n\n        if /^GL$/i =~ command\n          return getChombaResultText()\n        end\n\n        unless /^GK(#(\\d+))?$/i =~ command\n          return output\n        end\n\n        chomba_counter = Regexp.last_match(2)\n\n        if isChomba(chomba_counter)\n          return getChombaResultText()\n        end\n\n        diceList = @randomizer.roll_barabara(3, 6).sort\n\n        yakuResult = getYaku(diceList)\n        unless yakuResult.nil?\n          return getResultTextByDice(diceList, \"【役】\#{yakuResult}\")\n        end\n\n        deme, zorome = getDemeZorome(diceList)\n        if deme == 0\n          return getResultTextByDice(diceList, \"失敗\")\n        end\n\n        yp = (zorome == 1 ? \" YPが1増加\" : \"\")\n        output = getResultTextByDice(diceList, \"達成値\#{deme}\#{yp}\")\n        debug(\"getGGwKResult(command) result\", output)\n\n        return output\n      end\n\n      def isChomba(chomba_counter)\n        chomba_counter ||= 5\n        chomba_counter = chomba_counter.to_i\n\n        chomba = @randomizer.roll_once(100)\n\n        return (chomba <= chomba_counter)\n      end\n\n      def getChombaResultText()\n        getResultText(\"チョムバ！！\")\n      end\n\n      def getYaku(diceList)\n        rule = {\n          [1, 2, 3] => \"自動失敗／自分の装甲効果無しでダメージを受けてしまう\",\n          [4, 5, 6] => \"自動成功／敵の装甲を無視してダメージを与える\",\n          [1, 1, 1] => \"10倍成功 YPが10増加／10倍ダメージ YPが10増加\",\n          [2, 2, 2] => \"2倍成功／2倍ダメージ\",\n          [3, 3, 3] => \"3倍成功／3倍ダメージ\",\n          [4, 4, 4] => \"4倍成功／4倍ダメージ\",\n          [5, 5, 5] => \"5倍成功／5倍ダメージ\",\n          [6, 6, 6] => \"6倍成功／6倍ダメージ\",\n        }\n\n        yaku = rule[diceList]\n        return yaku\n      end\n\n      def getDemeZorome(diceList)\n        deme = 0\n        zorome = 0\n\n        if diceList[0] == diceList[1]\n          deme = diceList[2]\n          zorome = diceList[0]\n        elsif diceList[1] == diceList[2]\n          deme = diceList[0]\n          zorome = diceList[1]\n        end\n\n        return deme, zorome\n      end\n\n      def getResultTextByDice(diceList, result)\n        getResultText(\"\#{diceList.join(',')} ＞ \#{result}\")\n      end\n\n      def getResultText(result)\n        \"(3B6) ＞ \#{result}\"\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:GeishaGirlwithKatana>", "self", "register_prefix", "eval_game_system_specific_command", "command", "output", "=~", "getChombaResultText", "chomba_counter", "Regexp", "last_match", "2", "isChomba", "diceList", "@randomizer", "roll_barabara", "3", "6", "sort", "yakuResult", "getYaku", "nil?", "getResultTextByDice", "getDemeZorome", "deme", "zorome", "0", "yp", "1", "debug", "$ret_or_1", "5", "to_i", "chomba", "roll_once", "100", "<=", "getResultText", "rule", "4", "yaku", "[]", "result", "join", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAEE,8BAAKA,sBAAL;QAGA,gCAAOA,kBAAP;QAGA,oCAAWA,eAAX;QAGA,wCACNA,cADqB,GAErBA,iCAFqB,GAGrBA,iCAHqB,GAIrBA,2BAJqB,GAKrBA,iDALqB,GAMrBA,eANqB,GAOrBA,gBAPqB,GAQrBA,qCARqB,GASrBA,iCATqB,GAUrBA,SAVM;QAaAC,IAAAC,iBAAAA,CAAgBF,IAAhB,EAAsBA,IAAtBE;;AAEAC,QAAAA,iDAAAA,6CAAsCC,OAAtCD;AAAAA,UAAAA;;;UACEE,SAAS;UAET,IAAA,QAAG,OAAQC,OAAAA,CAAGF,OAAHE,CAAX,CAAA;YACE,OAAOL,IAAAM,qBAAAA,CAAAA;UADT;UAIA,KAAA,QAAO,gBAAiBD,OAAAA,CAAGF,OAAHE,CAAxB,CAAA;YACE,OAAOD;UADT;UAIAG,iBAAiBC,YAAMC,YAAAA,CAAYC,CAAZD;UAEvB,IAAA,QAAGT,IAAAW,UAAAA,CAASJ,cAATI,CAAH,CAAA;YACE,OAAOX,IAAAM,qBAAAA,CAAAA;UADT;UAIAM,WAAWC,eAAWC,eAAAA,CAAeC,CAA1B,EAA6BC,CAAlBF,CAAoBG,MAAAA,CAAAA;UAE1CC,aAAalB,IAAAmB,SAAAA,CAAQP,QAARO;UACb,KAAA,QAAOD,UAAUE,SAAAA,CAAAA,CAAjB,CAAA;YACE,OAAOpB,IAAAqB,qBAAAA,CAAoBT,QAApB,EAA+BV,KAAD,GAAA,CAAMgB,UAAN,CAA9BG;UADT;UAIA,KAAerB,IAAAsB,eAAAA,CAAcV,QAAdU,CAAf,kBAAA,EAAAC,CAAAA,OAAA,6BAAAA,CAAA,EAAMC,CAAAA,SAAN,6BAAMA,CAAN;UACA,IAAA,MAAGD,IAAH,EAAWE,CAAX,CAAA;YACE,OAAOzB,IAAAqB,qBAAAA,CAAoBT,QAApB,EAA8BV,IAA9BmB;UADT;UAIAK,KAAM,CAAA,MAAAF,MAAA,EAAUG,CAAV,CAAA,GAAA,CAAczB,SAAd,IAAA,CAA0BA,EAA1B,CAAA;UACNE,SAASJ,IAAAqB,qBAAAA,CAAoBT,QAApB,EAA+BV,KAAD,GAAA,CAAMqB,IAAN,CAAA,GAAA,CAAaG,EAAb,CAA9BL;UACTrB,IAAA4B,OAAAA,CAAM1B,+BAAN,EAAuCE,MAAvCwB;UAEA,OAAOxB;QAjCTF,CAAAA;;AAoCAS,QAAAA,wBAAAA,oBAAaJ,cAAbI;AAAAA,UAAAA;;;UACEJ,iBAnER,CAAA,QAAAsB,CAAAA,YAmEQtB,cAnERsB,CAAA,CAAA,GAAA,CAAA,SAAA,IAAA,CAmE2BC,CAnE3B,CAAA;UAoEQvB,iBAAiBA,cAAcwB,MAAAA,CAAAA;UAE/BC,SAASnB,eAAWoB,WAAAA,CAAWC,GAAXD;UAEpB,OAAeE,OAAPH,MAAOG,EAAG5B,cAAH4B;QANjBxB,CAAAA;;AASAL,QAAAA,mCAAAA,+BAAAA;AAAAA,UAAAA;;UACEA,OAAAN,IAAAoC,eAAAA,CAAc9B,QAAd8B;QADF9B,CAAAA;;AAIAa,QAAAA,uBAAAA,mBAAYP,QAAZO;AAAAA,UAAAA;;;UACEkB,OAAO,MACL,CAACV,CAAD,EAAIjB,CAAJ,EAAOK,CAAP,CADK,EACQI,4BADR,EAEL,CAACmB,CAAD,EAAIR,CAAJ,EAAOd,CAAP,CAFK,EAEQG,wBAFR,EAGL,CAACQ,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAHK,EAGQR,+BAHR,EAIL,CAACT,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAJK,EAIQS,aAJR,EAKL,CAACJ,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CALK,EAKQI,aALR,EAML,CAACmB,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CANK,EAMQnB,aANR,EAOL,CAACW,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAPK,EAOQX,aAPR,EAQL,CAACH,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CARK,EAQQG,aARR;UAWPoB,OAAOF,IAAIG,OAAAA,CAAC5B,QAAD4B;UACX,OAAOD;QAbTpB,CAAAA;;AAgBAG,QAAAA,6BAAAA,yBAAkBV,QAAlBU;AAAAA,UAAAA;;;UACEC,OAAOE;UACPD,SAASC;UAET,IAAA,MAAGb,QAAQ4B,OAAAA,CAACf,CAADe,CAAX,EAAkB5B,QAAQ4B,OAAAA,CAACb,CAADa,CAA1B,CAAA;;YACEjB,OAAOX,QAAQ4B,OAAAA,CAAC9B,CAAD8B;YACfhB,SAASZ,QAAQ4B,OAAAA,CAACf,CAADe;UAFnB,OAGA,IAAA,MAAM5B,QAAQ4B,OAAAA,CAACb,CAADa,CAAd,EAAqB5B,QAAQ4B,OAAAA,CAAC9B,CAAD8B,CAA7B,CAAA;;YACEjB,OAAOX,QAAQ4B,OAAAA,CAACf,CAADe;YACfhB,SAASZ,QAAQ4B,OAAAA,CAACb,CAADa;UAFnB;UAKA,OAAA,CAAOjB,IAAP,EAAaC,MAAb;QAZFF,CAAAA;;AAeAD,QAAAA,mCAAAA,+BAAwBT,QAAD,EAAW6B,MAAlCpB;AAAAA,UAAAA;;UACEA,OAAArB,IAAAoC,eAAAA,CAAc,EAAA,GAAA,CAAGxB,QAAQ8B,MAAAA,CAAMrB,GAANqB,CAAX,CAAA,GAAsBrB,KAAtB,GAAA,CAA2BoB,MAA3B,CAAdL;QADFf,CAAAA;QAIAtB,OAAAqC,6BAAAA,yBAAkBK,MAAlBL;AAAAA;UACEA,OAACA,UAAD,GAAA,CAAWK,MAAX;QADFL,CAAAA;MA9GFrC,GAAAA,WAAAA,EAA6B4C,UAA7B5C;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
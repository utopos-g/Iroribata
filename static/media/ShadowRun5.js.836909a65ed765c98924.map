{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/ShadowRun4.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class ShadowRun4 < Base\n      # ゲームシステムの識別子\n      ID = 'ShadowRun4'\n\n      # ゲームシステム名\n      NAME = 'シャドウラン 4th Edition'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'しやとうらん4'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        個数振り足しロール(xRn)の境界値を6にセット、バラバラロール(xBn)の目標値を5以上にセットします。\n        BコマンドとRコマンド時に、グリッチの表示を行います。\n      INFO_MESSAGE_TEXT\n\n      def initialize(command)\n        super(command)\n        @sort_add_dice = true\n        @sort_barabara_dice = true\n        @reroll_dice_reroll_threshold = 6 # RerollDiceで振り足しをする出目の閾値\n\n        @default_cmp_op = :>=\n        @default_target_number = 5\n      end\n\n      # シャドウラン4版用グリッチ判定\n      def grich_text(numberSpot1, dice_cnt_total, successCount)\n        dice_cnt_total_half = (1.0 * dice_cnt_total / 2)\n        debug(\"dice_cnt_total_half\", dice_cnt_total_half)\n\n        unless numberSpot1 >= dice_cnt_total_half\n          return nil\n        end\n\n        # グリッチ！\n        if successCount == 0\n          'クリティカルグリッチ'\n        else\n          'グリッチ'\n        end\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:GameSystem>", "<class:ShadowRun4>", "initialize", "command", "self", "@sort_add_dice", "@sort_barabara_dice", "@reroll_dice_reroll_threshold", "6", "@default_cmp_op", "@default_target_number", "5", "grich_text", "numberSpot1", "dice_cnt_total", "successCount", "dice_cnt_total_half", "/", "*", "2", "debug", ">=", "0", "Base"], :mappings=>"AAAAA,gDAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;;QAEE,8BAAKA,YAAL;QAGA,gCAAOA,oBAAP;QAGA,oCAAWA,SAAX;QAGA,wCACNA,yDADqB,GAErBA,+BAFM;;AAKAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAE,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMD,OAAN,CAAA,EAAA,IAAA;UACAE,qBAAiB;UACjBC,0BAAsB;UACtBC,oCAAgCC;UAEhCC,sBAAkB;UAClBP,OAAAQ,CAAAA,6BAAyBC,CAAzBD;QAPFR,CAAAA;QAWAD,OAAAW,0BAAAA,sBAAeC,WAAD,EAAcC,cAAd,EAA8BC,YAA5CH;AAAAA,UAAAA;;;UACEI,sBAA4CC,WAAjBC,UAAJ,GAAIA,EAAEJ,cAAFI,CAAiBD,EAAEE,CAAFF;UAC5Cb,IAAAgB,OAAAA,CAAMR,qBAAN,EAA6BI,mBAA7BI;UAEA,KAAA,QAAmBC,OAAZR,WAAYQ,EAAGL,mBAAHK,CAAnB,CAAA;YACE,OAAO;UADT;UAKA,IAAA,MAAGN,YAAH,EAAmBO,CAAnB,CAAA;YACEV,OAAAA;UADF;YAGEA,OAAAA;UAHF;QATFA,CAAAA;MA3BFX,GAAAA,WAAAA,EAAmBsB,UAAnBtB;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>56, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/ShadowRun5.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nrequire 'bcdice/game_system/ShadowRun4'\n\nmodule BCDice\n  module GameSystem\n    class ShadowRun5 < ShadowRun4\n      # ゲームシステムの識別子\n      ID = 'ShadowRun5'\n\n      # ゲームシステム名\n      NAME = 'シャドウラン 5th Edition'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'しやとうらん5'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        個数振り足しロール(xRn)の境界値を6にセット、バラバラロール(xBn)の目標値を5以上にセットします。\n        バラバラロール(xBn)のみ、リミットをセットできます。リミットの指定は(xBn@l)のように指定します。(省略可)\n        BコマンドとRコマンド時に、グリッチの表示を行います。\n      INFO_MESSAGE_TEXT\n\n      register_prefix('(\\d+)B6@(\\d+)')\n\n      def initialize(command)\n        super(command)\n        @sort_add_dice = true\n        @sort_barabara_dice = true\n        @reroll_dice_reroll_threshold = 6 # RerollDiceで振り足しをする出目の閾値\n\n        @default_cmp_op = :>=\n        @default_target_number = 5\n      end\n\n      # シャドウラン5版　リミット時のテスト\n      def eval_game_system_specific_command(command)\n        debug('chatch limit prefix')\n\n        m = /(\\d+B6)@(\\d+)/.match(command)\n        b_dice = m[1]\n        limit = m[2].to_i\n        output_before_limited = BCDice::CommonCommand::BarabaraDice.eval(b_dice, self, @randomizer).text\n\n        m = /成功数(\\d+)/.match(output_before_limited)\n        output_after_limited = output_before_limited\n        before_suc_cnt = m[1].to_i\n        if before_suc_cnt > limit\n          after_suc_cnt = limit\n          over_suc_cnt = before_suc_cnt - limit\n          output_after_limited = output_before_limited.gsub(/成功数(\\d+)/, \"成功数\#{after_suc_cnt}\")\n          output_after_limited += \"(リミット超過\#{over_suc_cnt})\"\n        end\n\n        output = output_after_limited\n        output = output.gsub('B', 'B6')\n        output = output.gsub('6>=5', \"[6]Limit[\#{limit}]>=5\")\n        debug(output)\n        return output\n      end\n\n      # シャドウラン5版用グリッチ判定\n      def grich_text(numberSpot1, dice_cnt_total, successCount)\n        dice_cnt_total_half = dice_cnt_total.to_f / 2\n        debug(\"dice_cnt_total_half\", dice_cnt_total_half)\n\n        unless numberSpot1 > dice_cnt_total_half\n          return nil\n        end\n\n        # グリッチ！\n        if successCount == 0\n          'クリティカルグリッチ'\n        else\n          'グリッチ'\n        end\n      end\n    end\n  end\nend\n"], :names=>["<main>", "self", "require", "<module:BCDice>", "<module:GameSystem>", "<class:ShadowRun5>", "register_prefix", "initialize", "command", "@sort_add_dice", "@sort_barabara_dice", "@reroll_dice_reroll_threshold", "6", "@default_cmp_op", "@default_target_number", "5", "eval_game_system_specific_command", "debug", "m", "match", "b_dice", "[]", "1", "limit", "2", "to_i", "output_before_limited", "BCDice::CommonCommand::BarabaraDice", "BCDice::CommonCommand", "BCDice", "eval", "@randomizer", "text", "output_after_limited", "before_suc_cnt", ">", "after_suc_cnt", "over_suc_cnt", "-", "gsub", "+", "output", "grich_text", "numberSpot1", "dice_cnt_total", "successCount", "dice_cnt_total_half", "/", "to_f", "0", "ShadowRun4"], :mappings=>"AAAAA,2BAAAA;EAAAA;;;EAEAC,IAAAC,SAAAA,CAAQF,+BAARE;EAEAF,OAAAG;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAEE,8BAAKA,YAAL;QAGA,gCAAOA,oBAAP;QAGA,oCAAWA,SAAX;QAGA,wCACNA,yDADqB,GAErBA,8DAFqB,GAGrBA,+BAHM;QAMAJ,IAAAK,iBAAAA,CAAgBD,iBAAhBC;;AAEAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAN,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMO,OAAN,CAAA,EAAA,IAAA;UACAC,qBAAiB;UACjBC,0BAAsB;UACtBC,oCAAgCC;UAEhCC,sBAAkB;UAClBN,OAAAO,CAAAA,6BAAyBC,CAAzBD;QAPFP,CAAAA;;AAWAS,QAAAA,iDAAAA,6CAAsCR,OAAtCQ,GAAAA,MAAAA,IAAAA,wCAAAA;AAAAA,UAAAA;;;UACEf,IAAAgB,OAAAA,CAAMD,qBAANC;UAEAC,IAAI,eAAeC,OAAAA,CAAOX,OAAPW;UACnBC,SAASF,CAACG,OAAAA,CAACC,CAADD;UACVE,QAAQL,CAACG,OAAAA,CAACG,CAADH,CAAGI,MAAAA,CAAAA;UACZC,wBAAwBC,IAAAC,IAAAC,YAAAD,kBAAAD,iBAAmCG,MAAAA,CAAMV,MAAzC,EAAiDnB,IAAjD,EAAuD8B,eAApBD,CAAgCE,MAAAA,CAAAA;UAE3Fd,IAAI,UAAUC,OAAAA,CAAOO,qBAAPP;UACdc,uBAAuBP;UACvBQ,iBAAiBhB,CAACG,OAAAA,CAACC,CAADD,CAAGI,MAAAA,CAAAA;UACrB,IAAA,QAAkBU,OAAfD,cAAeC,EAAEZ,KAAFY,CAAlB,CAAA;;YACEC,gBAAgBb;YAChBc,eAA8BC,UAAfJ,cAAeI,EAAEf,KAAFe;YAC9BL,uBAAuBP,qBAAqBa,MAAAA,CAAM,UAA3B,EAAwCvB,KAAD,GAAA,CAAMoB,aAAN,CAAlBG;YAC5CN,uBAAqBO,SAArBP,oBAAqBO,EAAIxB,SAAD,GAAA,CAAUqB,YAAV,CAAA,GAAuBrB,GAA1BwB;UAJvB;UAOAC,SAASR;UACTQ,SAASA,MAAMF,MAAAA,CAAMvB,GAAZ,EAAiBA,IAAXuB;UACfE,SAASA,MAAMF,MAAAA,CAAMvB,MAAZ,EAAqBA,WAAD,GAAA,CAAYO,KAAZ,CAAA,GAAkBP,MAAhCuB;UACftC,IAAAgB,OAAAA,CAAMwB,MAANxB;UACA,OAAOwB,OAtBTzB;YAAAA;YAAAA;UAAAA;QAAAA,CAAAA;QA0BAX,OAAAqC,0BAAAA,sBAAeC,WAAD,EAAcC,cAAd,EAA8BC,YAA5CH;AAAAA,UAAAA;;;UACEI,sBAA0CC,WAApBH,cAAcI,MAAAA,CAAAA,CAAMD,EAAEvB,CAAFuB;UAC1C9C,IAAAgB,OAAAA,CAAMyB,qBAAN,EAA6BI,mBAA7B7B;UAEA,KAAA,QAAmBkB,OAAZQ,WAAYR,EAAEW,mBAAFX,CAAnB,CAAA;YACE,OAAO;UADT;UAKA,IAAA,MAAGU,YAAH,EAAmBI,CAAnB,CAAA;YACEP,OAAAA;UADF;YAGEA,OAAAA;UAHF;QATFA,CAAAA;MAxDFrC,GAAAA,WAAAA,EAAmB6C,gBAAnB7C;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAJAH;"}}]}
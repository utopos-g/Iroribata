{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/FateCoreSystem.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class FateCoreSystem < Base\n      # ゲームシステムの識別子\n      ID = 'FateCoreSystem'\n\n      # ゲームシステム名\n      NAME = 'Fate Core System'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'ふえいとこあしすてむ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ■ ファッジダイスによる判定 (xDF+y>=t)\n          ファッジダイスをx個ダイスロールし、結果を判定します。\n          x: ダイス数\n          y: 修正値（省略可）\n          t: 目標値値（省略可）\n          例）4DF, 4DF>=3, 4DF+1>=3\n      MESSAGETEXT\n\n      register_prefix('\\d+DF')\n\n      def eval_game_system_specific_command(command)\n        roll_df(command)\n      end\n\n      private\n\n      def roll_df(command)\n        parser = Command::Parser.new(\"DF\", round_type: @round_type)\n                                .enable_prefix_number()\n                                .restrict_cmp_op_to(:>=, nil)\n\n        parsed = parser.parse(command)\n        unless parsed\n          return nil\n        end\n\n        dice_list = roll_fate_dice(parsed.prefix_number)\n        total = dice_list.sum() + parsed.modify_number\n\n        fate_dice_list = dice_list.map do |i|\n          if i.zero?\n            \"[ ]\"\n          elsif i.positive?\n            \"[+]\"\n          else\n            \"[-]\"\n          end\n        end\n\n        result = outcome(total, parsed.target_number)\n        sequence = [\n          \"(\#{parsed})\",\n          \"\#{fate_dice_list.join()}\#{Format.modifier(parsed.modify_number)}\",\n          result_ladder(total),\n          result.text,\n        ]\n\n        result.text = sequence.compact.join(\" ＞ \")\n        return result\n      end\n\n      def roll_fate_dice(times)\n        @randomizer.roll_barabara(times, 3).map { |i| i - 2 }\n      end\n\n      def result_ladder(total)\n        ladder =\n          case total.clamp(-2, 8)\n          when 8\n            \"Legendary\"\n          when 7\n            \"Epic\"\n          when 6\n            \"Fantastic\"\n          when 5\n            \"Superb\"\n          when 4\n            \"Great\"\n          when 3\n            \"Good\"\n          when 2\n            \"Fair\"\n          when 1\n            \"Average\"\n          when 0\n            \"Mediocre\"\n          when -1\n            \"Poor\"\n          else\n            \"Terrible\"\n          end\n\n        return \"\#{ladder}(\#{format('%+d', total)})\"\n      end\n\n      def outcome(total, target)\n        if target.nil?\n          Result.new\n        elsif total == target\n          Result.success(\"Tie\")\n        elsif total >= target + 3\n          Result.critical(\"Succeed with Style\")\n        elsif total >= target\n          Result.success(\"Succeed\")\n        else\n          Result.failure(\"Fail\")\n        end\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:FateCoreSystem>", "self", "register_prefix", "eval_game_system_specific_command", "command", "roll_df", "private", "parser", "Command::Parser", "Command", "new", "@round_type", "enable_prefix_number", "restrict_cmp_op_to", "parsed", "parse", "dice_list", "roll_fate_dice", "prefix_number", "total", "+", "sum", "modify_number", "fate_dice_list", "map", "block in roll_df", "i", "zero?", "block (2 levels) in roll_df", "positive?", "result", "outcome", "target_number", "sequence", "join", "Format", "modifier", "result_ladder", "text", "text=", "compact", "times", "@randomizer", "roll_barabara", "3", "block in roll_fate_dice", "block (2 levels) in roll_fate_dice", "-", "2", "ladder", "8", "$ret_or_1", "clamp", "-2", "7", "6", "5", "4", "1", "0", "-1", "format", "target", "nil?", "Result", "success", ">=", "critical", "failure", "Base"], :mappings=>"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"}}]}
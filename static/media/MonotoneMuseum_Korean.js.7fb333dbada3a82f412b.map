{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/dice_table/table.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module DiceTable\n    # 表を表すクラス\n    class Table\n      # @param key [String]\n      # @param locale [Symbol]\n      # @return [Table]\n      def self.from_i18n(key, locale)\n        table = I18n.t(key, locale: locale)\n        new(table[:name], table[:type], table[:items])\n      end\n\n      # @param [String] name 表の名前\n      # @param [String] type 項目を選ぶときのダイスロールの方法 '1D6'など\n      # @param [Array<String>] items 表の項目の配列\n      def initialize(name, type, items)\n        @name = name\n        @items = items.freeze\n\n        m = /(\\d+)D(\\d+)/i.match(type)\n        unless m\n          raise ArgumentError, \"Unexpected table type: \#{type}\"\n        end\n\n        @times = m[1].to_i\n        @sides = m[2].to_i\n      end\n\n      # 表を振る\n      # @param [BCDice] bcdice ランダマイザ\n      # @return [String] 結果\n      def roll(bcdice)\n        value = bcdice.roll_sum(@times, @sides)\n        return choice(value)\n      end\n\n      def choice(value)\n        index = value - @times\n        return RollResult.new(@name, value, @items[index])\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:DiceTable>", "<class:Table>", "from_i18n", "self", "key", "locale", "table", "I18n", "t", "new", "[]", "initialize", "name", "type", "items", "@name", "@items", "freeze", "m", "match", "raise", "ArgumentError", "@times", "1", "to_i", "@sides", "2", "roll", "bcdice", "value", "roll_sum", "choice", "index", "-", "RollResult"], :mappings=>"AAAAA,0CAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MAEEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAIEC,MAAIC,IAAJD,gBAAAA,qBAAmBE,GAAD,EAAMC,MAAxBH;AAAAA,UAAAA;;;UACEI,QAAQC,UAAIC,GAAAA,CAAGJ,GAAP,EAAY,oBAAA,UAAQC,MAAR,EAARG;UACZN,OAAAC,IAAAM,KAAAA,CAAIH,KAAKI,OAAAA,CAAC,MAADA,CAAT,EAAkBJ,KAAKI,OAAAA,CAAC,MAADA,CAAvB,EAAgCJ,KAAKI,OAAAA,CAAC,OAADA,CAArCD;QAFFP,CAAAA;;AAQAS,QAAAA,0BAAAA,sBAAeC,IAAD,EAAOC,IAAP,EAAaC,KAA3BH;AAAAA,UAAAA;;;UACEI,YAAQH;UACRI,aAASF,KAAKG,QAAAA,CAAAA;UAEdC,IAAI,cAAcC,OAAAA,CAAON,IAAPM;UAClB,KAAA,QAAOD,CAAP,CAAA;YACEf,IAAAiB,OAAAA,CAAMC,mBAAN,EAAsBV,yBAAD,GAAA,CAA0BE,IAA1B,CAArBO;UADF;UAIAE,aAASJ,CAACR,OAAAA,CAACa,CAADb,CAAGc,MAAAA,CAAAA;UACbb,OAAAc,CAAAA,aAASP,CAACR,OAAAA,CAACgB,CAADhB,CAAGc,MAAAA,CAAAA,CAAbC;QAVFd,CAAAA;;AAgBAgB,QAAAA,oBAAAA,gBAASC,MAATD;AAAAA,UAAAA;;;UACEE,QAAQD,MAAME,UAAAA,CAAUR,UAAhB,EAAwBG,UAAlBK;UACd,OAAO3B,IAAA4B,QAAAA,CAAOF,KAAPE;QAFTJ,CAAAA;QAKA1B,OAAA8B,sBAAAA,kBAAWF,KAAXE;AAAAA,UAAAA;;;UACEC,QAAcC,UAANJ,KAAMI,EAAEX,UAAFW;UACd,OAAOC,gBAAUzB,KAAAA,CAAKM,SAAf,EAAsBc,KAAtB,EAA6Bb,UAAMN,OAAAA,CAACsB,KAADtB,CAAzBD;QAFnBsB,CAAAA;MAjCF9B,GAAAA,WAAAA,EAAAA,IAAAA;IAFFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>61, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/dice_table/d66_range_table.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module DiceTable\n    # 項目をRangeを用いて参照するD66表\n    class D66RangeTable\n      # @param name [String] 表の名前\n      # @param items [Array<(Range, String)>] 表の項目の配列\n      def initialize(name, items)\n        @name = name\n        @items = items.freeze\n      end\n\n      # 表を振る\n      # @param randomizer [#roll_once] ランダマイザ\n      # @return [String] 結果\n      def roll(randomizer)\n        dice1 = randomizer.roll_once(6)\n        dice2 = randomizer.roll_once(6)\n\n        key = dice1 * 10 + dice2\n\n        chosen = @items.find { |row| row[0].include?(key) }\n        return RollResult.new(@name, key, chosen[1])\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:DiceTable>", "<class:D66RangeTable>", "initialize", "name", "items", "@name", "@items", "freeze", "roll", "randomizer", "dice1", "roll_once", "6", "dice2", "key", "+", "*", "10", "chosen", "find", "block in roll", "row", "block (2 levels) in roll", "[]", "0", "include?", "RollResult", "new", "1"], :mappings=>"AAAAA,oDAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MAEEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;;AAGEC,QAAAA,0BAAAA,sBAAeC,IAAD,EAAOC,KAArBF;AAAAA,UAAAA;;;UACEG,YAAQF;UACRD,OAAAI,CAAAA,aAASF,KAAKG,QAAAA,CAAAA,CAAdD;QAFFJ,CAAAA;QAQAD,OAAAO,oBAAAA,gBAASC,UAATD;AAAAA,UAAAA;;;UACEE,QAAQD,UAAUE,WAAAA,CAAWC,CAAXD;UAClBE,QAAQJ,UAAUE,WAAAA,CAAWC,CAAXD;UAElBG,MAAiBC,SAALC,UAANN,KAAMM,EAAEC,EAAFD,CAAKD,EAAEF,KAAFE;UAEjBG,SAAeC,MAANb,UAAMa,QAAAA,EAAAA,EAAAA,EAANC,aAAeC,GAAfD;;YAAe;YAAKE,OAAAD,GAAGE,OAAAA,CAACC,CAADD,CAAGE,aAAAA,CAAUX,GAAVW,EAA1BL,CAAMD;UACf,OAAOO,gBAAUC,KAAAA,CAAKtB,SAAf,EAAsBS,GAAtB,EAA2BI,MAAMK,OAAAA,CAACK,CAADL,CAAvBI;QAPnBnB,CAAAA;MAXFP,GAAAA,WAAAA,EAAAA,IAAAA;IAFFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>107, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/dice_table/d66_grid_table.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module DiceTable\n    # D66を振って6x6マスの表を参照する\n    class D66GridTable\n      # @param key [String]\n      # @param locale [Symbol]\n      # @return [D66GridTable]\n      def self.from_i18n(key, locale)\n        table = I18n.t(key, locale: locale, raise: true)\n        new(table[:name], table[:items])\n      end\n\n      # @param [String] name 表の名前\n      # @param [Array<Array<String>>] items 表の項目の配列\n      def initialize(name, items)\n        @name = name\n        @items = items.freeze\n      end\n\n      # 表を振る\n      # @param randomizer [#roll_once] ランダマイザ\n      # @return [String] 結果\n      def roll(randomizer)\n        dice1 = randomizer.roll_once(6)\n        dice2 = randomizer.roll_once(6)\n        value = dice1 * 10 + dice2\n\n        index1 = dice1 - 1\n        index2 = dice2 - 1\n        return RollResult.new(@name, value, @items[index1][index2])\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:DiceTable>", "<class:D66GridTable>", "from_i18n", "self", "key", "locale", "table", "I18n", "t", "new", "[]", "initialize", "name", "items", "@name", "@items", "freeze", "roll", "randomizer", "dice1", "roll_once", "6", "dice2", "value", "+", "*", "10", "index1", "-", "1", "index2", "RollResult"], :mappings=>"AAAAA,mDAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MAEEA,OAAAC;MAAAA;;QAAAA;;AAAAA;;QAIEC,MAAIC,IAAJD,gBAAAA,qBAAmBE,GAAD,EAAMC,MAAxBH;AAAAA,UAAAA;;;UACEI,QAAQC,UAAIC,GAAAA,CAAGJ,GAAP,EAAY,6BAAA,UAAQC,MAAR,EAAA,SAAuB,IAAvB,EAARG;UACZN,OAAAC,IAAAM,KAAAA,CAAIH,KAAKI,OAAAA,CAAC,MAADA,CAAT,EAAkBJ,KAAKI,OAAAA,CAAC,OAADA,CAAvBD;QAFFP,CAAAA;;AAOAS,QAAAA,0BAAAA,sBAAeC,IAAD,EAAOC,KAArBF;AAAAA,UAAAA;;;UACEG,YAAQF;UACRD,OAAAI,CAAAA,aAASF,KAAKG,QAAAA,CAAAA,CAAdD;QAFFJ,CAAAA;QAQAV,OAAAgB,oBAAAA,gBAASC,UAATD;AAAAA,UAAAA;;;UACEE,QAAQD,UAAUE,WAAAA,CAAWC,CAAXD;UAClBE,QAAQJ,UAAUE,WAAAA,CAAWC,CAAXD;UAClBG,QAAmBC,SAALC,UAANN,KAAMM,EAAEC,EAAFD,CAAKD,EAAEF,KAAFE;UAEnBG,SAAeC,UAANT,KAAMS,EAAEC,CAAFD;UACfE,SAAeF,UAANN,KAAMM,EAAEC,CAAFD;UACf,OAAOG,gBAAUtB,KAAAA,CAAKK,SAAf,EAAsBS,KAAtB,EAA6BR,UAAML,OAAAA,CAACiB,MAADjB,CAAQA,OAAAA,CAACoB,MAADpB,CAAjCD;QAPnBQ,CAAAA;MAnBFhB,GAAAA,WAAAA,EAAAA,IAAAA;IAFFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>158, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/format.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module Format\n    module_function\n\n    # 比較演算子を文字列表記にする\n    #\n    # @param op [Symbol]\n    # @return [String, nil]\n    def comparison_operator(op)\n      case op\n      when :==\n        \"=\"\n      when :'!='\n        \"<>\"\n      when Symbol\n        op.to_s\n      end\n    end\n\n    # 修正値を文字列表記にする\n    #\n    # @param number [Integer, nil]\n    # @return [String]\n    def modifier(number)\n      if number.nil?\n        nil\n      elsif number == 0\n        \"\"\n      elsif number > 0\n        \"+\#{number}\"\n      else\n        number.to_s\n      end\n    end\n  end\nend\n"], :names=>["<top (required)>", "<module:BCDice>", "<module:Format>", "self", "module_function", "comparison_operator", "op", "$ret_or_1", "Symbol", "to_s", "modifier", "number", "nil?", "0", ">"], :mappings=>"AAAAA,gCAAAA,gBAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;;MACEC,IAAAC,iBAAAA,CAAAA;;AAMAC,MAAAA,mCAAAA,+BAAwBC,EAAxBD;AAAAA,QAAAA;;QAEE,IAAA,QAAK,IAAL,EADAE,CAAAA,YAAKD,EAALC,CACA,CAAA;UACEF,OAAAA;QADF,OAEA,IAAA,QAAK,IAAL,EAdN,SAcM,CAAA;UACEA,OAAAA;QADF,OAEA,IAAA,QAAKG,YAAL,EAhBN,SAgBM,CAAA;UACEH,OAAAC,EAAEG,MAAAA,CAAAA;QADJ;UALAJ,OAAA;QAKA;MANFA,CAAAA;MAeAH,OAAAQ,wBAAAA,oBAAaC,MAAbD;AAAAA;QACE,IAAA,QAAGC,MAAMC,SAAAA,CAAAA,CAAT,CAAA;UACEF,OAAA;QADF,OAEA,IAAA,MAAMC,MAAN,EAAgBE,CAAhB,CAAA;UACEH,OAAAA;QADF,OAEA,IAAA,QAAaI,OAAPH,MAAOG,EAAED,CAAFC,CAAb,CAAA;UACEJ,OAACA,GAAD,GAAA,CAAIC,MAAJ;QADF;UAGED,OAAAC,MAAMF,MAAAA,CAAAA;QAHR;MALFC,CAAAA;IAtBFR,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}, {:offset=>{:line=>203, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/MonotoneMuseum.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nrequire 'bcdice/dice_table/table'\nrequire 'bcdice/dice_table/d66_range_table'\nrequire 'bcdice/dice_table/d66_grid_table'\nrequire 'bcdice/format'\n\nmodule BCDice\n  module GameSystem\n    class MonotoneMuseum < Base\n      # ゲームシステムの識別子\n      ID = 'MonotoneMuseum'\n\n      # ゲームシステム名\n      NAME = 'モノトーンミュージアムRPG'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'ものとおんみゆうしあむRPG'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・判定\n        　・通常判定　　　　　　2D6+m>=t[c,f]\n        　　修正値m,目標値t,クリティカル値c,ファンブル値fで判定ロールを行います。\n        　　クリティカル値、ファンブル値は省略可能です。([]ごと省略できます)\n        　　自動成功、自動失敗、成功、失敗を自動表示します。\n        ・各種表\n        【改訂版環境】\n        　・感情表　MET\n        　・兆候表（戦闘時）　MBOT／兆候表（非戦闘時）　MNOT\n        　・歪み表　MDT\n        　・世界歪曲表　MWDT\n        　・永劫消失表　MEDT\n        【旧版環境】\n        　・感情表　ET／感情表 2.0　ET2\n        　・兆候表　OT／兆候表ver2.0　OT2／兆候表ver3.0　OT3\n        　・歪み表　DT／歪み表ver2.0　DT2／歪み表（野外）　DTO／歪み表（海）　DTS／歪み表（館・城）　DTM\n        　・世界歪曲表　WDT／世界歪曲表2.0　WDT2\n        　・永劫消失表　EDT\n        ・D66ダイスあり\n      INFO_MESSAGE_TEXT\n\n      # ダイスボットを初期化する\n      def initialize(command)\n        super(command)\n\n        # 式、出目ともに送信する\n\n        # D66ダイスあり（出目をソートしない）\n        @d66_sort_type = D66SortType::NO_SORT\n        # バラバラロール（Bコマンド）でソートする\n        @sort_add_dice = true\n      end\n\n      # 固有のダイスロールコマンドを実行する\n      # @param [String] command 入力されたコマンド\n      # @return [String, nil] ダイスロールコマンドの実行結果\n      def eval_game_system_specific_command(command)\n        if (ret = check_roll(command))\n          return ret\n        end\n\n        return roll_tables(command, self.class::TABLES)\n      end\n\n      private\n\n      def check_roll(command)\n        m = /^(\\d+)D6([+\\-\\d]*)>=(\\?|\\d+)(\\[(\\d+)?(,(\\d+))?\\])?$/i.match(command)\n        unless m\n          return nil\n        end\n\n        dice_count = m[1].to_i\n        modify_number = m[2] ? ArithmeticEvaluator.eval(m[2]) : 0\n        target = m[3].to_i\n        critical = m[5]&.to_i || 12\n        fumble = m[7]&.to_i || 2\n\n        dice_list = @randomizer.roll_barabara(dice_count, 6).sort\n        dice_value = dice_list.sum()\n        dice_str = dice_list.join(\",\")\n        total = dice_value + modify_number\n\n        result =\n          if dice_value <= fumble\n            Result.fumble(translate(\"MonotoneMuseum.automatic_failure\"))\n          elsif dice_value >= critical\n            Result.critical(translate(\"MonotoneMuseum.automatic_success\"))\n          elsif target == 0\n            Result.success(nil)\n          elsif total >= target\n            Result.success(translate(\"success\"))\n          else\n            Result.failure(translate(\"failure\"))\n          end\n\n        sequence = [\n          \"(\#{command})\",\n          \"\#{dice_value}[\#{dice_str}]\#{Format.modifier(modify_number)}\",\n          total.to_s,\n          result.text,\n        ].compact\n\n        result.text = sequence.join(\" ＞ \")\n\n        result\n      end\n\n      # モノトーンミュージアム用のテーブル\n      # D66を振って決定する\n      # 1項目あたり出目2つに対応する\n      class MMTable < DiceTable::D66RangeTable\n        # @param key [String]\n        # @param locale [Symbol]\n        # @return [MMTable]\n        def self.from_i18n(key, locale)\n          table = I18n.translate(key, locale: locale, raise: true)\n          new(table[:name], table[:items])\n        end\n\n        # @param name [String]\n        # @param items [Array<String>]\n        def initialize(name, items)\n          if items.size != RANGE.size\n            raise UnexpectedTableSize.new(name, items.size)\n          end\n\n          items_with_range = RANGE.zip(items)\n\n          super(name, items_with_range)\n        end\n\n        # 1項目あたり2個\n        RANGE = [11..12, 13..14, 15..16, 21..22, 23..24, 25..26, 31..32, 33..34, 35..36, 41..42, 43..44, 45..46, 51..52, 53..54, 55..56, 61..62, 63..64, 65..66].freeze\n      end\n\n      class << self\n        private\n\n        def translate_tables(locale)\n          {\n            \"ET\" => DiceTable::D66GridTable.from_i18n(\"MonotoneMuseum.table.ET\", locale),\n            \"ET2\" => DiceTable::D66GridTable.from_i18n(\"MonotoneMuseum.table.ET2\", locale),\n            \"OT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.OT\", locale),\n            \"DT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.DT\", locale),\n            \"DT2\" => MMTable.from_i18n(\"MonotoneMuseum.table.DT2\", locale),\n            \"WDT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.WDT\", locale),\n            \"WDT2\" => MMTable.from_i18n(\"MonotoneMuseum.table.WDT2\", locale),\n            \"OT2\" => MMTable.from_i18n(\"MonotoneMuseum.table.OT2\", locale),\n            \"DTO\" => MMTable.from_i18n(\"MonotoneMuseum.table.DTO\", locale),\n            \"DTS\" => MMTable.from_i18n(\"MonotoneMuseum.table.DTS\", locale),\n            \"EDT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.EDT\", locale),\n            \"DTM\" => MMTable.from_i18n(\"MonotoneMuseum.table.DTM\", locale),\n            \"OT3\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.OT3\", locale),\n            \"MET\" => DiceTable::D66GridTable.from_i18n(\"MonotoneMuseum.table.MET\", locale),\n            \"MBOT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.MBOT\", locale),\n            \"MNOT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.MNOT\", locale),\n            \"MDT\" => MMTable.from_i18n(\"MonotoneMuseum.table.MDT\", locale),\n            \"MWDT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.MWDT\", locale),\n            \"MEDT\" => DiceTable::Table.from_i18n(\"MonotoneMuseum.table.MEDT\", locale),\n          }\n        end\n      end\n\n      TABLES = translate_tables(:ja_jp).freeze\n\n      register_prefix('\\d+D6', TABLES.keys)\n    end\n  end\nend\n"], :names=>["<top (required)>", "self", "require", "<module:BCDice>", "<module:GameSystem>", "<class:MonotoneMuseum>", "initialize", "command", "@d66_sort_type", "D66SortType::NO_SORT", "D66SortType", "@sort_add_dice", "eval_game_system_specific_command", "ret", "check_roll", "roll_tables", "class::TABLES", "class", "private", "m", "match", "dice_count", "[]", "1", "to_i", "modify_number", "2", "ArithmeticEvaluator", "eval", "0", "target", "3", "critical", "$ret_or_1", "5", "12", "fumble", "7", "dice_list", "@randomizer", "roll_barabara", "6", "sort", "dice_value", "sum", "dice_str", "join", "total", "+", "result", "<=", "Result", "translate", ">=", "success", "failure", "sequence", "Format", "modifier", "to_s", "text", "compact", "text=", "<class:MMTable>", "from_i18n", "key", "locale", "table", "I18n", "new", "name", "items", "size", "RANGE", "raise", "UnexpectedTableSize", "items_with_range", "zip", "11", "13", "14", "15", "16", "21", "22", "23", "24", "25", "26", "31", "32", "33", "34", "35", "36", "41", "42", "43", "44", "45", "46", "51", "52", "53", "54", "55", "56", "61", "62", "63", "64", "65", "66", "freeze", "DiceTable::D66RangeTable", "DiceTable", "translate_tables", "DiceTable::D66GridTable", "DiceTable::Table", "MMTable", "register_prefix", "TABLES", "keys", "Base"], :mappings=>"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"}}, {:offset=>{:line=>323, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/MonotoneMuseum_Korean.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nrequire \"bcdice/game_system/MonotoneMuseum\"\n\nmodule BCDice\n  module GameSystem\n    class MonotoneMuseum_Korean < MonotoneMuseum\n      # ゲームシステムの識別子\n      ID = 'MonotoneMuseum:Korean'\n\n      # ゲームシステム名\n      NAME = '모노톤 뮤지엄'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = '国際化:Korean:모노톤 뮤지엄'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・판정\n        　・통상판정　　　　　　2D6+m>=t[c,f]\n        　　수정치m,목표치t,크리티컬치c,펌블치f로 판정 굴림을 행합니다.\n        　　크리티컬, 펌블치는 생략가능합니다. ([]자체를 생략가능)\n        　　자동성공, 자동실패, 성공, 실패를 자동표기합니다.\n        ・각종표\n        　・감정표　ET／감정표 2.0　ET2\n        　・징조표　OT／징조표ver2.0　OT2／징조표ver3.0　OT3\n        　・일그러짐표　DT／일그러짐표ver2.0　DT2／일그러짐표(야외)　DTO／일그러짐표(바다)　DTS／일그러짐표(저택・성)　DTM\n        　・세계왜곡표　　WDT／세계왜곡표2.0　WDT2\n        　・영구소실표　EDT\n        ・D66다이스 있음\n      INFO_MESSAGE_TEXT\n\n      register_prefix_from_super_class()\n\n      def initialize(command)\n        super(command)\n\n        @locale = :ko_kr\n      end\n\n      TABLES = translate_tables(:ko_kr).freeze\n    end\n  end\nend\n"], :names=>["<main>", "self", "require", "<module:BCDice>", "<module:GameSystem>", "<class:MonotoneMuseum_Korean>", "register_prefix_from_super_class", "initialize", "command", "@locale", "translate_tables", "freeze", "MonotoneMuseum"], :mappings=>"AAAAA,2BAAAA;EAAAA;;;EAEAC,IAAAC,SAAAA,CAAQF,mCAARE;EAEAF,OAAAG;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;;QAEE,8BAAKA,uBAAL;QAGA,gCAAOA,SAAP;QAGA,oCAAWA,oBAAX;QAGA,wCACNA,OADqB,GAErBA,6BAFqB,GAGrBA,yCAHqB,GAIrBA,sCAJqB,GAKrBA,kCALqB,GAMrBA,QANqB,GAOrBA,wBAPqB,GAQrBA,wCARqB,GASrBA,0EATqB,GAUrBA,8BAVqB,GAWrBA,eAXqB,GAYrBA,cAZM;QAeAJ,IAAAK,kCAAAA,CAAAA;;AAEAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAN,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMO,OAAN,CAAA,EAAA,IAAA;UAEAD,OAAAE,CAAAA,cAAU,OAAVA;QAHFF,CAAAA;QAMAF,OAAA,kCAASJ,IAAAS,kBAAAA,CAAiB,OAAjBA,CAAwBC,QAAAA,CAAAA,CAAjC;MAlCFN,GAAAA,WAAAA,EAA8BO,oBAA9BP;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAJAH;"}}]}
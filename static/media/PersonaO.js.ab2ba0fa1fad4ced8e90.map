{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/PersonaO.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class PersonaO < Base\n      # ゲームシステムのの識別子\n      ID = 'PersonaO'\n\n      # ゲームシステム名\n      NAME = 'ペルソナTRPG-O'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'へるそなTRPGO'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・基本判定\n        　PTx@y　x：目標値、y：クリティカル値（省略時は5）\n        　例）PT60　PT90@10\n\n        ・ダメージ計算\n        　nPD+(x+y*2)%(z-a)-b　n：ダイス個数、x：スキル固定値、y：ボーナス、z：バフ倍率、a：耐性、b：敵防御力\n        　nPD+(x+y*2)までがスキルによる素のダメージ、zおよびaは計算式を入れてよい。\n        　\n        　例）ソニックパンチ、力B2点、\n        　　　タルカジャがかかっており、打撃耐性あり、\n        　　　目標の物理防御力は2点\n        　　　\n        　　　2PD+(20+2*2)%(100+50-50)-2\n      INFO_MESSAGE_TEXT\n\n      register_prefix(\n        'PT',\n        '\\d+PD'\n      )\n\n      def eval_game_system_specific_command(command)\n        roll_attack(command) || roll_damage(command)\n      end\n\n      private\n\n      def roll_attack(command)\n        m = /^PT(-?\\d+)?(@(-?\\d+))?$/i.match(command)\n        unless m\n          return nil\n        end\n\n        success_rate = m[1].to_i\n        critical_border = m[3]&.to_i || 5\n\n        dice_value = @randomizer.roll_once(100)\n        result =\n          if dice_value <= critical_border\n            Result.critical(\"クリティカル\")\n          elsif dice_value <= success_rate\n            Result.success(\"成功\")\n          else\n            Result.failure(\"失敗\")\n          end\n\n        result.text = \"D100<=\#{success_rate}@\#{critical_border} ＞ \#{dice_value} ＞ \#{result.text}\"\n        return result\n      end\n\n      def roll_damage(command)\n        m = /^(\\d+)PD\\+(-?\\d+)%(-?\\d+)-(\\d+)$/i.match(command)\n        unless m\n          return nil\n        end\n\n        dice = m[1].to_i\n        kotei = m[2].to_i\n        hosei = m[3].to_i\n        bougyo = m[4].to_i\n\n        dice_list = @randomizer.roll_barabara(dice, 10)\n        dice_sum = dice_list.sum\n\n        dmg = dice_sum + (hosei * kotei / 100.0).to_i - bougyo\n\n        return \"\#{dice}D10+\#{kotei}＊\#{hosei}%-\#{bougyo} ＞ [\#{dice_list.join(',')}]+\#{kotei}＊\#{hosei}%-\#{bougyo} ＞ \#{dmg} ダメージ！\"\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:PersonaO>", "self", "register_prefix", "eval_game_system_specific_command", "command", "$ret_or_1", "roll_attack", "roll_damage", "private", "m", "match", "success_rate", "[]", "1", "to_i", "critical_border", "3", "5", "dice_value", "@randomizer", "roll_once", "100", "result", "<=", "Result", "critical", "success", "failure", "text=", "text", "dice", "kotei", "2", "hosei", "bougyo", "4", "dice_list", "roll_barabara", "10", "dice_sum", "sum", "dmg", "-", "+", "/", "*", "join", "Base"], :mappings=>"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"}}]}
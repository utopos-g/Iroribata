{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/BadLife.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class BadLife < Base\n      # ゲームシステムの識別子\n      ID = 'BadLife'\n\n      # ゲームシステム名\n      NAME = 'バッドライフ'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'はつとらいふ'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        ・判定：nBADm[±a][Cb±c][Fd±e][@X±f][!OP]　　[]内のコマンドは省略可。\n        ・BADコマンドは「BL」コマンドで代用可。\n        ・博徒は「GL」コマンドで〈波乱万丈〉の効果を適用。\n\n        「n」で振るダイス数、「m」で特性値、「±a」で達成値への修正値、\n        「Cb±c」でクリティカル値への修正、「Fd±e」でファンブル値への修正、\n        「@X」で目標難易度を指定。\n        「±a」「Cb±c」「Fd±e」[@X±f]部分は「4+1-3」などの複数回指定可。\n        「!OP」部分で、一部のスキルやガジェットの追加効果を指定可。\n        使用可能なコマンドは以下の通り。順不同、複数同時使用も可。\n        A：〈先見の明〉　　H：［重撃］\n\n        【書式例】\n        BAD → 1ダイスで達成値を表示。\n        3BAD10+2-1 → 3ダイスで修正+11の達成値を表示。\n        BL8@15 → 1ダイスで修正+8、難易度15の判定。\n        2BL8C-1F1@15 → 2ダイスで修正+8、C値-1、F値+1、難易度15の判定。\n        GL6@20 → 1ダイスで修正+6、難易度20の判定。〈波乱万丈〉の効果。\n        GL6@20!HA → 上記に加えて〈先見の明〉［重撃］の効果。\n\n        ・コードネーム表\n        怪盗：TRN　　　闇医者：DRN　　博徒：GRN\n        殺シ屋：KRN　　業師：SRN　　　遊ビ人：BRN\n\n        ・スキル表：SKL\n      MESSAGETEXT\n\n      register_prefix('\\d?(BAD|BL|GL)', '[TDGKSB]RN', 'SKL')\n\n      def eval_game_system_specific_command(command)\n        judgeDice(command) || roll_tables(command, TABLES)\n      end\n\n      def judgeDice(command)\n        unless (m = /(\\d+)?(BAD|BL|GL)([-+\\d]*)((C|F)([-+\\d]*)?)?((C|F)([-+\\d]*))?(@([-+\\d]*))?(!(\\D*))?/i.match(command))\n          return nil\n        end\n\n        diceCount = (m[1] || 1).to_i\n\n        critical = 20\n        fumble = 1\n\n        isStormy = (m[2] == 'GL') # 波乱万丈\n        if isStormy\n          critical -= 3\n          fumble += 1\n        end\n\n        modify = get_value(m[3])\n\n        critical, fumble = get_critival_fumble(critical, fumble, m[5], m[6])\n        critical, fumble = get_critival_fumble(critical, fumble, m[8], m[9])\n\n        target = get_value(m[11])\n        optionalText = m[13] || ''\n\n        return checkRoll(diceCount, modify, critical, fumble, target, isStormy, optionalText)\n      end\n\n      def get_critival_fumble(critical, fumble, marker, text)\n        case marker\n        when 'C'\n          critical += get_value(text)\n        when 'F'\n          fumble += get_value(text)\n        end\n\n        return critical, fumble\n      end\n\n      def checkRoll(diceCount, modify, critical, fumble, target, isStormy, optionalText)\n        isAnticipation = optionalText.include?('A')    # 先見の明\n        isHeavyAttack = optionalText.include?('H')     # 重撃\n\n        dice_list = @randomizer.roll_barabara(diceCount, 20)\n        diceText = dice_list.join(\",\")\n        diceMax = dice_list.max\n\n        diceMax = 5 if isHeavyAttack && diceMax <= 5   # 重撃\n\n        isCritical = (diceMax >= critical)\n        isFumble = (diceMax <= fumble)\n\n        diceMax = 20 if isCritical                     # クリティカル\n        total = diceMax + modify\n        total += 5 if isAnticipation && diceMax <= 7   # 先見の明\n        total = 0 if isFumble                          # ファンブル\n\n        result = \"\#{diceCount}D20\\(C:\#{critical},F:\#{fumble}\\) ＞ \"\n        result += \"\#{diceMax}\\[\#{diceText}\\]\"\n        result += \"\\+\" if modify > 0\n        result += modify.to_s if modify != 0\n        result += \"\\+5\" if isAnticipation && diceMax <= 7 # 先見の明\n        result += \" ＞ 達成値：\#{total}\"\n\n        if target > 0\n          success = total - target\n          result += \">=\#{target} 成功度：\#{success} ＞ \"\n\n          if isCritical\n            result += \"成功（クリティカル）\"\n          elsif total >= target\n            result += \"成功\"\n          else\n            result += \"失敗\"\n            result += \"（ファンブル）\" if isFumble\n          end\n        else\n          result += \" クリティカル\" if isCritical\n          result += \" ファンブル\" if isFumble\n        end\n\n        skillText = \"\"\n        skillText += \"〈波乱万丈〉\" if  isStormy\n        skillText += \"〈先見の明〉\" if  isAnticipation\n        skillText += \"［重撃］\" if isHeavyAttack\n        result += \" \#{skillText}\" if skillText != \"\"\n\n        return result\n      end\n\n      def get_value(text)\n        text ||= \"\"\n        return ArithmeticEvaluator.eval(text)\n      end\n\n      TABLES = {\n        \"SKL\" => DiceTable::Table.new(\n          \"スキル表\",\n          \"1D100\",\n          [\n            \"一撃離脱\",\n            \"一撃離脱\",\n            \"チェイサー\",\n            \"チェイサー\",\n            \"影の外套\",\n            \"影の外套\",\n            \"二段ジャンプ\",\n            \"二段ジャンプ\",\n            \"韋駄天\",\n            \"韋駄天\",\n            \"手練\",\n            \"手練\",\n            \"ハニーテイスト\",\n            \"ハニーテイスト\",\n            \"先見の明\",\n            \"先見の明\",\n            \"ベテラン\",\n            \"ベテラン\",\n            \"応急手当\",\n            \"応急手当\",\n            \"セラピー\",\n            \"セラピー\",\n            \"緊急治療\",\n            \"緊急治療\",\n            \"ゴールドディガー\",\n            \"ゴールドディガー\",\n            \"デイリーミッション\",\n            \"デイリーミッション\",\n            \"見切り\",\n            \"見切り\",\n            \"鷹の目\",\n            \"鷹の目\",\n            \"しびれ罠\",\n            \"しびれ罠\",\n            \"大逆転\",\n            \"大逆転\",\n            \"武器習熟：○○\",\n            \"武器習熟：○○\",\n            \"百発百中\",\n            \"百発百中\",\n            \"屈強な肉体\",\n            \"屈強な肉体\",\n            \"二刀流\",\n            \"二刀流\",\n            \"クイックリカバリー\",\n            \"クイックリカバリー\",\n            \"体験主義\",\n            \"体験主義\",\n            \"破釜沈船\",\n            \"破釜沈船\",\n            \"想定の範囲内\",\n            \"想定の範囲内\",\n            \"セカンドチャンス\",\n            \"セカンドチャンス\",\n            \"優秀な子分\",\n            \"優秀な子分\",\n            \"時間管理術\",\n            \"時間管理術\",\n            \"連撃術\",\n            \"連撃術\",\n            \"罵詈雑言\",\n            \"罵詈雑言\",\n            \"ケセラセラ\",\n            \"ケセラセラ\",\n            \"ダンス＆ミュージック\",\n            \"ダンス＆ミュージック\",\n            \"フェイント\",\n            \"フェイント\",\n            \"ヘイトコントロール\",\n            \"ヘイトコントロール\",\n            \"惜別\",\n            \"惜別\",\n            \"戦闘マシーン\",\n            \"戦闘マシーン\",\n            \"戦闘マシーン\",\n            \"名医\",\n            \"名医\",\n            \"名医\",\n            \"忍者\",\n            \"忍者\",\n            \"忍者\",\n            \"観察眼\",\n            \"観察眼\",\n            \"観察眼\",\n            \"クレバー\",\n            \"クレバー\",\n            \"クレバー\",\n            \"フェイスマン\",\n            \"フェイスマン\",\n            \"フェイスマン\",\n            \"スポーツマン\",\n            \"スポーツマン\",\n            \"スポーツマン\",\n            \"不屈\",\n            \"不屈\",\n            \"不屈\",\n            \"慎重\",\n            \"慎重\",\n            \"慎重\",\n            \"この表を2回振る\",\n          ]\n        ),\n        \"TRN\" => DiceTable::Table.new(\n          \"怪盗コードネーム表\",\n          \"1D20\",\n          [\n            \"フォックス\",\n            \"フォックス\",\n            \"ラット\",\n            \"ラット\",\n            \"キャット\",\n            \"キャット\",\n            \"タイガー\",\n            \"タイガー\",\n            \"シャーク\",\n            \"シャーク\",\n            \"コンドル\",\n            \"コンドル\",\n            \"スパイダー\",\n            \"スパイダー\",\n            \"ウルフ\",\n            \"ウルフ\",\n            \"コヨーテ\",\n            \"コヨーテ\",\n            \"ジャガー\",\n            \"ジャガー\",\n          ]\n        ),\n        \"DRN\" => DiceTable::Table.new(\n          \"闇医者コードネーム表\",\n          \"1D20\",\n          [\n            \"キャンサー\",\n            \"キャンサー\",\n            \"ヘッドエイク\",\n            \"ヘッドエイク\",\n            \"ブラッド\",\n            \"ブラッド\",\n            \"ウーンズ\",\n            \"ウーンズ\",\n            \"ポイズン\",\n            \"ポイズン\",\n            \"ペイン\",\n            \"ペイン\",\n            \"スリープ\",\n            \"スリープ\",\n            \"キュア\",\n            \"キュア\",\n            \"デス\",\n            \"デス\",\n            \"リーンカーネイション\",\n            \"リーンカーネイション\",\n          ]\n        ),\n        \"GRN\" => DiceTable::Table.new(\n          \"博徒コードネーム表\",\n          \"1D20\",\n          [\n            \"リトルダイス\",\n            \"リトルダイス\",\n            \"プラチナム\",\n            \"プラチナム\",\n            \"プレジデント\",\n            \"プレジデント\",\n            \"ドリーム\",\n            \"ドリーム\",\n            \"アクシデント\",\n            \"アクシデント\",\n            \"グリード\",\n            \"グリード\",\n            \"フォーチュン\",\n            \"フォーチュン\",\n            \"ミラクル\",\n            \"ミラクル\",\n            \"ホープ\",\n            \"ホープ\",\n            \"ビッグヒット\",\n            \"ビッグヒット\",\n          ]\n        ),\n        \"KRN\" => DiceTable::Table.new(\n          \"殺シ屋コードネーム表\",\n          \"1D20\",\n          [\n            \"ハンマー\",\n            \"ハンマー\",\n            \"アロー\",\n            \"アロー\",\n            \"ボマー\",\n            \"ボマー\",\n            \"キャノン\",\n            \"キャノン\",\n            \"ブレード\",\n            \"ブレード\",\n            \"スティング\",\n            \"スティング\",\n            \"ガロット\",\n            \"ガロット\",\n            \"パイルバンカー\",\n            \"パイルバンカー\",\n            \"レイザー\",\n            \"レイザー\",\n            \"カタナ\",\n            \"カタナ\",\n          ]\n        ),\n        \"SRN\" => DiceTable::Table.new(\n          \"業師コードネーム表\",\n          \"1D20\",\n          [\n            \"ローズ\",\n            \"ローズ\",\n            \"サクラ\",\n            \"サクラ\",\n            \"ライラック\",\n            \"ライラック\",\n            \"ダンデライオン\",\n            \"ダンデライオン\",\n            \"フリージア\",\n            \"フリージア\",\n            \"カクタス\",\n            \"カクタス\",\n            \"ロータス\",\n            \"ロータス\",\n            \"リリィ\",\n            \"リリィ\",\n            \"ラフレシア\",\n            \"ラフレシア\",\n            \"ヒヤシンス\",\n            \"ヒヤシンス\",\n          ]\n        ),\n        \"BRN\" => DiceTable::Table.new(\n          \"遊ビ人コードネーム表\",\n          \"1D20\",\n          [\n            \"モノポリー\",\n            \"モノポリー\",\n            \"ブリッジ\",\n            \"ブリッジ\",\n            \"チェッカー\",\n            \"チェッカー\",\n            \"アクワイア\",\n            \"アクワイア\",\n            \"ジャンケン\",\n            \"ジャンケン\",\n            \"トランプ\",\n            \"トランプ\",\n            \"ケイドロ\",\n            \"ケイドロ\",\n            \"パンデミック\",\n            \"パンデミック\",\n            \"スゴロク\",\n            \"スゴロク\",\n            \"キャベツカンテイ\",\n            \"キャベツカンテイ\",\n          ]\n        ),\n      }.freeze\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:BadLife>", "self", "register_prefix", "eval_game_system_specific_command", "command", "$ret_or_1", "judgeDice", "roll_tables", "TABLES", "m", "match", "diceCount", "[]", "1", "to_i", "critical", "20", "fumble", "isStormy", "2", "==", "-", "3", "+", "modify", "get_value", "get_critival_fumble", "5", "6", "8", "9", "target", "11", "optionalText", "13", "checkRoll", "marker", "text", "isAnticipation", "include?", "isHeavyAttack", "dice_list", "@randomizer", "roll_barabara", "diceText", "join", "diceMax", "max", "<=", "isCritical", ">=", "isFumble", "total", "7", "0", "result", ">", "to_s", "success", "skillText", "ArithmeticEvaluator", "eval", "DiceTable::Table", "DiceTable", "new", "freeze", "Base"], :mappings=>"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"}}]}
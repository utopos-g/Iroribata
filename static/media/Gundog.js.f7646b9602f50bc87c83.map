{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/Gundog.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class Gundog < Base\n      # ゲームシステムの識別子\n      ID = 'Gundog'\n\n      # ゲームシステム名\n      NAME = 'ガンドッグ'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'かんとつく'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        失敗、成功、クリティカル、ファンブルとロールの達成値の自動判定を行います。\n        nD9ロールも対応。\n      INFO_MESSAGE_TEXT\n\n      def initialize(command)\n        super(command)\n        @enabled_d9 = true\n      end\n\n      # ゲーム別成功度判定(1d100)\n      def result_1d100(total, _dice_total, cmp_op, target)\n        return nil unless cmp_op == :<=\n\n        if total >= 100\n          Result.fumble(\"ファンブル\")\n        elsif total <= 1\n          Result.critical(\"絶対成功(達成値1+SL)\")\n        elsif target == \"?\"\n          Result.nothing\n        elsif total <= target\n          dig10 = (total / 10).to_i\n          dig1 = total - dig10 * 10\n          dig10 = 0 if dig10 >= 10\n          dig1 = 0 if dig1 >= 10 # 条件的にはあり得ない(笑\n\n          if dig1 <= 0\n            Result.critical(\"クリティカル(達成値20+SL)\")\n          else\n            Result.success(\"成功(達成値\#{dig10 + dig1}+SL)\")\n          end\n        else\n          Result.failure(\"失敗\")\n        end\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:Gundog>", "initialize", "command", "self", "@enabled_d9", "result_1d100", "total", "_dice_total", "cmp_op", "target", ">=", "100", "Result", "fumble", "<=", "1", "critical", "nothing", "dig10", "/", "10", "to_i", "dig1", "-", "*", "0", "success", "+", "failure", "Base"], :mappings=>"AAAAA,2BAAAA;EAAAA;;EAEAA,OAAAC;EAAAA;;IAAAA;;IACEA,OAAAC;IAAAA;;MAAAA;;MACEA,OAAAC;MAAAA;;QAAAA;;;QAEE,8BAAKA,QAAL;QAGA,gCAAOA,OAAP;QAGA,oCAAWA,OAAX;QAGA,wCACNA,yCADqB,GAErBA,cAFM;;AAKAC,QAAAA,0BAAAA,sBAAeC,OAAfD;AAAAA,UAAAA;;UAAAA;;UACE,OAAAE,IAAA,EAAA,0DAAA,cAAA,EAAA,CAAMD,OAAN,CAAA,EAAA,IAAA;UACAD,OAAAG,CAAAA,kBAAc,IAAdA;QAFFH,CAAAA;QAMAD,OAAAK,4BAAAA,wBAAiBC,KAAD,EAAQC,WAAR,EAAqBC,MAArB,EAA6BC,MAA7CJ;AAAAA,UAAAA;;;UACE,KAAA,MAAkBG,MAAlB,EAA4B,IAA5B,CAAA;YAAA,OAAO;UAAP;UAEA,IAAA,QAASE,OAANJ,KAAMI,EAAGC,GAAHD,CAAT,CAAA;YACEL,OAAAO,YAAMC,QAAAA,CAAQR,OAARQ;UADR,OAEA,IAAA,QAAYC,OAANR,KAAMQ,EAAGC,CAAHD,CAAZ,CAAA;YACET,OAAAO,YAAMI,UAAAA,CAAUX,eAAVW;UADR,OAEA,IAAA,MAAMP,MAAN,EAAgBJ,GAAhB,CAAA;YACEA,OAAAO,YAAMK,SAAAA,CAAAA;UADR,OAEA,IAAA,QAAYH,OAANR,KAAMQ,EAAGL,MAAHK,CAAZ,CAAA;;YACEI,QAAeC,WAANb,KAAMa,EAAEC,EAAFD,CAAKE,MAAAA,CAAAA;YACpBC,OAAaC,UAANjB,KAAMiB,EAAQC,UAANN,KAAMM,EAAEJ,EAAFI,CAARD;YACb,IAAA,QAAmBb,OAANQ,KAAMR,EAAGU,EAAHV,CAAnB,CAAA;cAAAQ,QAAQO;YAAR;YACA,IAAA,QAAiBf,OAALY,IAAKZ,EAAGU,EAAHV,CAAjB,CAAA;cAAAY,OAAOG;YAAP;YAEA,IAAA,QAAQX,OAALQ,IAAKR,EAAGW,CAAHX,CAAR,CAAA;cACET,OAAAO,YAAMI,UAAAA,CAAUX,kBAAVW;YADR;cAGEX,OAAAO,YAAMc,SAAAA,CAAUrB,QAAD,GAAA,CAAesB,SAANT,KAAMS,EAAEL,IAAFK,CAAf,CAAA,GAAsBtB,MAA/BqB;YAHR;UANF;YAYErB,OAAAO,YAAMgB,SAAAA,CAASvB,IAATuB;UAZR;QATFvB,CAAAA;MAtBFL,GAAAA,WAAAA,EAAe6B,UAAf7B;IADFD,GAAAA,WAAAA;EADFD,GAAAA,WAAAA;AAFAD;"}}]}
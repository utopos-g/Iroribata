{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/TokyoGhostResearch.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class TokyoGhostResearch < Base\n      # ゲームシステムの識別子\n      ID = 'TokyoGhostResearch'\n\n      # ゲームシステム名\n      NAME = '東京ゴーストリサーチ'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'とうきようこおすとりさあち'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~MESSAGETEXT\n        判定\n        ・タスク処理は目標値以上の値で成功となります。\n          1d10>={目標値}\n          例：目標値「5」の場合、5～0で成功\n        各種表\n          ・導入表  OP\n          ・一般トラブル表  TB\n      MESSAGETEXT\n\n      # ダイスボットで使用するコマンドを配列で列挙する\n      register_prefix(\n        'OP', 'TB', 'TK?'\n      )\n\n      def eval_game_system_specific_command(command)\n        output =\n          case command.upcase\n\n          when /TK/i\n            return getCheckResult(command)\n\n          when 'OP'\n            tgr_opening_table\n          when 'TB'\n            tgr_common_trouble_table\n          end\n\n        return output\n      end\n\n      def getCheckResult(command)\n        output = \"\"\n        diff = 0\n\n        if /TK?<=(\\d+)/i =~ command\n          diff = Regexp.last_match(2).to_i\n        end\n\n        if diff > 0\n          output += \"(1D10<=\#{diff})\"\n\n          total_n = @randomizer.roll_once(10)\n          output += ' ＞ ' + total_n.to_s\n          output += ' ＞ ' + getCheckResultText(total_n, diff)\n        end\n        return output\n      end\n\n      def getCheckResultText(total_n, diff)\n        if total_n >= diff\n          result = \"成功\"\n        else\n          result = \"失敗\"\n        end\n\n        return result\n      end\n\n      # 導入表(1d10)[OP]\n      def tgr_opening_table\n        name = \"導入表\"\n        table = [\n          [1, \"【病休中断】体調不良または怪我で療養中だったが強制召喚された。\"],\n          [2, \"【忙殺中】別の業務で忙殺中であった。\"],\n          [3, \"【出張帰り】遠方での仕事から戻ったばかり。\"],\n          [4, \"【休暇取り消し】休暇中だったが呼び戻された。\"],\n          [5, \"【平常運転】いつもどおりの仕事中だった。\"],\n          [6, \"【休暇明け】十分に休養をとったあとで、心身ともに充実している。\"],\n          [7, \"【人生の岐路】人生の岐路にまさに差し掛かったところであった。\"],\n          [8, \"【同窓会】かつての同級生に会い、差を実感したばかりだった。\"],\n          [9, \"【転職活動中】転職を考えて求人サイトを見ているところだった。\"],\n          [10, \"【サボリ中】仕事をサボっているところに呼び出しがあった。\"],\n        ]\n        return get_1d10_table_result(name, table)\n      end\n\n      # 一般トラブル表(1d10)[TB]\n      def tgr_common_trouble_table\n        name = \"一般トラブル表\"\n        table = [\n          [1, \"トラブルが生じたが、間一髪、危機を脱した。【ダメージなし】\"],\n          [2, \"どうにかタスクを処理したが、非常に疲労してしまった。【肉体ダメージ1点】\"],\n          [3, \"タスク処理の過程で負傷してしまった。【肉体ダメージ1点】\"],\n          [4, \"恐怖や混乱、ストレスなどで精神の均衡を崩してしまった。【精神ダメージ1点】\"],\n          [5, \"過去のトラウマなどを思い出し、気分が沈んでしまった。【精神ダメージ1点】\"],\n          [6, \"自身の信用をキズつけたり、汚名を背負ってしまった。【環境ダメージ1点】\"],\n          [7, \"会社や上司の不興を買ってしまった。【環境ダメージ1点】\"],\n          [8, \"疲労困憊で動くこともままならない。【肉体ダメージ1点＋精神ダメージ1点】\"],\n          [9, \"負傷したうえ、会社に損害を与えてしまった。【肉体ダメージ1点＋環境ダメージ1点】\"],\n          [10, \"上司から厳しく叱責され、まずい立場になった。【精神ダメージ1点＋環境ダメージ1点】\"],\n        ]\n        return get_1d10_table_result(name, table)\n      end\n\n      def get_1d10_table_result(name, table)\n        dice = @randomizer.roll_once(10)\n        output = get_table_by_number(dice, table)\n        return get_table_result(name, dice, output)\n      end\n\n      def get_table_result(name, dice, output)\n        return \"\#{name}(\#{dice}) ＞ \#{output}\"\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:TokyoGhostResearch>", "self", "register_prefix", "eval_game_system_specific_command", "command", "output", "$ret_or_1", "upcase", "getCheckResult", "tgr_opening_table", "tgr_common_trouble_table", "diff", "0", "=~", "Regexp", "last_match", "2", "to_i", ">", "+", "total_n", "@randomizer", "roll_once", "10", "to_s", "getCheckResultText", ">=", "result", "name", "table", "1", "3", "4", "5", "6", "7", "8", "9", "get_1d10_table_result", "dice", "get_table_by_number", "get_table_result", "Base"], :mappings=>"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"}}]}
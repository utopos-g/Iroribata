{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/MamonoScramble.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class MamonoScramble < Base\n      # ゲームシステムの識別子\n      ID = 'MamonoScramble'\n\n      # ゲームシステム名\n      NAME = 'マモノスクランブル'\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = 'まものすくらんふる'\n\n      # ダイスボットの使い方\n      HELP_MESSAGE = <<~INFO_MESSAGE_TEXT\n        ・判定 xMS<=t\n        　[判定]を行う。成否と[マリョク]の上昇量を表示する。\n        　x: ダイス数\n        　t: 能力値（目標値）\n\n        ・アクシデント表 ACC\n      INFO_MESSAGE_TEXT\n\n      def initialize(command)\n        super(command)\n\n        @sides_implicit_d = 12\n        @round_type = RoundType::CEIL\n      end\n\n      def eval_game_system_specific_command(command)\n        roll_ability(command) || roll_tables(command, TABLES)\n      end\n\n      private\n\n      def roll_ability(command)\n        parser = Command::Parser.new(\"MS\", round_type: @round_type)\n                                .has_prefix_number\n                                .disable_modifier\n                                .restrict_cmp_op_to(:<=)\n        parsed = parser.parse(command)\n        unless parsed\n          return nil\n        end\n\n        dice_list = @randomizer.roll_barabara(parsed.prefix_number, 12).sort\n        count_success = dice_list.count { |value| value <= parsed.target_number }\n        count_one = dice_list.count(1)\n        is_critical = count_one > 0\n        has_twelve = dice_list.include?(12)\n\n        maryoku =\n          if has_twelve && !is_critical\n            0\n          else\n            count_success + count_one\n          end\n\n        sequence = [\n          \"(\#{parsed})\",\n          \"[\#{dice_list.join(',')}]\",\n          count_success > 0 ? \"成功, [マリョク]が\#{maryoku}上がる\" : \"失敗\"\n        ]\n\n        return Result.new.tap do |r|\n          r.text = sequence.join(\" ＞ \")\n          r.condition = count_success > 0\n          r.critical = r.success? && is_critical\n        end\n      end\n\n      TABLES = {\n        \"ACC\" => DiceTable::Table.new(\n          \"アクシデント表\",\n          \"1D12\",\n          [\n            \"思わぬ対立：[判定]で10〜12の出目を1個でも出した場合、【耐久値】を2点減らす。\",\n            \"都市の迷宮化：[判定]に【社会】を使用できない。\",\n            \"不穏な天気：特別な効果は発生しない。\",\n            \"突然の雷雨：エリアの[特性]に[雨]や[水たまり]などを足してもいい。\",\n            \"関係ない危機：[判定]に失敗したPCの【耐久値】を2点減らす。\",\n            \"からりと晴天：エリアの[特性]に[強い日光]や[日だまり]などを足してもいい。\",\n            \"謎のお祭り：[判定]で1〜3の出目を1個でも出した場合、【耐久値】を2点回復する。\",\n            \"すごい人ごみ：エリアの[特性]に[野次馬]や[観光客]などを足してもいい。\",\n            \"マリョク乱気流：[判定]に【異質】を使用できない。\",\n            \"魔術テロ事件：GMが1Dをロールする。出目が1〜3なら【身体】、出目が4〜6なら【異質】、出目が7〜9なら【社会】が[判定]で使えない。10〜12は何も起きない。\",\n            \"マリョク低気圧：[判定]に【身体】を使用できない。\",\n            \"平穏な時間：特別な効果は発生しない。\",\n          ]\n        )\n      }.freeze\n\n      register_prefix('\\d+MS', TABLES.keys)\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:MamonoScramble>", "initialize", "command", "self", "@sides_implicit_d", "12", "@round_type", "RoundType::CEIL", "RoundType", "eval_game_system_specific_command", "$ret_or_1", "roll_ability", "roll_tables", "TABLES", "private", "parser", "Command::Parser", "Command", "new", "has_prefix_number", "disable_modifier", "restrict_cmp_op_to", "parsed", "parse", "dice_list", "@randomizer", "roll_barabara", "prefix_number", "sort", "count_success", "count", "block in roll_ability", "value", "block (2 levels) in roll_ability", "<=", "target_number", "count_one", "1", "is_critical", ">", "0", "has_twelve", "include?", "maryoku", "+", "sequence", "join", "tap", "Result", "r", "text=", "condition=", "critical=", "success?", "DiceTable::Table", "DiceTable", "freeze", "register_prefix", "keys", "Base"], :mappings=>"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"}}]}
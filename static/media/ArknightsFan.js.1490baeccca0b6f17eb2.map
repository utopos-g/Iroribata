{:version=>3, :sections=>[{:offset=>{:line=>0, :column=>0}, :map=>{:version=>3, :sourceRoot=>"", :sources=>["bcdice/game_system/ArknightsFan.rb"], :sourcesContent=>["# frozen_string_literal: true\n\nmodule BCDice\n  module GameSystem\n    class ArknightsFan < Base\n      # ゲームシステムの識別子\n      ID = \"ArknightsFan\"\n\n      # ゲームシステム名\n      NAME = \"アークナイツTRPG by Dapto\"\n\n      # ゲームシステム名の読みがな\n      SORT_KEY = \"ああくないつTRPGはいたふと\"\n\n      HELP_MESSAGE = <<~TEXT\n        ■ 判定 (nADm>=x)\n          nDmのダイスロールをして、x 以下であれば成功。\n          出目が91以上でエラー。\n          出目が10以下でクリティカル。\n\n        ■ 判定 (nABm>=x)\n          nBmのダイスロールをして、\n            x 以下であれば成功数+1。\n            出目が91以上でエラー。成功数+1。\n            出目が10以下でクリティカル。成功数-1。\n          上記による成功数をカウント。\n\n        ■ 判定 (nABm>=x--役職)\n          nBmのダイスロールをして、\n            出目が x 以下であれば成功数+1。\n            出目が91以上でエラー。成功数+1。\n            出目が10以下でクリティカル。成功数-1。\n          上記による成功数をカウントした上で、以下の役職による成功数増加効果を適応。\n            狙撃（SNIPER） 成功数1以上のとき、成功数+1。\n      TEXT\n\n      register_prefix('\\d*AD\\d*', '\\d*AB\\d*', '--ADDICTION', '--WORSENING')\n\n      def eval_game_system_specific_command(command)\n        roll_ad(command) || roll_ab(command) || roll_addiction(command) || roll_worsening(command)\n      end\n\n      private\n\n      def roll_ad(command)\n        m = /^(\\d*)AD(\\d*)<=(\\d+)$/.match(command)\n        return nil unless m\n\n        times = m[1]\n        sides = m[2]\n        target = m[3].to_i\n        times = !times.empty? ? times.to_i : 1\n        sides = !sides.empty? ? sides.to_i : 100\n        return roll_d(command, times, sides, target)\n      end\n\n      def roll_ab(command)\n        m = /^(\\d*)AB(\\d*)<=(\\d+)(?:--([^\\d\\s]+)(0)?)?$/.match(command)\n        return nil unless m\n\n        times = m[1]\n        sides = m[2]\n        target = m[3].to_i\n        type = m[4]\n        suffix = m[5]\n        times = !times.empty? ? times.to_i : 1\n        sides = !sides.empty? ? sides.to_i : 100\n\n        if suffix || type.nil?\n          roll_b(command, times, sides, target)\n        else\n          roll_b_withtype(command, times, sides, target, type)\n        end\n      end\n\n      def roll_d(command, times, sides, target)\n        dice_list = @randomizer.roll_barabara(times, sides).sort\n        total = dice_list.sum\n        success = total <= target\n\n        crierror =\n          if total <= 10\n            \"Critical\"\n          elsif total >= 91\n            \"Error\"\n          else\n            \"Neutral\"\n          end\n\n        result =\n          if success && (crierror == \"Critical\")\n            \"クリティカル！\"\n          elsif success && (crierror == \"Neutral\")\n            \"成功\"\n          elsif success && (crierror == \"Error\")\n            \"成功\"\n          elsif !success && (crierror == \"Critical\")\n            \"失敗\"\n          elsif !success && (crierror == \"Neutral\")\n            \"失敗\"\n          elsif !success && (crierror == \"Error\")\n            \"エラー\"\n          end\n\n        if times == 1\n          return \"(\#{command}) ＞ \#{dice_list.join(',')} ＞ \#{result}\"\n        else\n          return \"(\#{command}) ＞ \#{total}[\#{dice_list.join(',')}] ＞ \#{result}\"\n        end\n      end\n\n      def roll_b(command, times, sides, target)\n        dice_list, success_count, critical_count, error_count = process_b(times, sides, target)\n        result_count = success_count + critical_count - error_count\n\n        return \"(\#{command}) ＞ [\#{dice_list.join(',')}] ＞ \#{success_count}+\#{critical_count}C-\#{error_count}E ＞ 成功数\#{result_count}\"\n      end\n\n      def roll_b_withtype(command, times, sides, target, type)\n        dice_list, success_count, critical_count, error_count = process_b(times, sides, target)\n        result_count = success_count + critical_count - error_count\n\n        type_effect =\n          if (type == \"SNIPER\") && (result_count > 0)\n            1\n          else\n            0\n          end\n        result_count += type_effect\n\n        return \"(\#{command}) ＞ [\#{dice_list.join(',')}] ＞ \#{success_count}+\#{critical_count}C-\#{error_count}E+\#{type_effect}(\#{type}) ＞ 成功数\#{result_count}\"\n      end\n\n      def process_b(times, sides, target)\n        dice_list = @randomizer.roll_barabara(times, sides).sort\n\n        success_count = 0\n        critical_count = 0\n        error_count = 0\n\n        dice_list.each do |value|\n          success_count += 1 if value <= target\n          critical_count += 1 if value <= 10\n          error_count += 1 if value >= 91\n        end\n\n        return [dice_list, success_count, critical_count, error_count]\n      end\n\n      ADDICTION_TABLE = [\n        \"中枢神経障害\",\n        \"多臓器不全\",\n        \"急性ストレス反応\",\n      ].freeze\n\n      def roll_addiction(command)\n        return nil if command != \"--ADDICTION\"\n\n        value = @randomizer.roll_once(3)\n        chosen = ADDICTION_TABLE[value - 1]\n\n        return \"--ADDICTION ＞ \#{chosen}\"\n      end\n\n      WORSENING_TABLE = [\n        \"末梢神経障害\",\n        \"内臓機能不全\",\n        \"精神症状\",\n      ].freeze\n\n      def roll_worsening(command)\n        return nil if command != \"--WORSENING\"\n\n        value = @randomizer.roll_once(3)\n        chosen = WORSENING_TABLE[value - 1]\n        elapse = @randomizer.roll_once(6) + 1\n\n        return \"--WORSENING ＞ \#{chosen}: \#{elapse} rounds\"\n      end\n    end\n  end\nend\n"], :names=>["<main>", "<module:BCDice>", "<module:GameSystem>", "<class:ArknightsFan>", "self", "register_prefix", "eval_game_system_specific_command", "command", "$ret_or_1", "$ret_or_2", "$ret_or_3", "roll_ad", "roll_ab", "roll_addiction", "roll_worsening", "private", "m", "match", "times", "[]", "1", "sides", "2", "target", "3", "to_i", "empty?", "100", "roll_d", "type", "4", "suffix", "5", "nil?", "roll_b", "roll_b_withtype", "dice_list", "@randomizer", "roll_barabara", "sort", "total", "sum", "success", "<=", "crierror", "10", ">=", "91", "result", "join", "process_b", "success_count", "critical_count", "error_count", "result_count", "-", "+", "type_effect", ">", "0", "each", "block in process_b", "value", "block (2 levels) in process_b", "freeze", "roll_once", "chosen", "ADDICTION_TABLE", "WORSENING_TABLE", "elapse", "6", "Base"], :mappings=>"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"}}]}